
// Code generated by stanc v2.28.1
#include <stan/model/model_header.hpp>
namespace or_30_model_namespace {

using stan::io::dump;
using stan::model::assign;
using stan::model::index_uni;
using stan::model::index_max;
using stan::model::index_min;
using stan::model::index_min_max;
using stan::model::index_multi;
using stan::model::index_omni;
using stan::model::model_base_crtp;
using stan::model::rvalue;
using namespace stan::math;


stan::math::profile_map profiles__;
static constexpr std::array<const char*, 1458> locations_array__ = 
{" (found before start of program)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 7, column 4 to column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 11, column 1 to column 20)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 147, column 1 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 148, column 1 to column 18)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 149, column 1 to column 18)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 150, column 1 to column 18)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 151, column 1 to column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 152, column 1 to column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 153, column 1 to column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 154, column 1 to column 16)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 155, column 1 to column 16)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 156, column 1 to column 16)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 157, column 1 to column 20)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 158, column 1 to column 16)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 159, column 1 to column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 160, column 1 to column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 161, column 1 to column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 162, column 1 to column 14)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 163, column 1 to column 14)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 164, column 1 to column 14)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 165, column 1 to column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 166, column 1 to column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 167, column 1 to column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 168, column 1 to column 20)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 169, column 2 to column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 170, column 1 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 171, column 1 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 172, column 1 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 173, column 1 to column 18)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 174, column 1 to column 18)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 175, column 1 to column 18)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 12, column 2 to column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 42, column 62 to column 77)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 43, column 62 to column 85)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 45, column 64 to column 116)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 46, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 47, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 48, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 49, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 50, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 51, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 52, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 53, column 64 to column 110)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 54, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 55, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 56, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 57, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 58, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 59, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 60, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 61, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 62, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 63, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 64, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 65, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 66, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 67, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 68, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 69, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 70, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 71, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 72, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 73, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 74, column 64 to column 111)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 81, column 66 to column 105)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 82, column 66 to column 105)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 80, column 68 to line 84, column 65)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 76, column 66 to column 104)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 77, column 66 to column 104)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 75, column 311 to line 79, column 65)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 75, column 64 to line 84, column 65)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 44, column 82 to line 85, column 63)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 44, column 62 to line 85, column 63)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 86, column 62 to column 482)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 42, column 60 to line 87, column 61)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 41, column 75 to line 89, column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 41, column 58 to line 89, column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 40, column 73 to line 91, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 40, column 56 to line 91, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 39, column 71 to line 93, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 39, column 54 to line 93, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 38, column 69 to line 95, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 38, column 52 to line 95, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 37, column 67 to line 97, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 37, column 50 to line 97, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 36, column 65 to line 99, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 36, column 48 to line 99, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 35, column 63 to line 101, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 35, column 46 to line 101, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 34, column 61 to line 103, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 34, column 44 to line 103, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 33, column 59 to line 105, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 33, column 42 to line 105, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 32, column 57 to line 107, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 32, column 40 to line 107, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 31, column 54 to line 109, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 31, column 38 to line 109, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 30, column 53 to line 111, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 30, column 36 to line 111, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 29, column 51 to line 113, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 29, column 34 to line 113, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 28, column 49 to line 115, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 28, column 32 to line 115, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 27, column 47 to line 117, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 27, column 30 to line 117, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 26, column 45 to line 119, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 26, column 28 to line 119, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 25, column 43 to line 121, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 25, column 26 to line 121, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 24, column 41 to line 123, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 24, column 24 to line 123, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 23, column 39 to line 125, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 23, column 22 to line 125, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 22, column 37 to line 127, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 22, column 20 to line 127, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 21, column 35 to line 129, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 21, column 18 to line 129, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 20, column 32 to line 131, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 20, column 16 to line 131, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 19, column 31 to line 133, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 19, column 14 to line 133, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 18, column 28 to line 135, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 18, column 12 to line 135, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 17, column 26 to line 137, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 17, column 10 to line 137, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 16, column 24 to line 139, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 16, column 8 to line 139, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 15, column 22 to line 141, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 15, column 6 to line 141, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 14, column 20 to line 143, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 14, column 4 to line 143, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 13, column 18 to line 145, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 13, column 2 to line 145, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 176, column 2 to column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 205, column 60 to column 75)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 206, column 60 to column 83)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 208, column 62 to column 481)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 207, column 80 to line 210, column 61)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 207, column 60 to line 210, column 61)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 211, column 60 to column 463)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 205, column 58 to line 212, column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 204, column 73 to line 214, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 204, column 56 to line 214, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 203, column 71 to line 216, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 203, column 54 to line 216, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 202, column 69 to line 218, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 202, column 52 to line 218, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 201, column 67 to line 220, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 201, column 50 to line 220, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 200, column 65 to line 222, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 200, column 48 to line 222, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 199, column 63 to line 224, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 199, column 46 to line 224, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 198, column 61 to line 226, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 198, column 44 to line 226, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 197, column 59 to line 228, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 197, column 42 to line 228, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 196, column 57 to line 230, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 196, column 40 to line 230, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 195, column 55 to line 232, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 195, column 38 to line 232, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 194, column 53 to line 234, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 194, column 36 to line 234, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 193, column 51 to line 236, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 193, column 34 to line 236, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 192, column 49 to line 238, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 192, column 32 to line 238, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 191, column 47 to line 240, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 191, column 30 to line 240, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 190, column 45 to line 242, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 190, column 28 to line 242, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 189, column 43 to line 244, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 189, column 26 to line 244, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 188, column 41 to line 246, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 188, column 24 to line 246, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 187, column 39 to line 248, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 187, column 22 to line 248, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 186, column 37 to line 250, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 186, column 20 to line 250, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 185, column 35 to line 252, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 185, column 18 to line 252, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 184, column 32 to line 254, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 184, column 16 to line 254, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 183, column 31 to line 256, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 183, column 14 to line 256, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 182, column 28 to line 258, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 182, column 12 to line 258, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 181, column 26 to line 260, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 181, column 10 to line 260, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 180, column 24 to line 262, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 180, column 8 to line 262, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 179, column 22 to line 264, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 179, column 6 to line 264, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 178, column 20 to line 266, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 178, column 4 to line 266, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 177, column 18 to line 268, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 177, column 2 to line 268, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 269, column 2 to column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 297, column 58 to column 73)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 298, column 58 to column 81)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 300, column 60 to column 462)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 299, column 78 to line 302, column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 299, column 58 to line 302, column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 303, column 58 to column 444)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 297, column 56 to line 304, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 296, column 71 to line 306, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 296, column 54 to line 306, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 295, column 69 to line 308, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 295, column 52 to line 308, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 294, column 67 to line 310, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 294, column 50 to line 310, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 293, column 65 to line 312, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 293, column 48 to line 312, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 292, column 63 to line 314, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 292, column 46 to line 314, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 291, column 61 to line 316, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 291, column 44 to line 316, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 290, column 59 to line 318, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 290, column 42 to line 318, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 289, column 57 to line 320, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 289, column 40 to line 320, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 288, column 55 to line 322, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 288, column 38 to line 322, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 287, column 53 to line 324, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 287, column 36 to line 324, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 286, column 51 to line 326, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 286, column 34 to line 326, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 285, column 49 to line 328, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 285, column 32 to line 328, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 284, column 47 to line 330, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 284, column 30 to line 330, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 283, column 45 to line 332, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 283, column 28 to line 332, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 282, column 43 to line 334, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 282, column 26 to line 334, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 281, column 41 to line 336, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 281, column 24 to line 336, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 280, column 39 to line 338, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 280, column 22 to line 338, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 279, column 37 to line 340, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 279, column 20 to line 340, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 278, column 35 to line 342, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 278, column 18 to line 342, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 277, column 33 to line 344, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 277, column 16 to line 344, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 276, column 31 to line 346, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 276, column 14 to line 346, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 275, column 28 to line 348, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 275, column 12 to line 348, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 274, column 26 to line 350, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 274, column 10 to line 350, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 273, column 24 to line 352, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 273, column 8 to line 352, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 272, column 22 to line 354, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 272, column 6 to line 354, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 271, column 20 to line 356, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 271, column 4 to line 356, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 270, column 18 to line 358, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 270, column 2 to line 358, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 359, column 2 to column 30)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 386, column 56 to column 71)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 387, column 56 to column 79)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 389, column 58 to column 443)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 388, column 76 to line 391, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 388, column 56 to line 391, column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 392, column 56 to column 426)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 386, column 54 to line 393, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 385, column 69 to line 395, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 385, column 52 to line 395, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 384, column 67 to line 397, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 384, column 50 to line 397, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 383, column 65 to line 399, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 383, column 48 to line 399, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 382, column 63 to line 401, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 382, column 46 to line 401, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 381, column 61 to line 403, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 381, column 44 to line 403, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 380, column 59 to line 405, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 380, column 42 to line 405, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 379, column 57 to line 407, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 379, column 40 to line 407, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 378, column 55 to line 409, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 378, column 38 to line 409, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 377, column 53 to line 411, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 377, column 36 to line 411, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 376, column 51 to line 413, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 376, column 34 to line 413, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 375, column 49 to line 415, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 375, column 32 to line 415, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 374, column 47 to line 417, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 374, column 30 to line 417, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 373, column 45 to line 419, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 373, column 28 to line 419, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 372, column 43 to line 421, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 372, column 26 to line 421, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 371, column 41 to line 423, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 371, column 24 to line 423, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 370, column 39 to line 425, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 370, column 22 to line 425, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 369, column 37 to line 427, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 369, column 20 to line 427, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 368, column 35 to line 429, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 368, column 18 to line 429, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 367, column 33 to line 431, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 367, column 16 to line 431, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 366, column 31 to line 433, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 366, column 14 to line 433, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 365, column 29 to line 435, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 365, column 12 to line 435, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 364, column 26 to line 437, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 364, column 10 to line 437, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 363, column 24 to line 439, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 363, column 8 to line 439, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 362, column 22 to line 441, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 362, column 6 to line 441, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 361, column 20 to line 443, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 361, column 4 to line 443, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 360, column 18 to line 445, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 360, column 2 to line 445, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 446, column 2 to column 30)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 472, column 54 to column 69)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 473, column 54 to column 77)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 475, column 56 to column 425)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 474, column 74 to line 477, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 474, column 54 to line 477, column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 478, column 54 to column 408)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 472, column 52 to line 479, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 471, column 67 to line 481, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 471, column 50 to line 481, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 470, column 65 to line 483, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 470, column 48 to line 483, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 469, column 63 to line 485, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 469, column 46 to line 485, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 468, column 61 to line 487, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 468, column 44 to line 487, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 467, column 59 to line 489, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 467, column 42 to line 489, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 466, column 57 to line 491, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 466, column 40 to line 491, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 465, column 55 to line 493, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 465, column 38 to line 493, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 464, column 53 to line 495, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 464, column 36 to line 495, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 463, column 51 to line 497, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 463, column 34 to line 497, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 462, column 49 to line 499, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 462, column 32 to line 499, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 461, column 47 to line 501, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 461, column 30 to line 501, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 460, column 45 to line 503, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 460, column 28 to line 503, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 459, column 43 to line 505, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 459, column 26 to line 505, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 458, column 41 to line 507, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 458, column 24 to line 507, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 457, column 39 to line 509, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 457, column 22 to line 509, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 456, column 37 to line 511, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 456, column 20 to line 511, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 455, column 35 to line 513, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 455, column 18 to line 513, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 454, column 33 to line 515, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 454, column 16 to line 515, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 453, column 31 to line 517, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 453, column 14 to line 517, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 452, column 29 to line 519, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 452, column 12 to line 519, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 451, column 27 to line 521, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 451, column 10 to line 521, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 450, column 24 to line 523, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 450, column 8 to line 523, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 449, column 22 to line 525, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 449, column 6 to line 525, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 448, column 20 to line 527, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 448, column 4 to line 527, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 447, column 18 to line 529, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 447, column 2 to line 529, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 530, column 2 to column 30)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 555, column 52 to column 67)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 556, column 52 to column 75)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 558, column 54 to column 407)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 557, column 72 to line 560, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 557, column 52 to line 560, column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 561, column 52 to column 390)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 555, column 50 to line 562, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 554, column 65 to line 564, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 554, column 48 to line 564, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 553, column 63 to line 566, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 553, column 46 to line 566, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 552, column 61 to line 568, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 552, column 44 to line 568, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 551, column 59 to line 570, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 551, column 42 to line 570, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 550, column 57 to line 572, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 550, column 40 to line 572, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 549, column 55 to line 574, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 549, column 38 to line 574, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 548, column 53 to line 576, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 548, column 36 to line 576, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 547, column 51 to line 578, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 547, column 34 to line 578, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 546, column 49 to line 580, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 546, column 32 to line 580, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 545, column 47 to line 582, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 545, column 30 to line 582, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 544, column 45 to line 584, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 544, column 28 to line 584, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 543, column 43 to line 586, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 543, column 26 to line 586, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 542, column 41 to line 588, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 542, column 24 to line 588, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 541, column 39 to line 590, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 541, column 22 to line 590, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 540, column 37 to line 592, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 540, column 20 to line 592, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 539, column 35 to line 594, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 539, column 18 to line 594, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 538, column 33 to line 596, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 538, column 16 to line 596, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 537, column 31 to line 598, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 537, column 14 to line 598, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 536, column 29 to line 600, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 536, column 12 to line 600, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 535, column 27 to line 602, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 535, column 10 to line 602, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 534, column 25 to line 604, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 534, column 8 to line 604, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 533, column 22 to line 606, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 533, column 6 to line 606, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 532, column 20 to line 608, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 532, column 4 to line 608, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 531, column 18 to line 610, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 531, column 2 to line 610, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 611, column 2 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 635, column 50 to column 65)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 636, column 50 to column 73)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 638, column 52 to column 389)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 637, column 70 to line 640, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 637, column 50 to line 640, column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 641, column 50 to column 373)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 635, column 48 to line 642, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 634, column 63 to line 644, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 634, column 46 to line 644, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 633, column 61 to line 646, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 633, column 44 to line 646, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 632, column 59 to line 648, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 632, column 42 to line 648, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 631, column 57 to line 650, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 631, column 40 to line 650, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 630, column 55 to line 652, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 630, column 38 to line 652, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 629, column 53 to line 654, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 629, column 36 to line 654, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 628, column 51 to line 656, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 628, column 34 to line 656, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 627, column 49 to line 658, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 627, column 32 to line 658, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 626, column 47 to line 660, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 626, column 30 to line 660, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 625, column 45 to line 662, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 625, column 28 to line 662, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 624, column 43 to line 664, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 624, column 26 to line 664, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 623, column 41 to line 666, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 623, column 24 to line 666, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 622, column 39 to line 668, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 622, column 22 to line 668, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 621, column 37 to line 670, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 621, column 20 to line 670, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 620, column 35 to line 672, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 620, column 18 to line 672, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 619, column 33 to line 674, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 619, column 16 to line 674, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 618, column 31 to line 676, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 618, column 14 to line 676, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 617, column 29 to line 678, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 617, column 12 to line 678, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 616, column 27 to line 680, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 616, column 10 to line 680, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 615, column 25 to line 682, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 615, column 8 to line 682, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 614, column 23 to line 684, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 614, column 6 to line 684, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 613, column 20 to line 686, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 613, column 4 to line 686, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 612, column 18 to line 688, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 612, column 2 to line 688, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 689, column 2 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 712, column 48 to column 63)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 713, column 48 to column 71)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 715, column 50 to column 372)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 714, column 68 to line 717, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 714, column 48 to line 717, column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 718, column 48 to column 356)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 712, column 46 to line 719, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 711, column 61 to line 721, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 711, column 44 to line 721, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 710, column 59 to line 723, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 710, column 42 to line 723, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 709, column 57 to line 725, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 709, column 40 to line 725, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 708, column 55 to line 727, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 708, column 38 to line 727, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 707, column 53 to line 729, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 707, column 36 to line 729, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 706, column 51 to line 731, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 706, column 34 to line 731, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 705, column 49 to line 733, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 705, column 32 to line 733, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 704, column 47 to line 735, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 704, column 30 to line 735, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 703, column 45 to line 737, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 703, column 28 to line 737, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 702, column 43 to line 739, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 702, column 26 to line 739, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 701, column 41 to line 741, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 701, column 24 to line 741, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 700, column 39 to line 743, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 700, column 22 to line 743, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 699, column 37 to line 745, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 699, column 20 to line 745, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 698, column 35 to line 747, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 698, column 18 to line 747, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 697, column 33 to line 749, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 697, column 16 to line 749, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 696, column 31 to line 751, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 696, column 14 to line 751, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 695, column 29 to line 753, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 695, column 12 to line 753, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 694, column 27 to line 755, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 694, column 10 to line 755, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 693, column 25 to line 757, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 693, column 8 to line 757, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 692, column 23 to line 759, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 692, column 6 to line 759, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 691, column 21 to line 761, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 691, column 4 to line 761, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 690, column 18 to line 763, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 690, column 2 to line 763, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 764, column 2 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 786, column 46 to column 61)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 787, column 46 to column 69)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 789, column 48 to column 355)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 788, column 66 to line 791, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 788, column 46 to line 791, column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 792, column 46 to column 339)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 786, column 44 to line 793, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 785, column 59 to line 795, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 785, column 42 to line 795, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 784, column 57 to line 797, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 784, column 40 to line 797, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 783, column 55 to line 799, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 783, column 38 to line 799, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 782, column 53 to line 801, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 782, column 36 to line 801, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 781, column 51 to line 803, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 781, column 34 to line 803, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 780, column 49 to line 805, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 780, column 32 to line 805, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 779, column 47 to line 807, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 779, column 30 to line 807, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 778, column 45 to line 809, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 778, column 28 to line 809, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 777, column 43 to line 811, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 777, column 26 to line 811, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 776, column 41 to line 813, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 776, column 24 to line 813, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 775, column 39 to line 815, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 775, column 22 to line 815, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 774, column 37 to line 817, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 774, column 20 to line 817, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 773, column 35 to line 819, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 773, column 18 to line 819, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 772, column 33 to line 821, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 772, column 16 to line 821, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 771, column 31 to line 823, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 771, column 14 to line 823, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 770, column 29 to line 825, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 770, column 12 to line 825, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 769, column 27 to line 827, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 769, column 10 to line 827, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 768, column 25 to line 829, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 768, column 8 to line 829, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 767, column 23 to line 831, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 767, column 6 to line 831, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 766, column 21 to line 833, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 766, column 4 to line 833, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 765, column 19 to line 835, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 765, column 2 to line 835, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 836, column 2 to column 30)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 857, column 44 to column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 858, column 44 to column 67)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 860, column 46 to column 339)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 859, column 65 to line 862, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 859, column 44 to line 862, column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 863, column 44 to column 322)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 857, column 42 to line 864, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 856, column 57 to line 866, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 856, column 40 to line 866, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 855, column 55 to line 868, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 855, column 38 to line 868, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 854, column 53 to line 870, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 854, column 36 to line 870, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 853, column 51 to line 872, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 853, column 34 to line 872, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 852, column 49 to line 874, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 852, column 32 to line 874, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 851, column 47 to line 876, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 851, column 30 to line 876, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 850, column 45 to line 878, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 850, column 28 to line 878, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 849, column 43 to line 880, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 849, column 26 to line 880, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 848, column 41 to line 882, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 848, column 24 to line 882, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 847, column 39 to line 884, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 847, column 22 to line 884, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 846, column 37 to line 886, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 846, column 20 to line 886, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 845, column 35 to line 888, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 845, column 18 to line 888, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 844, column 33 to line 890, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 844, column 16 to line 890, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 843, column 31 to line 892, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 843, column 14 to line 892, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 842, column 29 to line 894, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 842, column 12 to line 894, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 841, column 27 to line 896, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 841, column 10 to line 896, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 840, column 25 to line 898, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 840, column 8 to line 898, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 839, column 23 to line 900, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 839, column 6 to line 900, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 838, column 21 to line 902, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 838, column 4 to line 902, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 837, column 19 to line 904, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 837, column 2 to line 904, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 905, column 2 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 925, column 42 to column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 926, column 42 to column 65)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 928, column 44 to column 322)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 927, column 63 to line 930, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 927, column 42 to line 930, column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 931, column 42 to column 305)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 925, column 40 to line 932, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 924, column 55 to line 934, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 924, column 38 to line 934, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 923, column 53 to line 936, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 923, column 36 to line 936, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 922, column 51 to line 938, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 922, column 34 to line 938, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 921, column 49 to line 940, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 921, column 32 to line 940, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 920, column 47 to line 942, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 920, column 30 to line 942, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 919, column 45 to line 944, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 919, column 28 to line 944, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 918, column 43 to line 946, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 918, column 26 to line 946, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 917, column 41 to line 948, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 917, column 24 to line 948, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 916, column 39 to line 950, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 916, column 22 to line 950, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 915, column 37 to line 952, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 915, column 20 to line 952, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 914, column 35 to line 954, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 914, column 18 to line 954, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 913, column 33 to line 956, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 913, column 16 to line 956, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 912, column 31 to line 958, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 912, column 14 to line 958, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 911, column 29 to line 960, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 911, column 12 to line 960, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 910, column 27 to line 962, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 910, column 10 to line 962, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 909, column 25 to line 964, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 909, column 8 to line 964, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 908, column 23 to line 966, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 908, column 6 to line 966, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 907, column 21 to line 968, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 907, column 4 to line 968, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 906, column 19 to line 970, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 906, column 2 to line 970, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 971, column 2 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 990, column 40 to column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 991, column 40 to column 63)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 993, column 42 to column 305)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 992, column 61 to line 995, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 992, column 40 to line 995, column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 996, column 40 to column 288)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 990, column 38 to line 997, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 989, column 53 to line 999, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 989, column 36 to line 999, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 988, column 51 to line 1001, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 988, column 34 to line 1001, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 987, column 49 to line 1003, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 987, column 32 to line 1003, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 986, column 47 to line 1005, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 986, column 30 to line 1005, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 985, column 45 to line 1007, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 985, column 28 to line 1007, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 984, column 43 to line 1009, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 984, column 26 to line 1009, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 983, column 41 to line 1011, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 983, column 24 to line 1011, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 982, column 39 to line 1013, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 982, column 22 to line 1013, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 981, column 37 to line 1015, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 981, column 20 to line 1015, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 980, column 35 to line 1017, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 980, column 18 to line 1017, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 979, column 33 to line 1019, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 979, column 16 to line 1019, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 978, column 31 to line 1021, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 978, column 14 to line 1021, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 977, column 29 to line 1023, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 977, column 12 to line 1023, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 976, column 27 to line 1025, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 976, column 10 to line 1025, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 975, column 25 to line 1027, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 975, column 8 to line 1027, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 974, column 23 to line 1029, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 974, column 6 to line 1029, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 973, column 21 to line 1031, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 973, column 4 to line 1031, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 972, column 19 to line 1033, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 972, column 2 to line 1033, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1034, column 2 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1052, column 38 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1053, column 38 to column 61)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1055, column 40 to column 288)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1054, column 59 to line 1057, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1054, column 38 to line 1057, column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1058, column 38 to column 271)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1052, column 36 to line 1059, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1051, column 51 to line 1061, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1051, column 34 to line 1061, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1050, column 49 to line 1063, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1050, column 32 to line 1063, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1049, column 47 to line 1065, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1049, column 30 to line 1065, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1048, column 45 to line 1067, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1048, column 28 to line 1067, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1047, column 43 to line 1069, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1047, column 26 to line 1069, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1046, column 41 to line 1071, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1046, column 24 to line 1071, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1045, column 39 to line 1073, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1045, column 22 to line 1073, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1044, column 37 to line 1075, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1044, column 20 to line 1075, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1043, column 35 to line 1077, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1043, column 18 to line 1077, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1042, column 33 to line 1079, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1042, column 16 to line 1079, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1041, column 31 to line 1081, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1041, column 14 to line 1081, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1040, column 29 to line 1083, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1040, column 12 to line 1083, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1039, column 27 to line 1085, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1039, column 10 to line 1085, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1038, column 25 to line 1087, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1038, column 8 to line 1087, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1037, column 23 to line 1089, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1037, column 6 to line 1089, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1036, column 21 to line 1091, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1036, column 4 to line 1091, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1035, column 19 to line 1093, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1035, column 2 to line 1093, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1094, column 2 to column 28)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1111, column 36 to column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1112, column 36 to column 59)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1114, column 38 to column 271)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1113, column 57 to line 1116, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1113, column 36 to line 1116, column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1117, column 36 to column 255)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1111, column 34 to line 1118, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1110, column 49 to line 1120, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1110, column 32 to line 1120, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1109, column 47 to line 1122, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1109, column 30 to line 1122, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1108, column 45 to line 1124, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1108, column 28 to line 1124, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1107, column 43 to line 1126, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1107, column 26 to line 1126, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1106, column 41 to line 1128, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1106, column 24 to line 1128, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1105, column 39 to line 1130, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1105, column 22 to line 1130, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1104, column 37 to line 1132, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1104, column 20 to line 1132, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1103, column 35 to line 1134, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1103, column 18 to line 1134, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1102, column 33 to line 1136, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1102, column 16 to line 1136, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1101, column 31 to line 1138, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1101, column 14 to line 1138, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1100, column 29 to line 1140, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1100, column 12 to line 1140, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1099, column 27 to line 1142, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1099, column 10 to line 1142, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1098, column 25 to line 1144, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1098, column 8 to line 1144, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1097, column 23 to line 1146, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1097, column 6 to line 1146, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1096, column 21 to line 1148, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1096, column 4 to line 1148, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1095, column 19 to line 1150, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1095, column 2 to line 1150, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1151, column 2 to column 28)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1167, column 34 to column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1168, column 34 to column 57)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1170, column 36 to column 255)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1169, column 55 to line 1172, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1169, column 34 to line 1172, column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1173, column 34 to column 239)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1167, column 32 to line 1174, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1166, column 47 to line 1176, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1166, column 30 to line 1176, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1165, column 45 to line 1178, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1165, column 28 to line 1178, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1164, column 43 to line 1180, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1164, column 26 to line 1180, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1163, column 41 to line 1182, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1163, column 24 to line 1182, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1162, column 39 to line 1184, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1162, column 22 to line 1184, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1161, column 37 to line 1186, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1161, column 20 to line 1186, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1160, column 35 to line 1188, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1160, column 18 to line 1188, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1159, column 33 to line 1190, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1159, column 16 to line 1190, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1158, column 31 to line 1192, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1158, column 14 to line 1192, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1157, column 29 to line 1194, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1157, column 12 to line 1194, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1156, column 27 to line 1196, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1156, column 10 to line 1196, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1155, column 25 to line 1198, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1155, column 8 to line 1198, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1154, column 23 to line 1200, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1154, column 6 to line 1200, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1153, column 21 to line 1202, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1153, column 4 to line 1202, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1152, column 19 to line 1204, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1152, column 2 to line 1204, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1205, column 2 to column 28)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1220, column 32 to column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1221, column 32 to column 55)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1223, column 34 to column 239)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1222, column 53 to line 1225, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1222, column 32 to line 1225, column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1226, column 32 to column 223)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1220, column 30 to line 1227, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1219, column 45 to line 1229, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1219, column 28 to line 1229, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1218, column 43 to line 1231, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1218, column 26 to line 1231, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1217, column 41 to line 1233, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1217, column 24 to line 1233, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1216, column 39 to line 1235, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1216, column 22 to line 1235, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1215, column 37 to line 1237, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1215, column 20 to line 1237, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1214, column 35 to line 1239, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1214, column 18 to line 1239, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1213, column 33 to line 1241, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1213, column 16 to line 1241, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1212, column 31 to line 1243, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1212, column 14 to line 1243, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1211, column 29 to line 1245, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1211, column 12 to line 1245, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1210, column 27 to line 1247, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1210, column 10 to line 1247, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1209, column 25 to line 1249, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1209, column 8 to line 1249, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1208, column 23 to line 1251, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1208, column 6 to line 1251, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1207, column 21 to line 1253, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1207, column 4 to line 1253, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1206, column 19 to line 1255, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1206, column 2 to line 1255, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1256, column 2 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1270, column 30 to column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1271, column 30 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1273, column 32 to column 223)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1272, column 51 to line 1275, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1272, column 30 to line 1275, column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1276, column 30 to column 208)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1270, column 28 to line 1277, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1269, column 43 to line 1279, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1269, column 26 to line 1279, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1268, column 41 to line 1281, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1268, column 24 to line 1281, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1267, column 39 to line 1283, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1267, column 22 to line 1283, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1266, column 37 to line 1285, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1266, column 20 to line 1285, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1265, column 35 to line 1287, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1265, column 18 to line 1287, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1264, column 33 to line 1289, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1264, column 16 to line 1289, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1263, column 31 to line 1291, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1263, column 14 to line 1291, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1262, column 29 to line 1293, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1262, column 12 to line 1293, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1261, column 27 to line 1295, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1261, column 10 to line 1295, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1260, column 25 to line 1297, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1260, column 8 to line 1297, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1259, column 23 to line 1299, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1259, column 6 to line 1299, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1258, column 21 to line 1301, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1258, column 4 to line 1301, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1257, column 19 to line 1303, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1257, column 2 to line 1303, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1304, column 2 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1317, column 28 to column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1318, column 28 to column 51)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1320, column 30 to column 208)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1319, column 49 to line 1322, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1319, column 28 to line 1322, column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1323, column 28 to column 193)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1317, column 26 to line 1324, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1316, column 41 to line 1326, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1316, column 24 to line 1326, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1315, column 39 to line 1328, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1315, column 22 to line 1328, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1314, column 37 to line 1330, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1314, column 20 to line 1330, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1313, column 35 to line 1332, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1313, column 18 to line 1332, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1312, column 33 to line 1334, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1312, column 16 to line 1334, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1311, column 31 to line 1336, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1311, column 14 to line 1336, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1310, column 29 to line 1338, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1310, column 12 to line 1338, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1309, column 27 to line 1340, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1309, column 10 to line 1340, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1308, column 25 to line 1342, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1308, column 8 to line 1342, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1307, column 23 to line 1344, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1307, column 6 to line 1344, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1306, column 21 to line 1346, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1306, column 4 to line 1346, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1305, column 19 to line 1348, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1305, column 2 to line 1348, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1349, column 2 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1361, column 26 to column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1362, column 26 to column 49)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1364, column 28 to column 193)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1363, column 47 to line 1366, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1363, column 26 to line 1366, column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1367, column 26 to column 178)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1361, column 24 to line 1368, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1360, column 39 to line 1370, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1360, column 22 to line 1370, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1359, column 37 to line 1372, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1359, column 20 to line 1372, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1358, column 35 to line 1374, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1358, column 18 to line 1374, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1357, column 33 to line 1376, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1357, column 16 to line 1376, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1356, column 31 to line 1378, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1356, column 14 to line 1378, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1355, column 29 to line 1380, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1355, column 12 to line 1380, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1354, column 27 to line 1382, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1354, column 10 to line 1382, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1353, column 25 to line 1384, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1353, column 8 to line 1384, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1352, column 23 to line 1386, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1352, column 6 to line 1386, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1351, column 21 to line 1388, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1351, column 4 to line 1388, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1350, column 19 to line 1390, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1350, column 2 to line 1390, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1391, column 2 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1402, column 24 to column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1403, column 24 to column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1405, column 26 to column 178)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1404, column 45 to line 1407, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1404, column 24 to line 1407, column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1408, column 24 to column 163)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1402, column 22 to line 1409, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1401, column 37 to line 1411, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1401, column 20 to line 1411, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1400, column 35 to line 1413, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1400, column 18 to line 1413, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1399, column 33 to line 1415, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1399, column 16 to line 1415, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1398, column 31 to line 1417, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1398, column 14 to line 1417, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1397, column 29 to line 1419, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1397, column 12 to line 1419, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1396, column 27 to line 1421, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1396, column 10 to line 1421, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1395, column 25 to line 1423, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1395, column 8 to line 1423, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1394, column 23 to line 1425, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1394, column 6 to line 1425, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1393, column 21 to line 1427, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1393, column 4 to line 1427, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1392, column 19 to line 1429, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1392, column 2 to line 1429, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1430, column 2 to column 26)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1440, column 22 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1441, column 22 to column 45)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1443, column 24 to column 163)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1442, column 43 to line 1445, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1442, column 22 to line 1445, column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1446, column 22 to column 149)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1440, column 20 to line 1447, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1439, column 35 to line 1449, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1439, column 18 to line 1449, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1438, column 33 to line 1451, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1438, column 16 to line 1451, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1437, column 31 to line 1453, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1437, column 14 to line 1453, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1436, column 29 to line 1455, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1436, column 12 to line 1455, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1435, column 27 to line 1457, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1435, column 10 to line 1457, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1434, column 25 to line 1459, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1434, column 8 to line 1459, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1433, column 23 to line 1461, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1433, column 6 to line 1461, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1432, column 21 to line 1463, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1432, column 4 to line 1463, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1431, column 19 to line 1465, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1431, column 2 to line 1465, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1466, column 2 to column 26)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1475, column 20 to column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1476, column 20 to column 43)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1478, column 22 to column 149)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1477, column 41 to line 1480, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1477, column 20 to line 1480, column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1481, column 20 to column 135)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1475, column 18 to line 1482, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1474, column 33 to line 1484, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1474, column 16 to line 1484, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1473, column 31 to line 1486, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1473, column 14 to line 1486, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1472, column 29 to line 1488, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1472, column 12 to line 1488, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1471, column 27 to line 1490, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1471, column 10 to line 1490, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1470, column 25 to line 1492, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1470, column 8 to line 1492, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1469, column 23 to line 1494, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1469, column 6 to line 1494, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1468, column 21 to line 1496, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1468, column 4 to line 1496, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1467, column 19 to line 1498, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1467, column 2 to line 1498, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1499, column 2 to column 26)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1507, column 18 to column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1508, column 18 to column 41)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1510, column 20 to column 135)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1509, column 39 to line 1512, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1509, column 18 to line 1512, column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1513, column 18 to column 121)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1507, column 16 to line 1514, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1506, column 31 to line 1516, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1506, column 14 to line 1516, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1505, column 29 to line 1518, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1505, column 12 to line 1518, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1504, column 27 to line 1520, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1504, column 10 to line 1520, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1503, column 25 to line 1522, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1503, column 8 to line 1522, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1502, column 23 to line 1524, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1502, column 6 to line 1524, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1501, column 21 to line 1526, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1501, column 4 to line 1526, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1500, column 19 to line 1528, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1500, column 2 to line 1528, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1529, column 2 to column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1536, column 16 to column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1537, column 16 to column 39)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1539, column 18 to column 121)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1538, column 37 to line 1541, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1538, column 16 to line 1541, column 17)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1542, column 16 to column 108)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1536, column 14 to line 1543, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1535, column 29 to line 1545, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1535, column 12 to line 1545, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1534, column 27 to line 1547, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1534, column 10 to line 1547, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1533, column 25 to line 1549, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1533, column 8 to line 1549, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1532, column 23 to line 1551, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1532, column 6 to line 1551, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1531, column 21 to line 1553, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1531, column 4 to line 1553, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1530, column 19 to line 1555, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1530, column 2 to line 1555, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1556, column 2 to column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1562, column 14 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1563, column 14 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1565, column 16 to column 108)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1564, column 35 to line 1567, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1564, column 14 to line 1567, column 15)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1568, column 14 to column 95)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1562, column 12 to line 1569, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1561, column 27 to line 1571, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1561, column 10 to line 1571, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1560, column 25 to line 1573, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1560, column 8 to line 1573, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1559, column 23 to line 1575, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1559, column 6 to line 1575, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1558, column 21 to line 1577, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1558, column 4 to line 1577, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1557, column 19 to line 1579, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1557, column 2 to line 1579, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1580, column 2 to column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1585, column 12 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1586, column 12 to column 35)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1588, column 14 to column 95)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1587, column 33 to line 1590, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1587, column 12 to line 1590, column 13)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1591, column 12 to column 82)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1585, column 10 to line 1592, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1584, column 25 to line 1594, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1584, column 8 to line 1594, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1583, column 23 to line 1596, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1583, column 6 to line 1596, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1582, column 21 to line 1598, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1582, column 4 to line 1598, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1581, column 19 to line 1600, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1581, column 2 to line 1600, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1601, column 2 to column 24)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1605, column 10 to column 25)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1606, column 10 to column 33)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1608, column 12 to column 82)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1607, column 31 to line 1610, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1607, column 10 to line 1610, column 11)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1611, column 10 to column 70)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1605, column 8 to line 1612, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1604, column 23 to line 1614, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1604, column 6 to line 1614, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1603, column 21 to line 1616, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1603, column 4 to line 1616, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1602, column 19 to line 1618, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1602, column 2 to line 1618, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1619, column 2 to column 24)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1622, column 8 to column 23)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1623, column 8 to column 31)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1625, column 10 to column 70)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1624, column 29 to line 1627, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1624, column 8 to line 1627, column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1628, column 8 to column 58)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1622, column 6 to line 1629, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1621, column 21 to line 1631, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1621, column 4 to line 1631, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1620, column 19 to line 1633, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1620, column 2 to line 1633, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1634, column 2 to column 24)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1636, column 6 to column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1637, column 6 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1639, column 8 to column 58)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1638, column 27 to line 1641, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1638, column 6 to line 1641, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1642, column 6 to column 36)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1636, column 4 to line 1643, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1635, column 19 to line 1645, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1635, column 2 to line 1645, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1646, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1647, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1648, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1650, column 6 to column 46)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1649, column 25 to line 1652, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1649, column 4 to line 1652, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1653, column 4 to column 29)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1647, column 2 to line 1654, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1664, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1665, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1666, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1667, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1668, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1669, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1670, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1671, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1672, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1673, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1674, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1675, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1676, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1677, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1678, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1679, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1680, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1681, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1682, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1683, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1684, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1685, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1686, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1687, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1688, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1689, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1690, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1691, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1692, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1693, column 2 to column 9)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1694, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1695, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1697, column 6 to column 46)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1696, column 25 to line 1699, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1696, column 4 to line 1699, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1700, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1694, column 2 to line 1701, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1702, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1703, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1705, column 6 to column 56)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1704, column 25 to line 1707, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1704, column 4 to line 1707, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1708, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1702, column 2 to line 1709, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1710, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1711, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1713, column 6 to column 66)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1712, column 25 to line 1715, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1712, column 4 to line 1715, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1716, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1710, column 2 to line 1717, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1718, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1719, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1721, column 6 to column 76)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1720, column 25 to line 1723, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1720, column 4 to line 1723, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1724, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1718, column 2 to line 1725, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1726, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1727, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1729, column 6 to column 87)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1728, column 25 to line 1731, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1728, column 4 to line 1731, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1732, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1726, column 2 to line 1733, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1734, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1735, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1737, column 6 to column 98)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1736, column 25 to line 1739, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1736, column 4 to line 1739, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1740, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1734, column 2 to line 1741, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1742, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1743, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1745, column 6 to column 109)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1744, column 25 to line 1747, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1744, column 4 to line 1747, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1748, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1742, column 2 to line 1749, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1750, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1751, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1753, column 6 to column 121)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1752, column 25 to line 1755, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1752, column 4 to line 1755, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1756, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1750, column 2 to line 1757, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1758, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1759, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1761, column 6 to column 133)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1760, column 25 to line 1763, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1760, column 4 to line 1763, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1764, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1758, column 2 to line 1765, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1766, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1767, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1769, column 6 to column 145)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1768, column 25 to line 1771, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1768, column 4 to line 1771, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1772, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1766, column 2 to line 1773, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1774, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1775, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1777, column 6 to column 158)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1776, column 25 to line 1779, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1776, column 4 to line 1779, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1780, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1774, column 2 to line 1781, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1782, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1783, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1785, column 6 to column 171)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1784, column 25 to line 1787, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1784, column 4 to line 1787, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1788, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1782, column 2 to line 1789, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1790, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1791, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1793, column 6 to column 184)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1792, column 25 to line 1795, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1792, column 4 to line 1795, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1796, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1790, column 2 to line 1797, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1798, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1799, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1801, column 6 to column 197)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1800, column 25 to line 1803, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1800, column 4 to line 1803, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1804, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1798, column 2 to line 1805, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1806, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1807, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1809, column 6 to column 211)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1808, column 25 to line 1811, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1808, column 4 to line 1811, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1812, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1806, column 2 to line 1813, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1814, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1815, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1817, column 6 to column 225)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1816, column 25 to line 1819, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1816, column 4 to line 1819, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1820, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1814, column 2 to line 1821, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1822, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1823, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1825, column 6 to column 239)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1824, column 25 to line 1827, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1824, column 4 to line 1827, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1828, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1822, column 2 to line 1829, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1830, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1831, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1833, column 6 to column 254)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1832, column 25 to line 1835, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1832, column 4 to line 1835, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1836, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1830, column 2 to line 1837, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1838, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1839, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1841, column 6 to column 269)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1840, column 25 to line 1843, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1840, column 4 to line 1843, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1844, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1838, column 2 to line 1845, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1846, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1847, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1849, column 6 to column 284)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1848, column 25 to line 1851, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1848, column 4 to line 1851, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1852, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1846, column 2 to line 1853, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1854, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1855, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1857, column 6 to column 299)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1856, column 25 to line 1859, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1856, column 4 to line 1859, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1860, column 4 to column 38)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1854, column 2 to line 1861, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1862, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1863, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1865, column 6 to column 313)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1864, column 24 to line 1867, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1864, column 4 to line 1867, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1868, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1862, column 2 to line 1869, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1870, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1871, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1873, column 6 to column 328)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1872, column 24 to line 1875, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1872, column 4 to line 1875, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1876, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1870, column 2 to line 1877, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1878, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1879, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1881, column 6 to column 343)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1880, column 24 to line 1883, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1880, column 4 to line 1883, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1884, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1878, column 2 to line 1885, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1886, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1887, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1889, column 6 to column 359)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1888, column 24 to line 1891, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1888, column 4 to line 1891, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1892, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1886, column 2 to line 1893, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1894, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1895, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1897, column 6 to column 375)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1896, column 24 to line 1899, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1896, column 4 to line 1899, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1900, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1894, column 2 to line 1901, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1902, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1903, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1905, column 6 to column 391)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1904, column 24 to line 1907, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1904, column 4 to line 1907, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1908, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1902, column 2 to line 1909, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1910, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1911, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1913, column 6 to column 408)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1912, column 24 to line 1915, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1912, column 4 to line 1915, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1916, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1910, column 2 to line 1917, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1918, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1919, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1921, column 6 to column 425)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1920, column 24 to line 1923, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1920, column 4 to line 1923, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1924, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1918, column 2 to line 1925, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1926, column 4 to column 19)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1927, column 4 to column 27)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1929, column 6 to column 58)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1930, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1931, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1932, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1933, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1934, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1935, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1936, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1937, column 6 to column 52)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1938, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1939, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1940, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1941, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1942, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1943, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1944, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1945, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1946, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1947, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1948, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1949, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1950, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1951, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1952, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1953, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1954, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1955, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1956, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1957, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1958, column 6 to column 53)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1965, column 8 to column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1966, column 8 to column 47)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1964, column 10 to line 1968, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1960, column 8 to column 46)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1961, column 8 to column 46)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1959, column 253 to line 1963, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1959, column 6 to line 1968, column 7)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1928, column 24 to line 1969, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1928, column 4 to line 1969, column 5)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1970, column 4 to column 37)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1926, column 2 to line 1971, column 3)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1659, column 2 to column 21)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 1660, column 2 to column 16)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 2, column 2 to column 10)",
 " (in '/space/poorvagarg/benchmarks_stan/or/or_30.stan', line 3, column 2 to column 10)"};



class or_30_model final : public model_base_crtp<or_30_model> {

 private:
  double d1;
  double d2; 
  
 
 public:
  ~or_30_model() { }
  
  inline std::string model_name() const final { return "or_30_model"; }

  inline std::vector<std::string> model_compile_info() const noexcept {
    return std::vector<std::string>{"stanc_version = stanc3 v2.28.1", "stancflags = "};
  }
  
  
  or_30_model(stan::io::var_context& context__,
              unsigned int random_seed__ = 0,
              std::ostream* pstream__ = nullptr) : model_base_crtp(0) {
    int current_statement__ = 0;
    using local_scalar_t__ = double ;
    boost::ecuyer1988 base_rng__ = 
        stan::services::util::create_rng(random_seed__, 0);
    (void) base_rng__;  // suppress unused var warning
    static constexpr const char* function__ = "or_30_model_namespace::or_30_model";
    (void) function__;  // suppress unused var warning
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    (void) DUMMY_VAR__;  // suppress unused var warning
    try {
      int pos__;
      pos__ = std::numeric_limits<int>::min();
      
      pos__ = 1;
      current_statement__ = 1456;
      context__.validate_dims("data initialization","d1","double",
           std::vector<size_t>{});
      d1 = std::numeric_limits<double>::quiet_NaN();
      
      current_statement__ = 1456;
      d1 = context__.vals_r("d1")[(1 - 1)];
      current_statement__ = 1457;
      context__.validate_dims("data initialization","d2","double",
           std::vector<size_t>{});
      d2 = std::numeric_limits<double>::quiet_NaN();
      
      current_statement__ = 1457;
      d2 = context__.vals_r("d2")[(1 - 1)];
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    num_params_r__ = 1;
    
  }
  
  template <bool propto__, bool jacobian__ , typename VecR, typename VecI, 
  stan::require_vector_like_t<VecR>* = nullptr, 
  stan::require_vector_like_vt<std::is_integral, VecI>* = nullptr> 
  inline stan::scalar_type_t<VecR> log_prob_impl(VecR& params_r__,
                                                 VecI& params_i__,
                                                 std::ostream* pstream__ = nullptr) const {
    using T__ = stan::scalar_type_t<VecR>;
    using local_scalar_t__ = T__;
    T__ lp__(0.0);
    stan::math::accumulator<T__> lp_accum__;
    stan::io::deserializer<local_scalar_t__> in__(params_r__, params_i__);
    int current_statement__ = 0;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    (void) DUMMY_VAR__;  // suppress unused var warning
    static constexpr const char* function__ = "or_30_model_namespace::log_prob";
    (void) function__;  // suppress unused var warning
    
    try {
      local_scalar_t__ prior;
      prior = DUMMY_VAR__;
      
      current_statement__ = 1;
      prior = in__.template read_constrain_lub<local_scalar_t__, jacobian__>(
                0, 1, lp__);
      std::vector<local_scalar_t__> m1;
      m1 = std::vector<local_scalar_t__>(536870912, DUMMY_VAR__);
      
      current_statement__ = 32;
      assign(m1, rep_array(0, 536870912), "assigning variable m1");
      current_statement__ = 133;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 131;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 129;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 127;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 125;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 123;
                for (int z4 = 1; z4 <= 2; ++z4) {
                  current_statement__ = 121;
                  for (int z30 = 1; z30 <= 2; ++z30) {
                    current_statement__ = 119;
                    for (int z3 = 1; z3 <= 2; ++z3) {
                      current_statement__ = 117;
                      for (int z29 = 1; z29 <= 2; ++z29) {
                        current_statement__ = 115;
                        for (int z28 = 1; z28 <= 2; ++z28) {
                          current_statement__ = 113;
                          for (int z27 = 1; z27 <= 2; ++z27) {
                            current_statement__ = 111;
                            for (int z26 = 1; z26 <= 2; ++z26) {
                              current_statement__ = 109;
                              for (int z25 = 1; z25 <= 2; ++z25) {
                                current_statement__ = 107;
                                for (int z24 = 1; z24 <= 2; ++z24) {
                                  current_statement__ = 105;
                                  for (int z23 = 1; z23 <= 2; ++z23) {
                                    current_statement__ = 103;
                                    for (int z22 = 1; z22 <= 2; ++z22) {
                                      current_statement__ = 101;
                                      for (int z21 = 1; z21 <= 2; ++z21) {
                                        current_statement__ = 99;
                                        for (int z20 = 1; z20 <= 2; ++z20) {
                                          current_statement__ = 97;
                                          for (int z2 = 1; z2 <= 2; ++z2) {
                                            current_statement__ = 95;
                                            for (int z19 = 1; z19 <= 2; ++z19) {
                                              current_statement__ = 93;
                                              for (int z18 = 1; z18 <= 2;
                                                   ++z18) {
                                                current_statement__ = 91;
                                                for (int z17 = 1; z17 <= 2;
                                                     ++z17) {
                                                  current_statement__ = 89;
                                                  for (int z16 = 1; z16 <= 2;
                                                       ++z16) {
                                                    current_statement__ = 87;
                                                    for (int z15 = 1;
                                                         z15 <= 2; ++z15) {
                                                      current_statement__ = 85;
                                                      for (int z14 = 1;
                                                           z14 <= 2; ++z14) {
                                                        current_statement__ = 83;
                                                        for (int z13 = 1;
                                                             z13 <= 2; ++z13) {
                                                          current_statement__ = 81;
                                                          for (int z12 = 1;
                                                               z12 <= 2;
                                                               ++z12) {
                                                            current_statement__ = 79;
                                                            for (int z11 = 1;
                                                                 z11 <= 2;
                                                                 ++z11) {
                                                              current_statement__ = 77;
                                                              for (int z10 = 1;
                                                                   z10 <= 2;
                                                                   ++z10) {
                                                                {
                                                                  Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                                  acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                                  stan::math::fill(acc0, DUMMY_VAR__);
                                                                  
                                                                  
                                                                  current_statement__ = 34;
                                                                  assign(
                                                                    acc0,
                                                                    rep_vector(
                                                                    0, 2),
                                                                    "assigning variable acc0");
                                                                  current_statement__ = 73;
                                                                  for (
                                                                  int z1_val = 1;
                                                                  z1_val <= 2;
                                                                  ++z1_val) {
                                                                    current_statement__ = 35;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z1_val -
                                                                    1),
                                                                    prior)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 36;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z2 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 37;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z3 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 38;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z4 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 39;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z5 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 40;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z6 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 41;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z7 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 42;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z8 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 43;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z9 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 44;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z10 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 45;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z11 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 46;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z12 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 47;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z13 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 48;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z14 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 49;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z15 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 50;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z16 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 51;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z17 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 52;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z18 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 53;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z19 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 54;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z20 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 55;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z21 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 56;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z22 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 57;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z23 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 58;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z24 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 59;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z25 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 60;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z26 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 61;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z27 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 62;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z28 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 63;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z29 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 64;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z30 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 71;
                                                                    if (
                                                                    logical_gt(
                                                                    ((((((((((((((((((((((((((((((z1_val
                                                                    + z2) +
                                                                    z3) + z4)
                                                                    + z5) +
                                                                    z6) + z7)
                                                                    + z8) +
                                                                    z9) +
                                                                    z10) +
                                                                    z11) +
                                                                    z12) +
                                                                    z13) +
                                                                    z14) +
                                                                    z15) +
                                                                    z16) +
                                                                    z17) +
                                                                    z18) +
                                                                    z19) +
                                                                    z20) +
                                                                    z21) +
                                                                    z22) +
                                                                    z23) +
                                                                    z24) +
                                                                    z25) +
                                                                    z26) +
                                                                    z27) +
                                                                    z28) +
                                                                    z29) +
                                                                    z30) -
                                                                    30), 0)) {
                                                                    current_statement__ = 68;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d1, 1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 69;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d2, 1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    } else {
                                                                    current_statement__ = 65;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d1, 
                                                                    -1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 66;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d2, 
                                                                    -1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    }
                                                                  }
                                                                  current_statement__ = 74;
                                                                  assign(m1,
                                                                    (rvalue(
                                                                    m1, "m1",
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    268435456)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    134217728))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z2 - 1)
                                                                    * 262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                    log_sum_exp(
                                                                    acc0)),
                                                                    "assigning variable m1", 
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    268435456)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    134217728))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z2 - 1)
                                                                    * 262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      std::vector<local_scalar_t__> m10;
      m10 = std::vector<local_scalar_t__>(1048576, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m11;
      m11 = std::vector<local_scalar_t__>(524288, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m12;
      m12 = std::vector<local_scalar_t__>(262144, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m13;
      m13 = std::vector<local_scalar_t__>(131072, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m14;
      m14 = std::vector<local_scalar_t__>(65536, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m15;
      m15 = std::vector<local_scalar_t__>(32768, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m16;
      m16 = std::vector<local_scalar_t__>(16384, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m17;
      m17 = std::vector<local_scalar_t__>(8192, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m18;
      m18 = std::vector<local_scalar_t__>(4096, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m19;
      m19 = std::vector<local_scalar_t__>(2048, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m2;
      m2 = std::vector<local_scalar_t__>(268435456, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m20;
      m20 = std::vector<local_scalar_t__>(1024, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m21;
      m21 = std::vector<local_scalar_t__>(512, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m22;
      m22 = std::vector<local_scalar_t__>(256, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m23;
      m23 = std::vector<local_scalar_t__>(128, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m24;
      m24 = std::vector<local_scalar_t__>(64, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m25;
      m25 = std::vector<local_scalar_t__>(32, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m26;
      m26 = std::vector<local_scalar_t__>(16, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m27;
      m27 = std::vector<local_scalar_t__>(8, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m28;
      m28 = std::vector<local_scalar_t__>(4, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m29;
      m29 = std::vector<local_scalar_t__>(2, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m3;
      m3 = std::vector<local_scalar_t__>(134217728, DUMMY_VAR__);
      
      local_scalar_t__ m30;
      m30 = DUMMY_VAR__;
      
      std::vector<local_scalar_t__> m4;
      m4 = std::vector<local_scalar_t__>(67108864, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m5;
      m5 = std::vector<local_scalar_t__>(33554432, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m6;
      m6 = std::vector<local_scalar_t__>(16777216, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m7;
      m7 = std::vector<local_scalar_t__>(8388608, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m8;
      m8 = std::vector<local_scalar_t__>(4194304, DUMMY_VAR__);
      
      std::vector<local_scalar_t__> m9;
      m9 = std::vector<local_scalar_t__>(2097152, DUMMY_VAR__);
      
      current_statement__ = 134;
      assign(m2, rep_array(0, 268435456), "assigning variable m2");
      current_statement__ = 197;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 195;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 193;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 191;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 189;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 187;
                for (int z4 = 1; z4 <= 2; ++z4) {
                  current_statement__ = 185;
                  for (int z30 = 1; z30 <= 2; ++z30) {
                    current_statement__ = 183;
                    for (int z3 = 1; z3 <= 2; ++z3) {
                      current_statement__ = 181;
                      for (int z29 = 1; z29 <= 2; ++z29) {
                        current_statement__ = 179;
                        for (int z28 = 1; z28 <= 2; ++z28) {
                          current_statement__ = 177;
                          for (int z27 = 1; z27 <= 2; ++z27) {
                            current_statement__ = 175;
                            for (int z26 = 1; z26 <= 2; ++z26) {
                              current_statement__ = 173;
                              for (int z25 = 1; z25 <= 2; ++z25) {
                                current_statement__ = 171;
                                for (int z24 = 1; z24 <= 2; ++z24) {
                                  current_statement__ = 169;
                                  for (int z23 = 1; z23 <= 2; ++z23) {
                                    current_statement__ = 167;
                                    for (int z22 = 1; z22 <= 2; ++z22) {
                                      current_statement__ = 165;
                                      for (int z21 = 1; z21 <= 2; ++z21) {
                                        current_statement__ = 163;
                                        for (int z20 = 1; z20 <= 2; ++z20) {
                                          current_statement__ = 161;
                                          for (int z19 = 1; z19 <= 2; ++z19) {
                                            current_statement__ = 159;
                                            for (int z18 = 1; z18 <= 2; ++z18) {
                                              current_statement__ = 157;
                                              for (int z17 = 1; z17 <= 2;
                                                   ++z17) {
                                                current_statement__ = 155;
                                                for (int z16 = 1; z16 <= 2;
                                                     ++z16) {
                                                  current_statement__ = 153;
                                                  for (int z15 = 1; z15 <= 2;
                                                       ++z15) {
                                                    current_statement__ = 151;
                                                    for (int z14 = 1;
                                                         z14 <= 2; ++z14) {
                                                      current_statement__ = 149;
                                                      for (int z13 = 1;
                                                           z13 <= 2; ++z13) {
                                                        current_statement__ = 147;
                                                        for (int z12 = 1;
                                                             z12 <= 2; ++z12) {
                                                          current_statement__ = 145;
                                                          for (int z11 = 1;
                                                               z11 <= 2;
                                                               ++z11) {
                                                            current_statement__ = 143;
                                                            for (int z10 = 1;
                                                                 z10 <= 2;
                                                                 ++z10) {
                                                              {
                                                                Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                                acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                                stan::math::fill(acc0, DUMMY_VAR__);
                                                                
                                                                
                                                                current_statement__ = 136;
                                                                assign(acc0,
                                                                  rep_vector(
                                                                    0, 2),
                                                                  "assigning variable acc0");
                                                                current_statement__ = 139;
                                                                for (
                                                                int z2_val = 1;
                                                                z2_val <= 2;
                                                                ++z2_val) {
                                                                  current_statement__ = 137;
                                                                  assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z2_val))
                                                                    +
                                                                    rvalue(
                                                                    m1, "m1",
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    268435456)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    134217728))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z2_val
                                                                    - 1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z2_val));
                                                                }
                                                                current_statement__ = 140;
                                                                assign(m2,
                                                                  (rvalue(m2,
                                                                    "m2",
                                                                    index_uni(
                                                                    ((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    134217728)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                    log_sum_exp(
                                                                    acc0)),
                                                                  "assigning variable m2", 
                                                                  index_uni(
                                                                    ((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    134217728)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 198;
      assign(m3, rep_array(0, 134217728), "assigning variable m3");
      current_statement__ = 259;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 257;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 255;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 253;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 251;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 249;
                for (int z4 = 1; z4 <= 2; ++z4) {
                  current_statement__ = 247;
                  for (int z30 = 1; z30 <= 2; ++z30) {
                    current_statement__ = 245;
                    for (int z29 = 1; z29 <= 2; ++z29) {
                      current_statement__ = 243;
                      for (int z28 = 1; z28 <= 2; ++z28) {
                        current_statement__ = 241;
                        for (int z27 = 1; z27 <= 2; ++z27) {
                          current_statement__ = 239;
                          for (int z26 = 1; z26 <= 2; ++z26) {
                            current_statement__ = 237;
                            for (int z25 = 1; z25 <= 2; ++z25) {
                              current_statement__ = 235;
                              for (int z24 = 1; z24 <= 2; ++z24) {
                                current_statement__ = 233;
                                for (int z23 = 1; z23 <= 2; ++z23) {
                                  current_statement__ = 231;
                                  for (int z22 = 1; z22 <= 2; ++z22) {
                                    current_statement__ = 229;
                                    for (int z21 = 1; z21 <= 2; ++z21) {
                                      current_statement__ = 227;
                                      for (int z20 = 1; z20 <= 2; ++z20) {
                                        current_statement__ = 225;
                                        for (int z19 = 1; z19 <= 2; ++z19) {
                                          current_statement__ = 223;
                                          for (int z18 = 1; z18 <= 2; ++z18) {
                                            current_statement__ = 221;
                                            for (int z17 = 1; z17 <= 2; ++z17) {
                                              current_statement__ = 219;
                                              for (int z16 = 1; z16 <= 2;
                                                   ++z16) {
                                                current_statement__ = 217;
                                                for (int z15 = 1; z15 <= 2;
                                                     ++z15) {
                                                  current_statement__ = 215;
                                                  for (int z14 = 1; z14 <= 2;
                                                       ++z14) {
                                                    current_statement__ = 213;
                                                    for (int z13 = 1;
                                                         z13 <= 2; ++z13) {
                                                      current_statement__ = 211;
                                                      for (int z12 = 1;
                                                           z12 <= 2; ++z12) {
                                                        current_statement__ = 209;
                                                        for (int z11 = 1;
                                                             z11 <= 2; ++z11) {
                                                          current_statement__ = 207;
                                                          for (int z10 = 1;
                                                               z10 <= 2;
                                                               ++z10) {
                                                            {
                                                              Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                              acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                              stan::math::fill(acc0, DUMMY_VAR__);
                                                              
                                                              
                                                              current_statement__ = 200;
                                                              assign(acc0,
                                                                rep_vector(0,
                                                                  2),
                                                                "assigning variable acc0");
                                                              current_statement__ = 203;
                                                              for (int z3_val = 1;
                                                                   z3_val <= 2;
                                                                   ++z3_val) {
                                                                current_statement__ = 201;
                                                                assign(acc0,
                                                                  (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z3_val))
                                                                    +
                                                                    rvalue(
                                                                    m2, "m2",
                                                                    index_uni(
                                                                    ((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    134217728)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3_val
                                                                    - 1) *
                                                                    128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                                  "assigning variable acc0", 
                                                                  index_uni(z3_val));
                                                              }
                                                              current_statement__ = 204;
                                                              assign(m3,
                                                                (rvalue(m3,
                                                                   "m3",
                                                                   index_uni(
                                                                    (((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    67108864)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z27 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                  log_sum_exp(
                                                                    acc0)),
                                                                "assigning variable m3", 
                                                                index_uni(
                                                                  (((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    67108864)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z27 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 260;
      assign(m4, rep_array(0, 67108864), "assigning variable m4");
      current_statement__ = 319;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 317;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 315;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 313;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 311;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 309;
                for (int z30 = 1; z30 <= 2; ++z30) {
                  current_statement__ = 307;
                  for (int z29 = 1; z29 <= 2; ++z29) {
                    current_statement__ = 305;
                    for (int z28 = 1; z28 <= 2; ++z28) {
                      current_statement__ = 303;
                      for (int z27 = 1; z27 <= 2; ++z27) {
                        current_statement__ = 301;
                        for (int z26 = 1; z26 <= 2; ++z26) {
                          current_statement__ = 299;
                          for (int z25 = 1; z25 <= 2; ++z25) {
                            current_statement__ = 297;
                            for (int z24 = 1; z24 <= 2; ++z24) {
                              current_statement__ = 295;
                              for (int z23 = 1; z23 <= 2; ++z23) {
                                current_statement__ = 293;
                                for (int z22 = 1; z22 <= 2; ++z22) {
                                  current_statement__ = 291;
                                  for (int z21 = 1; z21 <= 2; ++z21) {
                                    current_statement__ = 289;
                                    for (int z20 = 1; z20 <= 2; ++z20) {
                                      current_statement__ = 287;
                                      for (int z19 = 1; z19 <= 2; ++z19) {
                                        current_statement__ = 285;
                                        for (int z18 = 1; z18 <= 2; ++z18) {
                                          current_statement__ = 283;
                                          for (int z17 = 1; z17 <= 2; ++z17) {
                                            current_statement__ = 281;
                                            for (int z16 = 1; z16 <= 2; ++z16) {
                                              current_statement__ = 279;
                                              for (int z15 = 1; z15 <= 2;
                                                   ++z15) {
                                                current_statement__ = 277;
                                                for (int z14 = 1; z14 <= 2;
                                                     ++z14) {
                                                  current_statement__ = 275;
                                                  for (int z13 = 1; z13 <= 2;
                                                       ++z13) {
                                                    current_statement__ = 273;
                                                    for (int z12 = 1;
                                                         z12 <= 2; ++z12) {
                                                      current_statement__ = 271;
                                                      for (int z11 = 1;
                                                           z11 <= 2; ++z11) {
                                                        current_statement__ = 269;
                                                        for (int z10 = 1;
                                                             z10 <= 2; ++z10) {
                                                          {
                                                            Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                            acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                            stan::math::fill(acc0, DUMMY_VAR__);
                                                            
                                                            
                                                            current_statement__ = 262;
                                                            assign(acc0,
                                                              rep_vector(0,
                                                                2),
                                                              "assigning variable acc0");
                                                            current_statement__ = 265;
                                                            for (int z4_val = 1;
                                                                 z4_val <= 2;
                                                                 ++z4_val) {
                                                              current_statement__ = 263;
                                                              assign(acc0,
                                                                (rvalue(acc0,
                                                                   "acc0",
                                                                   index_uni(z4_val))
                                                                  +
                                                                  rvalue(m3,
                                                                    "m3",
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    67108864)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z27 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4_val
                                                                    - 1) *
                                                                    32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                                "assigning variable acc0", 
                                                                index_uni(z4_val));
                                                            }
                                                            current_statement__ = 266;
                                                            assign(m4,
                                                              (rvalue(m4,
                                                                 "m4",
                                                                 index_uni(
                                                                   ((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    33554432)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z26 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                log_sum_exp(
                                                                  acc0)),
                                                              "assigning variable m4", 
                                                              index_uni(
                                                                ((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    33554432)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z26 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                   ((z9 - 1)
                                                                    * 1)) +
                                                                  1)));
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 320;
      assign(m5, rep_array(0, 33554432), "assigning variable m5");
      current_statement__ = 377;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 375;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 373;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 371;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 369;
              for (int z30 = 1; z30 <= 2; ++z30) {
                current_statement__ = 367;
                for (int z29 = 1; z29 <= 2; ++z29) {
                  current_statement__ = 365;
                  for (int z28 = 1; z28 <= 2; ++z28) {
                    current_statement__ = 363;
                    for (int z27 = 1; z27 <= 2; ++z27) {
                      current_statement__ = 361;
                      for (int z26 = 1; z26 <= 2; ++z26) {
                        current_statement__ = 359;
                        for (int z25 = 1; z25 <= 2; ++z25) {
                          current_statement__ = 357;
                          for (int z24 = 1; z24 <= 2; ++z24) {
                            current_statement__ = 355;
                            for (int z23 = 1; z23 <= 2; ++z23) {
                              current_statement__ = 353;
                              for (int z22 = 1; z22 <= 2; ++z22) {
                                current_statement__ = 351;
                                for (int z21 = 1; z21 <= 2; ++z21) {
                                  current_statement__ = 349;
                                  for (int z20 = 1; z20 <= 2; ++z20) {
                                    current_statement__ = 347;
                                    for (int z19 = 1; z19 <= 2; ++z19) {
                                      current_statement__ = 345;
                                      for (int z18 = 1; z18 <= 2; ++z18) {
                                        current_statement__ = 343;
                                        for (int z17 = 1; z17 <= 2; ++z17) {
                                          current_statement__ = 341;
                                          for (int z16 = 1; z16 <= 2; ++z16) {
                                            current_statement__ = 339;
                                            for (int z15 = 1; z15 <= 2; ++z15) {
                                              current_statement__ = 337;
                                              for (int z14 = 1; z14 <= 2;
                                                   ++z14) {
                                                current_statement__ = 335;
                                                for (int z13 = 1; z13 <= 2;
                                                     ++z13) {
                                                  current_statement__ = 333;
                                                  for (int z12 = 1; z12 <= 2;
                                                       ++z12) {
                                                    current_statement__ = 331;
                                                    for (int z11 = 1;
                                                         z11 <= 2; ++z11) {
                                                      current_statement__ = 329;
                                                      for (int z10 = 1;
                                                           z10 <= 2; ++z10) {
                                                        {
                                                          Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                          acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                          stan::math::fill(acc0, DUMMY_VAR__);
                                                          
                                                          
                                                          current_statement__ = 322;
                                                          assign(acc0,
                                                            rep_vector(0, 2),
                                                            "assigning variable acc0");
                                                          current_statement__ = 325;
                                                          for (int z5_val = 1;
                                                               z5_val <= 2;
                                                               ++z5_val) {
                                                            current_statement__ = 323;
                                                            assign(acc0,
                                                              (rvalue(acc0,
                                                                 "acc0",
                                                                 index_uni(z5_val))
                                                                +
                                                                rvalue(m4,
                                                                  "m4",
                                                                  index_uni(
                                                                    ((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    33554432)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z26 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z5_val
                                                                    - 1) *
                                                                    16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                              "assigning variable acc0", 
                                                              index_uni(z5_val));
                                                          }
                                                          current_statement__ = 326;
                                                          assign(m5,
                                                            (rvalue(m5, "m5",
                                                               index_uni(
                                                                 (((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    16777216)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z25 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                   1))) +
                                                              log_sum_exp(
                                                                acc0)),
                                                            "assigning variable m5", 
                                                            index_uni(
                                                              (((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    16777216)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z25 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                   ((z7 - 1)
                                                                    * 4)) +
                                                                  ((z8 - 1) *
                                                                    2)) +
                                                                 ((z9 - 1) *
                                                                   1)) + 1)));
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 378;
      assign(m6, rep_array(0, 16777216), "assigning variable m6");
      current_statement__ = 433;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 431;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 429;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 427;
            for (int z30 = 1; z30 <= 2; ++z30) {
              current_statement__ = 425;
              for (int z29 = 1; z29 <= 2; ++z29) {
                current_statement__ = 423;
                for (int z28 = 1; z28 <= 2; ++z28) {
                  current_statement__ = 421;
                  for (int z27 = 1; z27 <= 2; ++z27) {
                    current_statement__ = 419;
                    for (int z26 = 1; z26 <= 2; ++z26) {
                      current_statement__ = 417;
                      for (int z25 = 1; z25 <= 2; ++z25) {
                        current_statement__ = 415;
                        for (int z24 = 1; z24 <= 2; ++z24) {
                          current_statement__ = 413;
                          for (int z23 = 1; z23 <= 2; ++z23) {
                            current_statement__ = 411;
                            for (int z22 = 1; z22 <= 2; ++z22) {
                              current_statement__ = 409;
                              for (int z21 = 1; z21 <= 2; ++z21) {
                                current_statement__ = 407;
                                for (int z20 = 1; z20 <= 2; ++z20) {
                                  current_statement__ = 405;
                                  for (int z19 = 1; z19 <= 2; ++z19) {
                                    current_statement__ = 403;
                                    for (int z18 = 1; z18 <= 2; ++z18) {
                                      current_statement__ = 401;
                                      for (int z17 = 1; z17 <= 2; ++z17) {
                                        current_statement__ = 399;
                                        for (int z16 = 1; z16 <= 2; ++z16) {
                                          current_statement__ = 397;
                                          for (int z15 = 1; z15 <= 2; ++z15) {
                                            current_statement__ = 395;
                                            for (int z14 = 1; z14 <= 2; ++z14) {
                                              current_statement__ = 393;
                                              for (int z13 = 1; z13 <= 2;
                                                   ++z13) {
                                                current_statement__ = 391;
                                                for (int z12 = 1; z12 <= 2;
                                                     ++z12) {
                                                  current_statement__ = 389;
                                                  for (int z11 = 1; z11 <= 2;
                                                       ++z11) {
                                                    current_statement__ = 387;
                                                    for (int z10 = 1;
                                                         z10 <= 2; ++z10) {
                                                      {
                                                        Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                        acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                        stan::math::fill(acc0, DUMMY_VAR__);
                                                        
                                                        
                                                        current_statement__ = 380;
                                                        assign(acc0,
                                                          rep_vector(0, 2),
                                                          "assigning variable acc0");
                                                        current_statement__ = 383;
                                                        for (int z6_val = 1;
                                                             z6_val <= 2;
                                                             ++z6_val) {
                                                          current_statement__ = 381;
                                                          assign(acc0,
                                                            (rvalue(acc0,
                                                               "acc0",
                                                               index_uni(z6_val))
                                                              +
                                                              rvalue(m5,
                                                                "m5",
                                                                index_uni(
                                                                  (((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    16777216)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z25 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z6_val
                                                                    - 1) * 8))
                                                                    +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                            "assigning variable acc0", 
                                                            index_uni(z6_val));
                                                        }
                                                        current_statement__ = 384;
                                                        assign(m6,
                                                          (rvalue(m6, "m6",
                                                             index_uni(
                                                               ((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    8388608)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z24 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                   ((z8 - 1)
                                                                    * 2)) +
                                                                  ((z9 - 1) *
                                                                    1)) + 1)))
                                                            +
                                                            log_sum_exp(acc0)),
                                                          "assigning variable m6", 
                                                          index_uni(((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    8388608)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z24 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 434;
      assign(m7, rep_array(0, 8388608), "assigning variable m7");
      current_statement__ = 487;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 485;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 483;
          for (int z30 = 1; z30 <= 2; ++z30) {
            current_statement__ = 481;
            for (int z29 = 1; z29 <= 2; ++z29) {
              current_statement__ = 479;
              for (int z28 = 1; z28 <= 2; ++z28) {
                current_statement__ = 477;
                for (int z27 = 1; z27 <= 2; ++z27) {
                  current_statement__ = 475;
                  for (int z26 = 1; z26 <= 2; ++z26) {
                    current_statement__ = 473;
                    for (int z25 = 1; z25 <= 2; ++z25) {
                      current_statement__ = 471;
                      for (int z24 = 1; z24 <= 2; ++z24) {
                        current_statement__ = 469;
                        for (int z23 = 1; z23 <= 2; ++z23) {
                          current_statement__ = 467;
                          for (int z22 = 1; z22 <= 2; ++z22) {
                            current_statement__ = 465;
                            for (int z21 = 1; z21 <= 2; ++z21) {
                              current_statement__ = 463;
                              for (int z20 = 1; z20 <= 2; ++z20) {
                                current_statement__ = 461;
                                for (int z19 = 1; z19 <= 2; ++z19) {
                                  current_statement__ = 459;
                                  for (int z18 = 1; z18 <= 2; ++z18) {
                                    current_statement__ = 457;
                                    for (int z17 = 1; z17 <= 2; ++z17) {
                                      current_statement__ = 455;
                                      for (int z16 = 1; z16 <= 2; ++z16) {
                                        current_statement__ = 453;
                                        for (int z15 = 1; z15 <= 2; ++z15) {
                                          current_statement__ = 451;
                                          for (int z14 = 1; z14 <= 2; ++z14) {
                                            current_statement__ = 449;
                                            for (int z13 = 1; z13 <= 2; ++z13) {
                                              current_statement__ = 447;
                                              for (int z12 = 1; z12 <= 2;
                                                   ++z12) {
                                                current_statement__ = 445;
                                                for (int z11 = 1; z11 <= 2;
                                                     ++z11) {
                                                  current_statement__ = 443;
                                                  for (int z10 = 1; z10 <= 2;
                                                       ++z10) {
                                                    {
                                                      Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                      acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                      stan::math::fill(acc0, DUMMY_VAR__);
                                                      
                                                      
                                                      current_statement__ = 436;
                                                      assign(acc0,
                                                        rep_vector(0, 2),
                                                        "assigning variable acc0");
                                                      current_statement__ = 439;
                                                      for (int z7_val = 1;
                                                           z7_val <= 2;
                                                           ++z7_val) {
                                                        current_statement__ = 437;
                                                        assign(acc0,
                                                          (rvalue(acc0,
                                                             "acc0",
                                                             index_uni(z7_val))
                                                            +
                                                            rvalue(m6, "m6",
                                                              index_uni(
                                                                ((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    8388608)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z24 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z7_val
                                                                    - 1) * 4))
                                                                    +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                   ((z9 - 1)
                                                                    * 1)) +
                                                                  1)))),
                                                          "assigning variable acc0", 
                                                          index_uni(z7_val));
                                                      }
                                                      current_statement__ = 440;
                                                      assign(m7,
                                                        (rvalue(m7, "m7",
                                                           index_uni(
                                                             (((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    4194304)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z23 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 16))
                                                                   +
                                                                   ((z29 - 1)
                                                                    * 8)) +
                                                                  ((z30 - 1)
                                                                    * 4)) +
                                                                 ((z8 - 1) *
                                                                   2)) +
                                                                ((z9 - 1) *
                                                                  1)) + 1)))
                                                          +
                                                          log_sum_exp(acc0)),
                                                        "assigning variable m7", 
                                                        index_uni((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    4194304)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z23 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 488;
      assign(m8, rep_array(0, 4194304), "assigning variable m8");
      current_statement__ = 539;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 537;
        for (int z30 = 1; z30 <= 2; ++z30) {
          current_statement__ = 535;
          for (int z29 = 1; z29 <= 2; ++z29) {
            current_statement__ = 533;
            for (int z28 = 1; z28 <= 2; ++z28) {
              current_statement__ = 531;
              for (int z27 = 1; z27 <= 2; ++z27) {
                current_statement__ = 529;
                for (int z26 = 1; z26 <= 2; ++z26) {
                  current_statement__ = 527;
                  for (int z25 = 1; z25 <= 2; ++z25) {
                    current_statement__ = 525;
                    for (int z24 = 1; z24 <= 2; ++z24) {
                      current_statement__ = 523;
                      for (int z23 = 1; z23 <= 2; ++z23) {
                        current_statement__ = 521;
                        for (int z22 = 1; z22 <= 2; ++z22) {
                          current_statement__ = 519;
                          for (int z21 = 1; z21 <= 2; ++z21) {
                            current_statement__ = 517;
                            for (int z20 = 1; z20 <= 2; ++z20) {
                              current_statement__ = 515;
                              for (int z19 = 1; z19 <= 2; ++z19) {
                                current_statement__ = 513;
                                for (int z18 = 1; z18 <= 2; ++z18) {
                                  current_statement__ = 511;
                                  for (int z17 = 1; z17 <= 2; ++z17) {
                                    current_statement__ = 509;
                                    for (int z16 = 1; z16 <= 2; ++z16) {
                                      current_statement__ = 507;
                                      for (int z15 = 1; z15 <= 2; ++z15) {
                                        current_statement__ = 505;
                                        for (int z14 = 1; z14 <= 2; ++z14) {
                                          current_statement__ = 503;
                                          for (int z13 = 1; z13 <= 2; ++z13) {
                                            current_statement__ = 501;
                                            for (int z12 = 1; z12 <= 2; ++z12) {
                                              current_statement__ = 499;
                                              for (int z11 = 1; z11 <= 2;
                                                   ++z11) {
                                                current_statement__ = 497;
                                                for (int z10 = 1; z10 <= 2;
                                                     ++z10) {
                                                  {
                                                    Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                    acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                    stan::math::fill(acc0, DUMMY_VAR__);
                                                    
                                                    
                                                    current_statement__ = 490;
                                                    assign(acc0,
                                                      rep_vector(0, 2),
                                                      "assigning variable acc0");
                                                    current_statement__ = 493;
                                                    for (int z8_val = 1;
                                                         z8_val <= 2;
                                                         ++z8_val) {
                                                      current_statement__ = 491;
                                                      assign(acc0,
                                                        (rvalue(acc0, "acc0",
                                                           index_uni(z8_val))
                                                          +
                                                          rvalue(m7, "m7",
                                                            index_uni(
                                                              (((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    4194304)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z23 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 4)) +
                                                                  ((z8_val -
                                                                    1) * 2))
                                                                 +
                                                                 ((z9 - 1) *
                                                                   1)) + 1)))),
                                                        "assigning variable acc0", 
                                                        index_uni(z8_val));
                                                    }
                                                    current_statement__ = 494;
                                                    assign(m8,
                                                      (rvalue(m8, "m8",
                                                         index_uni(((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    2097152)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z22 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                        log_sum_exp(acc0)),
                                                      "assigning variable m8", 
                                                      index_uni(((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    2097152)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z22 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z9 - 1)
                                                                    * 1)) +
                                                                  1)));
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 540;
      assign(m9, rep_array(0, 2097152), "assigning variable m9");
      current_statement__ = 589;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 587;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 585;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 583;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 581;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 579;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 577;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 575;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 573;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 571;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 569;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 567;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 565;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 563;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 561;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 559;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 557;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 555;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          current_statement__ = 553;
                                          for (int z12 = 1; z12 <= 2; ++z12) {
                                            current_statement__ = 551;
                                            for (int z11 = 1; z11 <= 2; ++z11) {
                                              current_statement__ = 549;
                                              for (int z10 = 1; z10 <= 2;
                                                   ++z10) {
                                                {
                                                  Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                  acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                  stan::math::fill(acc0, DUMMY_VAR__);
                                                  
                                                  
                                                  current_statement__ = 542;
                                                  assign(acc0,
                                                    rep_vector(0, 2),
                                                    "assigning variable acc0");
                                                  current_statement__ = 545;
                                                  for (int z9_val = 1;
                                                       z9_val <= 2; ++z9_val) {
                                                    current_statement__ = 543;
                                                    assign(acc0,
                                                      (rvalue(acc0, "acc0",
                                                         index_uni(z9_val)) +
                                                        rvalue(m8, "m8",
                                                          index_uni(((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    2097152)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z22 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z9_val
                                                                    - 1) * 1))
                                                                    + 1)))),
                                                      "assigning variable acc0", 
                                                      index_uni(z9_val));
                                                  }
                                                  current_statement__ = 546;
                                                  assign(m9,
                                                    (rvalue(m9, "m9",
                                                       index_uni((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    1048576)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                   + 1))) +
                                                      log_sum_exp(acc0)),
                                                    "assigning variable m9", 
                                                    index_uni((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    1048576)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)));
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 590;
      assign(m10, rep_array(0, 1048576), "assigning variable m10");
      current_statement__ = 637;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 635;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 633;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 631;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 629;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 627;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 625;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 623;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 621;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 619;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 617;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 615;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 613;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 611;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 609;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 607;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 605;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 603;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          current_statement__ = 601;
                                          for (int z12 = 1; z12 <= 2; ++z12) {
                                            current_statement__ = 599;
                                            for (int z11 = 1; z11 <= 2; ++z11) {
                                              {
                                                Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                                acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                                stan::math::fill(acc0, DUMMY_VAR__);
                                                
                                                
                                                current_statement__ = 592;
                                                assign(acc0,
                                                  rep_vector(0, 2),
                                                  "assigning variable acc0");
                                                current_statement__ = 595;
                                                for (int z10_val = 1;
                                                     z10_val <= 2; ++z10_val) {
                                                  current_statement__ = 593;
                                                  assign(acc0,
                                                    (rvalue(acc0, "acc0",
                                                       index_uni(z10_val)) +
                                                      rvalue(m9, "m9",
                                                        index_uni((((((((((((((((((((((((z10_val
                                                                    - 1) *
                                                                    1048576)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)))),
                                                    "assigning variable acc0", 
                                                    index_uni(z10_val));
                                                }
                                                current_statement__ = 596;
                                                assign(m10,
                                                  (rvalue(m10, "m10",
                                                     index_uni(((((((((((((((((((((((z11
                                                                    - 1) *
                                                                    524288) +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                   +
                                                                   ((z29 - 1)
                                                                    * 2)) +
                                                                  ((z30 - 1)
                                                                    * 1)) +
                                                                 1))) +
                                                    log_sum_exp(acc0)),
                                                  "assigning variable m10", 
                                                  index_uni(((((((((((((((((((((((z11
                                                                    - 1) *
                                                                    524288) +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                   +
                                                                   ((z26 - 1)
                                                                    * 16)) +
                                                                  ((z27 - 1)
                                                                    * 8)) +
                                                                 ((z28 - 1) *
                                                                   4)) +
                                                                ((z29 - 1) *
                                                                  2)) +
                                                               ((z30 - 1) *
                                                                 1)) + 1)));
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 638;
      assign(m11, rep_array(0, 524288), "assigning variable m11");
      current_statement__ = 683;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 681;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 679;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 677;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 675;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 673;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 671;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 669;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 667;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 665;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 663;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 661;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 659;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 657;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 655;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 653;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 651;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 649;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          current_statement__ = 647;
                                          for (int z12 = 1; z12 <= 2; ++z12) {
                                            {
                                              Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                              acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                              stan::math::fill(acc0, DUMMY_VAR__);
                                              
                                              
                                              current_statement__ = 640;
                                              assign(acc0, rep_vector(0, 2),
                                                "assigning variable acc0");
                                              current_statement__ = 643;
                                              for (int z11_val = 1;
                                                   z11_val <= 2; ++z11_val) {
                                                current_statement__ = 641;
                                                assign(acc0,
                                                  (rvalue(acc0, "acc0",
                                                     index_uni(z11_val)) +
                                                    rvalue(m10, "m10",
                                                      index_uni(((((((((((((((((((((((z11_val
                                                                    - 1) *
                                                                    524288) +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 1)) +
                                                                  1)))),
                                                  "assigning variable acc0", 
                                                  index_uni(z11_val));
                                              }
                                              current_statement__ = 644;
                                              assign(m11,
                                                (rvalue(m11, "m11",
                                                   index_uni((((((((((((((((((((((z12
                                                                    - 1) *
                                                                    262144) +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                   +
                                                                   ((z27 - 1)
                                                                    * 8)) +
                                                                  ((z28 - 1)
                                                                    * 4)) +
                                                                 ((z29 - 1) *
                                                                   2)) +
                                                                ((z30 - 1) *
                                                                  1)) + 1)))
                                                  + log_sum_exp(acc0)),
                                                "assigning variable m11", 
                                                index_uni((((((((((((((((((((((z12
                                                                    - 1) *
                                                                    262144) +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                   +
                                                                   ((z24 - 1)
                                                                    * 64)) +
                                                                  ((z25 - 1)
                                                                    * 32)) +
                                                                 ((z26 - 1) *
                                                                   16)) +
                                                                ((z27 - 1) *
                                                                  8)) +
                                                               ((z28 - 1) *
                                                                 4)) +
                                                              ((z29 - 1) * 2))
                                                             +
                                                             ((z30 - 1) * 1))
                                                            + 1)));
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 684;
      assign(m12, rep_array(0, 262144), "assigning variable m12");
      current_statement__ = 727;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 725;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 723;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 721;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 719;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 717;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 715;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 713;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 711;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 709;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 707;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 705;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 703;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 701;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 699;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 697;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 695;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 693;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          {
                                            Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                            acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                            stan::math::fill(acc0, DUMMY_VAR__);
                                            
                                            
                                            current_statement__ = 686;
                                            assign(acc0, rep_vector(0, 2),
                                              "assigning variable acc0");
                                            current_statement__ = 689;
                                            for (int z12_val = 1;
                                                 z12_val <= 2; ++z12_val) {
                                              current_statement__ = 687;
                                              assign(acc0,
                                                (rvalue(acc0, "acc0",
                                                   index_uni(z12_val)) +
                                                  rvalue(m11, "m11",
                                                    index_uni((((((((((((((((((((((z12_val
                                                                    - 1) *
                                                                    262144) +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)))),
                                                "assigning variable acc0", 
                                                index_uni(z12_val));
                                            }
                                            current_statement__ = 690;
                                            assign(m12,
                                              (rvalue(m12, "m12",
                                                 index_uni(((((((((((((((((((((z13
                                                                    - 1) *
                                                                    131072) +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                   +
                                                                   ((z25 - 1)
                                                                    * 32)) +
                                                                  ((z26 - 1)
                                                                    * 16)) +
                                                                 ((z27 - 1) *
                                                                   8)) +
                                                                ((z28 - 1) *
                                                                  4)) +
                                                               ((z29 - 1) *
                                                                 2)) +
                                                              ((z30 - 1) * 1))
                                                             + 1))) +
                                                log_sum_exp(acc0)),
                                              "assigning variable m12", 
                                              index_uni(((((((((((((((((((((z13
                                                                    - 1) *
                                                                    131072) +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                   +
                                                                   ((z22 - 1)
                                                                    * 256)) +
                                                                  ((z23 - 1)
                                                                    * 128)) +
                                                                 ((z24 - 1) *
                                                                   64)) +
                                                                ((z25 - 1) *
                                                                  32)) +
                                                               ((z26 - 1) *
                                                                 16)) +
                                                              ((z27 - 1) * 8))
                                                             +
                                                             ((z28 - 1) * 4))
                                                            +
                                                            ((z29 - 1) * 2))
                                                           + ((z30 - 1) * 1))
                                                          + 1)));
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 728;
      assign(m13, rep_array(0, 131072), "assigning variable m13");
      current_statement__ = 769;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 767;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 765;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 763;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 761;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 759;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 757;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 755;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 753;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 751;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 749;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 747;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 745;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 743;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 741;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 739;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 737;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        {
                                          Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                          acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                          stan::math::fill(acc0, DUMMY_VAR__);
                                          
                                          current_statement__ = 730;
                                          assign(acc0, rep_vector(0, 2),
                                            "assigning variable acc0");
                                          current_statement__ = 733;
                                          for (int z13_val = 1; z13_val <= 2;
                                               ++z13_val) {
                                            current_statement__ = 731;
                                            assign(acc0,
                                              (rvalue(acc0, "acc0",
                                                 index_uni(z13_val)) +
                                                rvalue(m12, "m12",
                                                  index_uni(((((((((((((((((((((z13_val
                                                                    - 1) *
                                                                    131072) +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                   +
                                                                   ((z26 - 1)
                                                                    * 16)) +
                                                                  ((z27 - 1)
                                                                    * 8)) +
                                                                 ((z28 - 1) *
                                                                   4)) +
                                                                ((z29 - 1) *
                                                                  2)) +
                                                               ((z30 - 1) *
                                                                 1)) + 1)))),
                                              "assigning variable acc0", 
                                              index_uni(z13_val));
                                          }
                                          current_statement__ = 734;
                                          assign(m13,
                                            (rvalue(m13, "m13",
                                               index_uni((((((((((((((((((((z14
                                                                    - 1) *
                                                                    65536) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                   +
                                                                   ((z23 - 1)
                                                                    * 128)) +
                                                                  ((z24 - 1)
                                                                    * 64)) +
                                                                 ((z25 - 1) *
                                                                   32)) +
                                                                ((z26 - 1) *
                                                                  16)) +
                                                               ((z27 - 1) *
                                                                 8)) +
                                                              ((z28 - 1) * 4))
                                                             +
                                                             ((z29 - 1) * 2))
                                                            +
                                                            ((z30 - 1) * 1))
                                                           + 1))) +
                                              log_sum_exp(acc0)),
                                            "assigning variable m13", 
                                            index_uni((((((((((((((((((((z14
                                                                    - 1) *
                                                                    65536) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                   ((z20 - 1)
                                                                    * 1024))
                                                                  +
                                                                  ((z21 - 1)
                                                                    * 512)) +
                                                                 ((z22 - 1) *
                                                                   256)) +
                                                                ((z23 - 1) *
                                                                  128)) +
                                                               ((z24 - 1) *
                                                                 64)) +
                                                              ((z25 - 1) *
                                                                32)) +
                                                             ((z26 - 1) * 16))
                                                            +
                                                            ((z27 - 1) * 8))
                                                           + ((z28 - 1) * 4))
                                                          + ((z29 - 1) * 2))
                                                         + ((z30 - 1) * 1)) +
                                                        1)));
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 770;
      assign(m14, rep_array(0, 65536), "assigning variable m14");
      current_statement__ = 809;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 807;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 805;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 803;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 801;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 799;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 797;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 795;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 793;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 791;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 789;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 787;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 785;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 783;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 781;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 779;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      {
                                        Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                        acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                        stan::math::fill(acc0, DUMMY_VAR__);
                                        
                                        current_statement__ = 772;
                                        assign(acc0, rep_vector(0, 2),
                                          "assigning variable acc0");
                                        current_statement__ = 775;
                                        for (int z14_val = 1; z14_val <= 2;
                                             ++z14_val) {
                                          current_statement__ = 773;
                                          assign(acc0,
                                            (rvalue(acc0, "acc0",
                                               index_uni(z14_val)) +
                                              rvalue(m13, "m13",
                                                index_uni((((((((((((((((((((z14_val
                                                                    - 1) *
                                                                    65536) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                   +
                                                                   ((z24 - 1)
                                                                    * 64)) +
                                                                  ((z25 - 1)
                                                                    * 32)) +
                                                                 ((z26 - 1) *
                                                                   16)) +
                                                                ((z27 - 1) *
                                                                  8)) +
                                                               ((z28 - 1) *
                                                                 4)) +
                                                              ((z29 - 1) * 2))
                                                             +
                                                             ((z30 - 1) * 1))
                                                            + 1)))),
                                            "assigning variable acc0", 
                                            index_uni(z14_val));
                                        }
                                        current_statement__ = 776;
                                        assign(m14,
                                          (rvalue(m14, "m14",
                                             index_uni(((((((((((((((((((z15
                                                                    - 1) *
                                                                    32768) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                   ((z21 - 1)
                                                                    * 512)) +
                                                                  ((z22 - 1)
                                                                    * 256)) +
                                                                 ((z23 - 1) *
                                                                   128)) +
                                                                ((z24 - 1) *
                                                                  64)) +
                                                               ((z25 - 1) *
                                                                 32)) +
                                                              ((z26 - 1) *
                                                                16)) +
                                                             ((z27 - 1) * 8))
                                                            +
                                                            ((z28 - 1) * 4))
                                                           + ((z29 - 1) * 2))
                                                          + ((z30 - 1) * 1))
                                                         + 1))) +
                                            log_sum_exp(acc0)),
                                          "assigning variable m14", index_uni(
                                                                    ((((((((((((((((((z15
                                                                    - 1) *
                                                                    32768) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 810;
      assign(m15, rep_array(0, 32768), "assigning variable m15");
      current_statement__ = 847;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 845;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 843;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 841;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 839;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 837;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 835;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 833;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 831;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 829;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 827;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 825;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 823;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 821;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 819;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    {
                                      Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                      acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                      stan::math::fill(acc0, DUMMY_VAR__);
                                      
                                      current_statement__ = 812;
                                      assign(acc0, rep_vector(0, 2),
                                        "assigning variable acc0");
                                      current_statement__ = 815;
                                      for (int z15_val = 1; z15_val <= 2;
                                           ++z15_val) {
                                        current_statement__ = 813;
                                        assign(acc0,
                                          (rvalue(acc0, "acc0",
                                             index_uni(z15_val)) +
                                            rvalue(m14, "m14",
                                              index_uni(((((((((((((((((((z15_val
                                                                    - 1) *
                                                                    32768) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                   +
                                                                   ((z22 - 1)
                                                                    * 256)) +
                                                                  ((z23 - 1)
                                                                    * 128)) +
                                                                 ((z24 - 1) *
                                                                   64)) +
                                                                ((z25 - 1) *
                                                                  32)) +
                                                               ((z26 - 1) *
                                                                 16)) +
                                                              ((z27 - 1) * 8))
                                                             +
                                                             ((z28 - 1) * 4))
                                                            +
                                                            ((z29 - 1) * 2))
                                                           + ((z30 - 1) * 1))
                                                          + 1)))),
                                          "assigning variable acc0", 
                                          index_uni(z15_val));
                                      }
                                      current_statement__ = 816;
                                      assign(m15,
                                        (rvalue(m15, "m15",
                                           index_uni((((((((((((((((((z16 -
                                                                    1) *
                                                                    16384) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                   ((z19 - 1)
                                                                    * 2048))
                                                                  +
                                                                  ((z20 - 1)
                                                                    * 1024))
                                                                 +
                                                                 ((z21 - 1) *
                                                                   512)) +
                                                                ((z22 - 1) *
                                                                  256)) +
                                                               ((z23 - 1) *
                                                                 128)) +
                                                              ((z24 - 1) *
                                                                64)) +
                                                             ((z25 - 1) * 32))
                                                            +
                                                            ((z26 - 1) * 16))
                                                           + ((z27 - 1) * 8))
                                                          + ((z28 - 1) * 4))
                                                         + ((z29 - 1) * 2)) +
                                                        ((z30 - 1) * 1)) + 1)))
                                          + log_sum_exp(acc0)),
                                        "assigning variable m15", index_uni(
                                                                    (((((((((((((((((z16
                                                                    - 1) *
                                                                    16384) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 848;
      assign(m16, rep_array(0, 16384), "assigning variable m16");
      current_statement__ = 883;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 881;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 879;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 877;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 875;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 873;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 871;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 869;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 867;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 865;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 863;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 861;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 859;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 857;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  {
                                    Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                    acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                    stan::math::fill(acc0, DUMMY_VAR__);
                                    
                                    current_statement__ = 850;
                                    assign(acc0, rep_vector(0, 2),
                                      "assigning variable acc0");
                                    current_statement__ = 853;
                                    for (int z16_val = 1; z16_val <= 2;
                                         ++z16_val) {
                                      current_statement__ = 851;
                                      assign(acc0,
                                        (rvalue(acc0, "acc0",
                                           index_uni(z16_val)) +
                                          rvalue(m15, "m15",
                                            index_uni((((((((((((((((((z16_val
                                                                    - 1) *
                                                                    16384) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                   ((z20 - 1)
                                                                    * 1024))
                                                                  +
                                                                  ((z21 - 1)
                                                                    * 512)) +
                                                                 ((z22 - 1) *
                                                                   256)) +
                                                                ((z23 - 1) *
                                                                  128)) +
                                                               ((z24 - 1) *
                                                                 64)) +
                                                              ((z25 - 1) *
                                                                32)) +
                                                             ((z26 - 1) * 16))
                                                            +
                                                            ((z27 - 1) * 8))
                                                           + ((z28 - 1) * 4))
                                                          + ((z29 - 1) * 2))
                                                         + ((z30 - 1) * 1)) +
                                                        1)))),
                                        "assigning variable acc0", index_uni(z16_val));
                                    }
                                    current_statement__ = 854;
                                    assign(m16,
                                      (rvalue(m16, "m16",
                                         index_uni(((((((((((((((((z17 - 1) *
                                                                   8192) +
                                                                  ((z18 - 1)
                                                                    * 4096))
                                                                 +
                                                                 ((z19 - 1) *
                                                                   2048)) +
                                                                ((z20 - 1) *
                                                                  1024)) +
                                                               ((z21 - 1) *
                                                                 512)) +
                                                              ((z22 - 1) *
                                                                256)) +
                                                             ((z23 - 1) *
                                                               128)) +
                                                            ((z24 - 1) * 64))
                                                           +
                                                           ((z25 - 1) * 32))
                                                          + ((z26 - 1) * 16))
                                                         + ((z27 - 1) * 8)) +
                                                        ((z28 - 1) * 4)) +
                                                       ((z29 - 1) * 2)) +
                                                      ((z30 - 1) * 1)) + 1)))
                                        + log_sum_exp(acc0)),
                                      "assigning variable m16", index_uni(
                                                                  ((((((((((((((((z17
                                                                    - 1) *
                                                                    8192) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 884;
      assign(m17, rep_array(0, 8192), "assigning variable m17");
      current_statement__ = 917;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 915;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 913;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 911;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 909;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 907;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 905;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 903;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 901;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 899;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 897;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 895;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 893;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                {
                                  Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                  acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                  stan::math::fill(acc0, DUMMY_VAR__);
                                  
                                  current_statement__ = 886;
                                  assign(acc0, rep_vector(0, 2),
                                    "assigning variable acc0");
                                  current_statement__ = 889;
                                  for (int z17_val = 1; z17_val <= 2;
                                       ++z17_val) {
                                    current_statement__ = 887;
                                    assign(acc0,
                                      (rvalue(acc0, "acc0",
                                         index_uni(z17_val)) +
                                        rvalue(m16, "m16",
                                          index_uni(((((((((((((((((z17_val -
                                                                    1) *
                                                                    8192) +
                                                                   ((z18 - 1)
                                                                    * 4096))
                                                                  +
                                                                  ((z19 - 1)
                                                                    * 2048))
                                                                 +
                                                                 ((z20 - 1) *
                                                                   1024)) +
                                                                ((z21 - 1) *
                                                                  512)) +
                                                               ((z22 - 1) *
                                                                 256)) +
                                                              ((z23 - 1) *
                                                                128)) +
                                                             ((z24 - 1) * 64))
                                                            +
                                                            ((z25 - 1) * 32))
                                                           +
                                                           ((z26 - 1) * 16))
                                                          + ((z27 - 1) * 8))
                                                         + ((z28 - 1) * 4)) +
                                                        ((z29 - 1) * 2)) +
                                                       ((z30 - 1) * 1)) + 1)))),
                                      "assigning variable acc0", index_uni(z17_val));
                                  }
                                  current_statement__ = 890;
                                  assign(m17,
                                    (rvalue(m17, "m17",
                                       index_uni((((((((((((((((z18 - 1) *
                                                                4096) +
                                                               ((z19 - 1) *
                                                                 2048)) +
                                                              ((z20 - 1) *
                                                                1024)) +
                                                             ((z21 - 1) *
                                                               512)) +
                                                            ((z22 - 1) * 256))
                                                           +
                                                           ((z23 - 1) * 128))
                                                          + ((z24 - 1) * 64))
                                                         + ((z25 - 1) * 32))
                                                        + ((z26 - 1) * 16)) +
                                                       ((z27 - 1) * 8)) +
                                                      ((z28 - 1) * 4)) +
                                                     ((z29 - 1) * 2)) +
                                                    ((z30 - 1) * 1)) + 1))) +
                                      log_sum_exp(acc0)),
                                    "assigning variable m17", index_uni(
                                                                (((((((((((((((z18
                                                                    - 1) *
                                                                    4096) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 1)) +
                                                                  1)));
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 918;
      assign(m18, rep_array(0, 4096), "assigning variable m18");
      current_statement__ = 949;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 947;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 945;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 943;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 941;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 939;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 937;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 935;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 933;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 931;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 929;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 927;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              {
                                Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                                acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                                stan::math::fill(acc0, DUMMY_VAR__);
                                
                                current_statement__ = 920;
                                assign(acc0, rep_vector(0, 2),
                                  "assigning variable acc0");
                                current_statement__ = 923;
                                for (int z18_val = 1; z18_val <= 2; ++z18_val) {
                                  current_statement__ = 921;
                                  assign(acc0,
                                    (rvalue(acc0, "acc0", index_uni(z18_val))
                                      +
                                      rvalue(m17, "m17",
                                        index_uni((((((((((((((((z18_val - 1)
                                                                 * 4096) +
                                                                ((z19 - 1) *
                                                                  2048)) +
                                                               ((z20 - 1) *
                                                                 1024)) +
                                                              ((z21 - 1) *
                                                                512)) +
                                                             ((z22 - 1) *
                                                               256)) +
                                                            ((z23 - 1) * 128))
                                                           +
                                                           ((z24 - 1) * 64))
                                                          + ((z25 - 1) * 32))
                                                         + ((z26 - 1) * 16))
                                                        + ((z27 - 1) * 8)) +
                                                       ((z28 - 1) * 4)) +
                                                      ((z29 - 1) * 2)) +
                                                     ((z30 - 1) * 1)) + 1)))),
                                    "assigning variable acc0", index_uni(z18_val));
                                }
                                current_statement__ = 924;
                                assign(m18,
                                  (rvalue(m18, "m18",
                                     index_uni(((((((((((((((z19 - 1) * 2048)
                                                            +
                                                            ((z20 - 1) *
                                                              1024)) +
                                                           ((z21 - 1) * 512))
                                                          +
                                                          ((z22 - 1) * 256))
                                                         + ((z23 - 1) * 128))
                                                        + ((z24 - 1) * 64)) +
                                                       ((z25 - 1) * 32)) +
                                                      ((z26 - 1) * 16)) +
                                                     ((z27 - 1) * 8)) +
                                                    ((z28 - 1) * 4)) +
                                                   ((z29 - 1) * 2)) +
                                                  ((z30 - 1) * 1)) + 1))) +
                                    log_sum_exp(acc0)),
                                  "assigning variable m18", index_uni(
                                                              ((((((((((((((z19
                                                                    - 1) *
                                                                    2048) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)));
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 950;
      assign(m19, rep_array(0, 2048), "assigning variable m19");
      current_statement__ = 979;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 977;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 975;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 973;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 971;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 969;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 967;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 965;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 963;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 961;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 959;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            {
                              Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                              acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                              stan::math::fill(acc0, DUMMY_VAR__);
                              
                              current_statement__ = 952;
                              assign(acc0, rep_vector(0, 2),
                                "assigning variable acc0");
                              current_statement__ = 955;
                              for (int z19_val = 1; z19_val <= 2; ++z19_val) {
                                current_statement__ = 953;
                                assign(acc0,
                                  (rvalue(acc0, "acc0", index_uni(z19_val)) +
                                    rvalue(m18, "m18",
                                      index_uni(((((((((((((((z19_val - 1) *
                                                              2048) +
                                                             ((z20 - 1) *
                                                               1024)) +
                                                            ((z21 - 1) * 512))
                                                           +
                                                           ((z22 - 1) * 256))
                                                          +
                                                          ((z23 - 1) * 128))
                                                         + ((z24 - 1) * 64))
                                                        + ((z25 - 1) * 32)) +
                                                       ((z26 - 1) * 16)) +
                                                      ((z27 - 1) * 8)) +
                                                     ((z28 - 1) * 4)) +
                                                    ((z29 - 1) * 2)) +
                                                   ((z30 - 1) * 1)) + 1)))),
                                  "assigning variable acc0", index_uni(z19_val));
                              }
                              current_statement__ = 956;
                              assign(m19,
                                (rvalue(m19, "m19",
                                   index_uni((((((((((((((z20 - 1) * 1024) +
                                                         ((z21 - 1) * 512)) +
                                                        ((z22 - 1) * 256)) +
                                                       ((z23 - 1) * 128)) +
                                                      ((z24 - 1) * 64)) +
                                                     ((z25 - 1) * 32)) +
                                                    ((z26 - 1) * 16)) +
                                                   ((z27 - 1) * 8)) +
                                                  ((z28 - 1) * 4)) +
                                                 ((z29 - 1) * 2)) +
                                                ((z30 - 1) * 1)) + 1))) +
                                  log_sum_exp(acc0)),
                                "assigning variable m19", index_uni((((((((((((((z20
                                                                    - 1) *
                                                                    1024) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 980;
      assign(m20, rep_array(0, 1024), "assigning variable m20");
      current_statement__ = 1007;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1005;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1003;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1001;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 999;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 997;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 995;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 993;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 991;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 989;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          {
                            Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                            acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                            stan::math::fill(acc0, DUMMY_VAR__);
                            
                            current_statement__ = 982;
                            assign(acc0, rep_vector(0, 2),
                              "assigning variable acc0");
                            current_statement__ = 985;
                            for (int z20_val = 1; z20_val <= 2; ++z20_val) {
                              current_statement__ = 983;
                              assign(acc0,
                                (rvalue(acc0, "acc0", index_uni(z20_val)) +
                                  rvalue(m19, "m19",
                                    index_uni((((((((((((((z20_val - 1) *
                                                           1024) +
                                                          ((z21 - 1) * 512))
                                                         + ((z22 - 1) * 256))
                                                        + ((z23 - 1) * 128))
                                                       + ((z24 - 1) * 64)) +
                                                      ((z25 - 1) * 32)) +
                                                     ((z26 - 1) * 16)) +
                                                    ((z27 - 1) * 8)) +
                                                   ((z28 - 1) * 4)) +
                                                  ((z29 - 1) * 2)) +
                                                 ((z30 - 1) * 1)) + 1)))),
                                "assigning variable acc0", index_uni(z20_val));
                            }
                            current_statement__ = 986;
                            assign(m20,
                              (rvalue(m20, "m20",
                                 index_uni(((((((((((((z21 - 1) * 512) +
                                                      ((z22 - 1) * 256)) +
                                                     ((z23 - 1) * 128)) +
                                                    ((z24 - 1) * 64)) +
                                                   ((z25 - 1) * 32)) +
                                                  ((z26 - 1) * 16)) +
                                                 ((z27 - 1) * 8)) +
                                                ((z28 - 1) * 4)) +
                                               ((z29 - 1) * 2)) +
                                              ((z30 - 1) * 1)) + 1))) +
                                log_sum_exp(acc0)),
                              "assigning variable m20", index_uni(((((((((((((z21
                                                                    - 1) *
                                                                    512) +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1008;
      assign(m21, rep_array(0, 512), "assigning variable m21");
      current_statement__ = 1033;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1031;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1029;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1027;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1025;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1023;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 1021;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 1019;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 1017;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        {
                          Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                          acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                          stan::math::fill(acc0, DUMMY_VAR__);
                          
                          current_statement__ = 1010;
                          assign(acc0, rep_vector(0, 2),
                            "assigning variable acc0");
                          current_statement__ = 1013;
                          for (int z21_val = 1; z21_val <= 2; ++z21_val) {
                            current_statement__ = 1011;
                            assign(acc0,
                              (rvalue(acc0, "acc0", index_uni(z21_val)) +
                                rvalue(m20, "m20",
                                  index_uni(((((((((((((z21_val - 1) * 512) +
                                                       ((z22 - 1) * 256)) +
                                                      ((z23 - 1) * 128)) +
                                                     ((z24 - 1) * 64)) +
                                                    ((z25 - 1) * 32)) +
                                                   ((z26 - 1) * 16)) +
                                                  ((z27 - 1) * 8)) +
                                                 ((z28 - 1) * 4)) +
                                                ((z29 - 1) * 2)) +
                                               ((z30 - 1) * 1)) + 1)))),
                              "assigning variable acc0", index_uni(z21_val));
                          }
                          current_statement__ = 1014;
                          assign(m21,
                            (rvalue(m21, "m21",
                               index_uni((((((((((((z22 - 1) * 256) +
                                                   ((z23 - 1) * 128)) +
                                                  ((z24 - 1) * 64)) +
                                                 ((z25 - 1) * 32)) +
                                                ((z26 - 1) * 16)) +
                                               ((z27 - 1) * 8)) +
                                              ((z28 - 1) * 4)) +
                                             ((z29 - 1) * 2)) +
                                            ((z30 - 1) * 1)) + 1))) +
                              log_sum_exp(acc0)),
                            "assigning variable m21", index_uni((((((((((((z22
                                                                    - 1) *
                                                                    256) +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 1)) +
                                                                  1)));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1034;
      assign(m22, rep_array(0, 256), "assigning variable m22");
      current_statement__ = 1057;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1055;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1053;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1051;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1049;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1047;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 1045;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 1043;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      {
                        Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                        acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                        stan::math::fill(acc0, DUMMY_VAR__);
                        
                        current_statement__ = 1036;
                        assign(acc0, rep_vector(0, 2),
                          "assigning variable acc0");
                        current_statement__ = 1039;
                        for (int z22_val = 1; z22_val <= 2; ++z22_val) {
                          current_statement__ = 1037;
                          assign(acc0,
                            (rvalue(acc0, "acc0", index_uni(z22_val)) +
                              rvalue(m21, "m21",
                                index_uni((((((((((((z22_val - 1) * 256) +
                                                    ((z23 - 1) * 128)) +
                                                   ((z24 - 1) * 64)) +
                                                  ((z25 - 1) * 32)) +
                                                 ((z26 - 1) * 16)) +
                                                ((z27 - 1) * 8)) +
                                               ((z28 - 1) * 4)) +
                                              ((z29 - 1) * 2)) +
                                             ((z30 - 1) * 1)) + 1)))),
                            "assigning variable acc0", index_uni(z22_val));
                        }
                        current_statement__ = 1040;
                        assign(m22,
                          (rvalue(m22, "m22",
                             index_uni(((((((((((z23 - 1) * 128) +
                                                ((z24 - 1) * 64)) +
                                               ((z25 - 1) * 32)) +
                                              ((z26 - 1) * 16)) +
                                             ((z27 - 1) * 8)) +
                                            ((z28 - 1) * 4)) +
                                           ((z29 - 1) * 2)) +
                                          ((z30 - 1) * 1)) + 1))) +
                            log_sum_exp(acc0)),
                          "assigning variable m22", index_uni(((((((((((z23 -
                                                                    1) * 128)
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1058;
      assign(m23, rep_array(0, 128), "assigning variable m23");
      current_statement__ = 1079;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1077;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1075;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1073;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1071;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1069;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 1067;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    {
                      Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                      acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                      stan::math::fill(acc0, DUMMY_VAR__);
                      
                      current_statement__ = 1060;
                      assign(acc0, rep_vector(0, 2),
                        "assigning variable acc0");
                      current_statement__ = 1063;
                      for (int z23_val = 1; z23_val <= 2; ++z23_val) {
                        current_statement__ = 1061;
                        assign(acc0,
                          (rvalue(acc0, "acc0", index_uni(z23_val)) +
                            rvalue(m22, "m22",
                              index_uni(((((((((((z23_val - 1) * 128) +
                                                 ((z24 - 1) * 64)) +
                                                ((z25 - 1) * 32)) +
                                               ((z26 - 1) * 16)) +
                                              ((z27 - 1) * 8)) +
                                             ((z28 - 1) * 4)) +
                                            ((z29 - 1) * 2)) +
                                           ((z30 - 1) * 1)) + 1)))),
                          "assigning variable acc0", index_uni(z23_val));
                      }
                      current_statement__ = 1064;
                      assign(m23,
                        (rvalue(m23, "m23",
                           index_uni((((((((((z24 - 1) * 64) +
                                             ((z25 - 1) * 32)) +
                                            ((z26 - 1) * 16)) +
                                           ((z27 - 1) * 8)) +
                                          ((z28 - 1) * 4)) + ((z29 - 1) * 2))
                                        + ((z30 - 1) * 1)) + 1))) +
                          log_sum_exp(acc0)),
                        "assigning variable m23", index_uni((((((((((z24 - 1)
                                                                    * 64) +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                   +
                                                                   ((z26 - 1)
                                                                    * 16)) +
                                                                  ((z27 - 1)
                                                                    * 8)) +
                                                                 ((z28 - 1) *
                                                                   4)) +
                                                                ((z29 - 1) *
                                                                  2)) +
                                                               ((z30 - 1) *
                                                                 1)) + 1)));
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1080;
      assign(m24, rep_array(0, 64), "assigning variable m24");
      current_statement__ = 1099;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1097;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1095;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1093;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1091;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1089;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  {
                    Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                    acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                    stan::math::fill(acc0, DUMMY_VAR__);
                    
                    current_statement__ = 1082;
                    assign(acc0, rep_vector(0, 2), "assigning variable acc0");
                    current_statement__ = 1085;
                    for (int z24_val = 1; z24_val <= 2; ++z24_val) {
                      current_statement__ = 1083;
                      assign(acc0,
                        (rvalue(acc0, "acc0", index_uni(z24_val)) +
                          rvalue(m23, "m23",
                            index_uni((((((((((z24_val - 1) * 64) +
                                              ((z25 - 1) * 32)) +
                                             ((z26 - 1) * 16)) +
                                            ((z27 - 1) * 8)) +
                                           ((z28 - 1) * 4)) +
                                          ((z29 - 1) * 2)) + ((z30 - 1) * 1))
                                        + 1)))),
                        "assigning variable acc0", index_uni(z24_val));
                    }
                    current_statement__ = 1086;
                    assign(m24,
                      (rvalue(m24, "m24",
                         index_uni(((((((((z25 - 1) * 32) + ((z26 - 1) * 16))
                                         + ((z27 - 1) * 8)) +
                                        ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                                      ((z30 - 1) * 1)) + 1))) +
                        log_sum_exp(acc0)),
                      "assigning variable m24", index_uni(((((((((z25 - 1) *
                                                                  32) +
                                                                 ((z26 - 1) *
                                                                   16)) +
                                                                ((z27 - 1) *
                                                                  8)) +
                                                               ((z28 - 1) *
                                                                 4)) +
                                                              ((z29 - 1) * 2))
                                                             +
                                                             ((z30 - 1) * 1))
                                                            + 1)));
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1100;
      assign(m25, rep_array(0, 32), "assigning variable m25");
      current_statement__ = 1117;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1115;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1113;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1111;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1109;
              for (int z26 = 1; z26 <= 2; ++z26) {
                {
                  Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                  acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                  stan::math::fill(acc0, DUMMY_VAR__);
                  
                  current_statement__ = 1102;
                  assign(acc0, rep_vector(0, 2), "assigning variable acc0");
                  current_statement__ = 1105;
                  for (int z25_val = 1; z25_val <= 2; ++z25_val) {
                    current_statement__ = 1103;
                    assign(acc0,
                      (rvalue(acc0, "acc0", index_uni(z25_val)) +
                        rvalue(m24, "m24",
                          index_uni(((((((((z25_val - 1) * 32) +
                                           ((z26 - 1) * 16)) +
                                          ((z27 - 1) * 8)) + ((z28 - 1) * 4))
                                        + ((z29 - 1) * 2)) + ((z30 - 1) * 1))
                                      + 1)))),
                      "assigning variable acc0", index_uni(z25_val));
                  }
                  current_statement__ = 1106;
                  assign(m25,
                    (rvalue(m25, "m25",
                       index_uni((((((((z26 - 1) * 16) + ((z27 - 1) * 8)) +
                                      ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                                    ((z30 - 1) * 1)) + 1))) +
                      log_sum_exp(acc0)),
                    "assigning variable m25", index_uni((((((((z26 - 1) * 16)
                                                              +
                                                              ((z27 - 1) * 8))
                                                             +
                                                             ((z28 - 1) * 4))
                                                            +
                                                            ((z29 - 1) * 2))
                                                           + ((z30 - 1) * 1))
                                                          + 1)));
                }
              }
            }
          }
        }
      }
      current_statement__ = 1118;
      assign(m26, rep_array(0, 16), "assigning variable m26");
      current_statement__ = 1133;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1131;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1129;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1127;
            for (int z27 = 1; z27 <= 2; ++z27) {
              {
                Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
                acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
                stan::math::fill(acc0, DUMMY_VAR__);
                
                current_statement__ = 1120;
                assign(acc0, rep_vector(0, 2), "assigning variable acc0");
                current_statement__ = 1123;
                for (int z26_val = 1; z26_val <= 2; ++z26_val) {
                  current_statement__ = 1121;
                  assign(acc0,
                    (rvalue(acc0, "acc0", index_uni(z26_val)) +
                      rvalue(m25, "m25",
                        index_uni((((((((z26_val - 1) * 16) +
                                        ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                                      ((z29 - 1) * 2)) + ((z30 - 1) * 1)) +
                                    1)))),
                    "assigning variable acc0", index_uni(z26_val));
                }
                current_statement__ = 1124;
                assign(m26,
                  (rvalue(m26, "m26",
                     index_uni(((((((z27 - 1) * 8) + ((z28 - 1) * 4)) +
                                   ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))
                    + log_sum_exp(acc0)),
                  "assigning variable m26", index_uni(((((((z27 - 1) * 8) +
                                                           ((z28 - 1) * 4)) +
                                                          ((z29 - 1) * 2)) +
                                                         ((z30 - 1) * 1)) +
                                                        1)));
              }
            }
          }
        }
      }
      current_statement__ = 1134;
      assign(m27, rep_array(0, 8), "assigning variable m27");
      current_statement__ = 1147;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1145;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1143;
          for (int z28 = 1; z28 <= 2; ++z28) {
            {
              Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
              acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
              stan::math::fill(acc0, DUMMY_VAR__);
              
              current_statement__ = 1136;
              assign(acc0, rep_vector(0, 2), "assigning variable acc0");
              current_statement__ = 1139;
              for (int z27_val = 1; z27_val <= 2; ++z27_val) {
                current_statement__ = 1137;
                assign(acc0,
                  (rvalue(acc0, "acc0", index_uni(z27_val)) +
                    rvalue(m26, "m26",
                      index_uni(((((((z27_val - 1) * 8) + ((z28 - 1) * 4)) +
                                    ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
                  "assigning variable acc0", index_uni(z27_val));
              }
              current_statement__ = 1140;
              assign(m27,
                (rvalue(m27, "m27",
                   index_uni((((((z28 - 1) * 4) + ((z29 - 1) * 2)) +
                                ((z30 - 1) * 1)) + 1))) + log_sum_exp(acc0)),
                "assigning variable m27", index_uni((((((z28 - 1) * 4) +
                                                        ((z29 - 1) * 2)) +
                                                       ((z30 - 1) * 1)) + 1)));
            }
          }
        }
      }
      current_statement__ = 1148;
      assign(m28, rep_array(0, 4), "assigning variable m28");
      current_statement__ = 1159;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1157;
        for (int z29 = 1; z29 <= 2; ++z29) {
          {
            Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
            acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
            stan::math::fill(acc0, DUMMY_VAR__);
            
            current_statement__ = 1150;
            assign(acc0, rep_vector(0, 2), "assigning variable acc0");
            current_statement__ = 1153;
            for (int z28_val = 1; z28_val <= 2; ++z28_val) {
              current_statement__ = 1151;
              assign(acc0,
                (rvalue(acc0, "acc0", index_uni(z28_val)) +
                  rvalue(m27, "m27",
                    index_uni((((((z28_val - 1) * 4) + ((z29 - 1) * 2)) +
                                 ((z30 - 1) * 1)) + 1)))),
                "assigning variable acc0", index_uni(z28_val));
            }
            current_statement__ = 1154;
            assign(m28,
              (rvalue(m28, "m28",
                 index_uni(((((z29 - 1) * 2) + ((z30 - 1) * 1)) + 1))) +
                log_sum_exp(acc0)),
              "assigning variable m28", index_uni(((((z29 - 1) * 2) +
                                                     ((z30 - 1) * 1)) + 1)));
          }
        }
      }
      current_statement__ = 1160;
      assign(m29, rep_array(0, 2), "assigning variable m29");
      current_statement__ = 1169;
      for (int z30 = 1; z30 <= 2; ++z30) {
        {
          Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
          acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
          stan::math::fill(acc0, DUMMY_VAR__);
          
          current_statement__ = 1162;
          assign(acc0, rep_vector(0, 2), "assigning variable acc0");
          current_statement__ = 1165;
          for (int z29_val = 1; z29_val <= 2; ++z29_val) {
            current_statement__ = 1163;
            assign(acc0,
              (rvalue(acc0, "acc0", index_uni(z29_val)) +
                rvalue(m28, "m28",
                  index_uni(((((z29_val - 1) * 2) + ((z30 - 1) * 1)) + 1)))),
              "assigning variable acc0", index_uni(z29_val));
          }
          current_statement__ = 1166;
          assign(m29,
            (rvalue(m29, "m29", index_uni(z30)) + log_sum_exp(acc0)),
            "assigning variable m29", index_uni(z30));
        }
      }
      current_statement__ = 1170;
      m30 = 0;
      {
        Eigen::Matrix<local_scalar_t__, -1, 1> acc0;
        acc0 = Eigen::Matrix<local_scalar_t__, -1, 1>(2);
        stan::math::fill(acc0, DUMMY_VAR__);
        
        current_statement__ = 1172;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1175;
        for (int z30_val = 1; z30_val <= 2; ++z30_val) {
          current_statement__ = 1173;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z30_val)) +
              rvalue(m29, "m29", index_uni((((z30_val - 1) * 1) + 1)))),
            "assigning variable acc0", index_uni(z30_val));
        }
        current_statement__ = 1176;
        m30 = (m30 + log_sum_exp(acc0));
      }
      {
        current_statement__ = 1454;
        lp_accum__.add(beta_lpdf<propto__>(prior, 1, 1));
        current_statement__ = 1455;
        lp_accum__.add(m30);
      }
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    lp_accum__.add(lp__);
    return lp_accum__.sum();
    } // log_prob_impl() 
    
  template <typename RNG, typename VecR, typename VecI, typename VecVar, 
  stan::require_vector_like_vt<std::is_floating_point, VecR>* = nullptr, 
  stan::require_vector_like_vt<std::is_integral, VecI>* = nullptr, 
  stan::require_std_vector_vt<std::is_floating_point, VecVar>* = nullptr> 
  inline void write_array_impl(RNG& base_rng__, VecR& params_r__,
                               VecI& params_i__, VecVar& vars__,
                               const bool emit_transformed_parameters__ = true,
                               const bool emit_generated_quantities__ = true,
                               std::ostream* pstream__ = nullptr) const {
    using local_scalar_t__ = double;
    stan::io::deserializer<local_scalar_t__> in__(params_r__, params_i__);
    stan::io::serializer<local_scalar_t__> out__(vars__);
    static constexpr bool propto__ = true;
    (void) propto__;
    double lp__ = 0.0;
    (void) lp__;  // dummy to suppress unused var warning
    int current_statement__ = 0; 
    stan::math::accumulator<double> lp_accum__;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    constexpr bool jacobian__ = false;
    (void) DUMMY_VAR__;  // suppress unused var warning
    static constexpr const char* function__ = "or_30_model_namespace::write_array";
    (void) function__;  // suppress unused var warning
    
    try {
      double prior;
      prior = std::numeric_limits<double>::quiet_NaN();
      
      current_statement__ = 1;
      prior = in__.template read_constrain_lub<local_scalar_t__, jacobian__>(
                0, 1, lp__);
      std::vector<double> m1;
      m1 = std::vector<double>(536870912, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m10;
      m10 = std::vector<double>(1048576, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m11;
      m11 = std::vector<double>(524288, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m12;
      m12 = std::vector<double>(262144, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m13;
      m13 = std::vector<double>(131072, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m14;
      m14 = std::vector<double>(65536, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m15;
      m15 = std::vector<double>(32768, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m16;
      m16 = std::vector<double>(16384, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m17;
      m17 = std::vector<double>(8192, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m18;
      m18 = std::vector<double>(4096, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m19;
      m19 = std::vector<double>(2048, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m2;
      m2 = std::vector<double>(268435456, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m20;
      m20 = std::vector<double>(1024, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m21;
      m21 = std::vector<double>(512, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m22;
      m22 = std::vector<double>(256, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m23;
      m23 = std::vector<double>(128, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m24;
      m24 = std::vector<double>(64, std::numeric_limits<double>::quiet_NaN());
      
      std::vector<double> m25;
      m25 = std::vector<double>(32, std::numeric_limits<double>::quiet_NaN());
      
      std::vector<double> m26;
      m26 = std::vector<double>(16, std::numeric_limits<double>::quiet_NaN());
      
      std::vector<double> m27;
      m27 = std::vector<double>(8, std::numeric_limits<double>::quiet_NaN());
      
      std::vector<double> m28;
      m28 = std::vector<double>(4, std::numeric_limits<double>::quiet_NaN());
      
      std::vector<double> m29;
      m29 = std::vector<double>(2, std::numeric_limits<double>::quiet_NaN());
      
      std::vector<double> m3;
      m3 = std::vector<double>(134217728, std::numeric_limits<double>::quiet_NaN());
      
      
      double m30;
      m30 = std::numeric_limits<double>::quiet_NaN();
      
      std::vector<double> m4;
      m4 = std::vector<double>(67108864, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m5;
      m5 = std::vector<double>(33554432, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m6;
      m6 = std::vector<double>(16777216, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m7;
      m7 = std::vector<double>(8388608, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m8;
      m8 = std::vector<double>(4194304, std::numeric_limits<double>::quiet_NaN());
      
      
      std::vector<double> m9;
      m9 = std::vector<double>(2097152, std::numeric_limits<double>::quiet_NaN());
      
      
      out__.write(prior);
      if (logical_negation((primitive_value(emit_transformed_parameters__) ||
            primitive_value(emit_generated_quantities__)))) {
        return ;
      } 
      current_statement__ = 32;
      assign(m1, rep_array(0, 536870912), "assigning variable m1");
      current_statement__ = 133;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 131;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 129;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 127;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 125;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 123;
                for (int z4 = 1; z4 <= 2; ++z4) {
                  current_statement__ = 121;
                  for (int z30 = 1; z30 <= 2; ++z30) {
                    current_statement__ = 119;
                    for (int z3 = 1; z3 <= 2; ++z3) {
                      current_statement__ = 117;
                      for (int z29 = 1; z29 <= 2; ++z29) {
                        current_statement__ = 115;
                        for (int z28 = 1; z28 <= 2; ++z28) {
                          current_statement__ = 113;
                          for (int z27 = 1; z27 <= 2; ++z27) {
                            current_statement__ = 111;
                            for (int z26 = 1; z26 <= 2; ++z26) {
                              current_statement__ = 109;
                              for (int z25 = 1; z25 <= 2; ++z25) {
                                current_statement__ = 107;
                                for (int z24 = 1; z24 <= 2; ++z24) {
                                  current_statement__ = 105;
                                  for (int z23 = 1; z23 <= 2; ++z23) {
                                    current_statement__ = 103;
                                    for (int z22 = 1; z22 <= 2; ++z22) {
                                      current_statement__ = 101;
                                      for (int z21 = 1; z21 <= 2; ++z21) {
                                        current_statement__ = 99;
                                        for (int z20 = 1; z20 <= 2; ++z20) {
                                          current_statement__ = 97;
                                          for (int z2 = 1; z2 <= 2; ++z2) {
                                            current_statement__ = 95;
                                            for (int z19 = 1; z19 <= 2; ++z19) {
                                              current_statement__ = 93;
                                              for (int z18 = 1; z18 <= 2;
                                                   ++z18) {
                                                current_statement__ = 91;
                                                for (int z17 = 1; z17 <= 2;
                                                     ++z17) {
                                                  current_statement__ = 89;
                                                  for (int z16 = 1; z16 <= 2;
                                                       ++z16) {
                                                    current_statement__ = 87;
                                                    for (int z15 = 1;
                                                         z15 <= 2; ++z15) {
                                                      current_statement__ = 85;
                                                      for (int z14 = 1;
                                                           z14 <= 2; ++z14) {
                                                        current_statement__ = 83;
                                                        for (int z13 = 1;
                                                             z13 <= 2; ++z13) {
                                                          current_statement__ = 81;
                                                          for (int z12 = 1;
                                                               z12 <= 2;
                                                               ++z12) {
                                                            current_statement__ = 79;
                                                            for (int z11 = 1;
                                                                 z11 <= 2;
                                                                 ++z11) {
                                                              current_statement__ = 77;
                                                              for (int z10 = 1;
                                                                   z10 <= 2;
                                                                   ++z10) {
                                                                {
                                                                  Eigen::Matrix<double, -1, 1> acc0;
                                                                  acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                                  stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                                  
                                                                  
                                                                  current_statement__ = 34;
                                                                  assign(
                                                                    acc0,
                                                                    rep_vector(
                                                                    0, 2),
                                                                    "assigning variable acc0");
                                                                  current_statement__ = 73;
                                                                  for (
                                                                  int z1_val = 1;
                                                                  z1_val <= 2;
                                                                  ++z1_val) {
                                                                    current_statement__ = 35;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z1_val -
                                                                    1),
                                                                    prior)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 36;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z2 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 37;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z3 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 38;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z4 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 39;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z5 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 40;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z6 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 41;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z7 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 42;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z8 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 43;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z9 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 44;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z10 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 45;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z11 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 46;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z12 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 47;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z13 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 48;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z14 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 49;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z15 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 50;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z16 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 51;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z17 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 52;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z18 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 53;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z19 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 54;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z20 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 55;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z21 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 56;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z22 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 57;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z23 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 58;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z24 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 59;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z25 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 60;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z26 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 61;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z27 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 62;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z28 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 63;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z29 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 64;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    bernoulli_lpmf<false>(
                                                                    (z30 - 1),
                                                                    0.5)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 71;
                                                                    if (
                                                                    logical_gt(
                                                                    ((((((((((((((((((((((((((((((z1_val
                                                                    + z2) +
                                                                    z3) + z4)
                                                                    + z5) +
                                                                    z6) + z7)
                                                                    + z8) +
                                                                    z9) +
                                                                    z10) +
                                                                    z11) +
                                                                    z12) +
                                                                    z13) +
                                                                    z14) +
                                                                    z15) +
                                                                    z16) +
                                                                    z17) +
                                                                    z18) +
                                                                    z19) +
                                                                    z20) +
                                                                    z21) +
                                                                    z22) +
                                                                    z23) +
                                                                    z24) +
                                                                    z25) +
                                                                    z26) +
                                                                    z27) +
                                                                    z28) +
                                                                    z29) +
                                                                    z30) -
                                                                    30), 0)) {
                                                                    current_statement__ = 68;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d1, 1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 69;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d2, 1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    } else {
                                                                    current_statement__ = 65;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d1, 
                                                                    -1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    current_statement__ = 66;
                                                                    assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z1_val))
                                                                    +
                                                                    normal_lpdf<false>(
                                                                    d2, 
                                                                    -1, 1)),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z1_val));
                                                                    }
                                                                  }
                                                                  current_statement__ = 74;
                                                                  assign(m1,
                                                                    (rvalue(
                                                                    m1, "m1",
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    268435456)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    134217728))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z2 - 1)
                                                                    * 262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                    log_sum_exp(
                                                                    acc0)),
                                                                    "assigning variable m1", 
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    268435456)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    134217728))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z2 - 1)
                                                                    * 262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 134;
      assign(m2, rep_array(0, 268435456), "assigning variable m2");
      current_statement__ = 197;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 195;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 193;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 191;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 189;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 187;
                for (int z4 = 1; z4 <= 2; ++z4) {
                  current_statement__ = 185;
                  for (int z30 = 1; z30 <= 2; ++z30) {
                    current_statement__ = 183;
                    for (int z3 = 1; z3 <= 2; ++z3) {
                      current_statement__ = 181;
                      for (int z29 = 1; z29 <= 2; ++z29) {
                        current_statement__ = 179;
                        for (int z28 = 1; z28 <= 2; ++z28) {
                          current_statement__ = 177;
                          for (int z27 = 1; z27 <= 2; ++z27) {
                            current_statement__ = 175;
                            for (int z26 = 1; z26 <= 2; ++z26) {
                              current_statement__ = 173;
                              for (int z25 = 1; z25 <= 2; ++z25) {
                                current_statement__ = 171;
                                for (int z24 = 1; z24 <= 2; ++z24) {
                                  current_statement__ = 169;
                                  for (int z23 = 1; z23 <= 2; ++z23) {
                                    current_statement__ = 167;
                                    for (int z22 = 1; z22 <= 2; ++z22) {
                                      current_statement__ = 165;
                                      for (int z21 = 1; z21 <= 2; ++z21) {
                                        current_statement__ = 163;
                                        for (int z20 = 1; z20 <= 2; ++z20) {
                                          current_statement__ = 161;
                                          for (int z19 = 1; z19 <= 2; ++z19) {
                                            current_statement__ = 159;
                                            for (int z18 = 1; z18 <= 2; ++z18) {
                                              current_statement__ = 157;
                                              for (int z17 = 1; z17 <= 2;
                                                   ++z17) {
                                                current_statement__ = 155;
                                                for (int z16 = 1; z16 <= 2;
                                                     ++z16) {
                                                  current_statement__ = 153;
                                                  for (int z15 = 1; z15 <= 2;
                                                       ++z15) {
                                                    current_statement__ = 151;
                                                    for (int z14 = 1;
                                                         z14 <= 2; ++z14) {
                                                      current_statement__ = 149;
                                                      for (int z13 = 1;
                                                           z13 <= 2; ++z13) {
                                                        current_statement__ = 147;
                                                        for (int z12 = 1;
                                                             z12 <= 2; ++z12) {
                                                          current_statement__ = 145;
                                                          for (int z11 = 1;
                                                               z11 <= 2;
                                                               ++z11) {
                                                            current_statement__ = 143;
                                                            for (int z10 = 1;
                                                                 z10 <= 2;
                                                                 ++z10) {
                                                              {
                                                                Eigen::Matrix<double, -1, 1> acc0;
                                                                acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                                stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                                
                                                                
                                                                current_statement__ = 136;
                                                                assign(acc0,
                                                                  rep_vector(
                                                                    0, 2),
                                                                  "assigning variable acc0");
                                                                current_statement__ = 139;
                                                                for (
                                                                int z2_val = 1;
                                                                z2_val <= 2;
                                                                ++z2_val) {
                                                                  current_statement__ = 137;
                                                                  assign(
                                                                    acc0,
                                                                    (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z2_val))
                                                                    +
                                                                    rvalue(
                                                                    m1, "m1",
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    268435456)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    134217728))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z2_val
                                                                    - 1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                                    "assigning variable acc0", 
                                                                    index_uni(z2_val));
                                                                }
                                                                current_statement__ = 140;
                                                                assign(m2,
                                                                  (rvalue(m2,
                                                                    "m2",
                                                                    index_uni(
                                                                    ((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    134217728)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                    log_sum_exp(
                                                                    acc0)),
                                                                  "assigning variable m2", 
                                                                  index_uni(
                                                                    ((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    134217728)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3 - 1)
                                                                    * 128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 198;
      assign(m3, rep_array(0, 134217728), "assigning variable m3");
      current_statement__ = 259;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 257;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 255;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 253;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 251;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 249;
                for (int z4 = 1; z4 <= 2; ++z4) {
                  current_statement__ = 247;
                  for (int z30 = 1; z30 <= 2; ++z30) {
                    current_statement__ = 245;
                    for (int z29 = 1; z29 <= 2; ++z29) {
                      current_statement__ = 243;
                      for (int z28 = 1; z28 <= 2; ++z28) {
                        current_statement__ = 241;
                        for (int z27 = 1; z27 <= 2; ++z27) {
                          current_statement__ = 239;
                          for (int z26 = 1; z26 <= 2; ++z26) {
                            current_statement__ = 237;
                            for (int z25 = 1; z25 <= 2; ++z25) {
                              current_statement__ = 235;
                              for (int z24 = 1; z24 <= 2; ++z24) {
                                current_statement__ = 233;
                                for (int z23 = 1; z23 <= 2; ++z23) {
                                  current_statement__ = 231;
                                  for (int z22 = 1; z22 <= 2; ++z22) {
                                    current_statement__ = 229;
                                    for (int z21 = 1; z21 <= 2; ++z21) {
                                      current_statement__ = 227;
                                      for (int z20 = 1; z20 <= 2; ++z20) {
                                        current_statement__ = 225;
                                        for (int z19 = 1; z19 <= 2; ++z19) {
                                          current_statement__ = 223;
                                          for (int z18 = 1; z18 <= 2; ++z18) {
                                            current_statement__ = 221;
                                            for (int z17 = 1; z17 <= 2; ++z17) {
                                              current_statement__ = 219;
                                              for (int z16 = 1; z16 <= 2;
                                                   ++z16) {
                                                current_statement__ = 217;
                                                for (int z15 = 1; z15 <= 2;
                                                     ++z15) {
                                                  current_statement__ = 215;
                                                  for (int z14 = 1; z14 <= 2;
                                                       ++z14) {
                                                    current_statement__ = 213;
                                                    for (int z13 = 1;
                                                         z13 <= 2; ++z13) {
                                                      current_statement__ = 211;
                                                      for (int z12 = 1;
                                                           z12 <= 2; ++z12) {
                                                        current_statement__ = 209;
                                                        for (int z11 = 1;
                                                             z11 <= 2; ++z11) {
                                                          current_statement__ = 207;
                                                          for (int z10 = 1;
                                                               z10 <= 2;
                                                               ++z10) {
                                                            {
                                                              Eigen::Matrix<double, -1, 1> acc0;
                                                              acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                              stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                              
                                                              
                                                              current_statement__ = 200;
                                                              assign(acc0,
                                                                rep_vector(0,
                                                                  2),
                                                                "assigning variable acc0");
                                                              current_statement__ = 203;
                                                              for (int z3_val = 1;
                                                                   z3_val <= 2;
                                                                   ++z3_val) {
                                                                current_statement__ = 201;
                                                                assign(acc0,
                                                                  (rvalue(
                                                                    acc0,
                                                                    "acc0",
                                                                    index_uni(z3_val))
                                                                    +
                                                                    rvalue(
                                                                    m2, "m2",
                                                                    index_uni(
                                                                    ((((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    134217728)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    67108864))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z21 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z27 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z28 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z3_val
                                                                    - 1) *
                                                                    128)) +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                                  "assigning variable acc0", 
                                                                  index_uni(z3_val));
                                                              }
                                                              current_statement__ = 204;
                                                              assign(m3,
                                                                (rvalue(m3,
                                                                   "m3",
                                                                   index_uni(
                                                                    (((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    67108864)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z27 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                  log_sum_exp(
                                                                    acc0)),
                                                                "assigning variable m3", 
                                                                index_uni(
                                                                  (((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    67108864)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z27 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4 - 1)
                                                                    * 32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 260;
      assign(m4, rep_array(0, 67108864), "assigning variable m4");
      current_statement__ = 319;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 317;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 315;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 313;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 311;
              for (int z5 = 1; z5 <= 2; ++z5) {
                current_statement__ = 309;
                for (int z30 = 1; z30 <= 2; ++z30) {
                  current_statement__ = 307;
                  for (int z29 = 1; z29 <= 2; ++z29) {
                    current_statement__ = 305;
                    for (int z28 = 1; z28 <= 2; ++z28) {
                      current_statement__ = 303;
                      for (int z27 = 1; z27 <= 2; ++z27) {
                        current_statement__ = 301;
                        for (int z26 = 1; z26 <= 2; ++z26) {
                          current_statement__ = 299;
                          for (int z25 = 1; z25 <= 2; ++z25) {
                            current_statement__ = 297;
                            for (int z24 = 1; z24 <= 2; ++z24) {
                              current_statement__ = 295;
                              for (int z23 = 1; z23 <= 2; ++z23) {
                                current_statement__ = 293;
                                for (int z22 = 1; z22 <= 2; ++z22) {
                                  current_statement__ = 291;
                                  for (int z21 = 1; z21 <= 2; ++z21) {
                                    current_statement__ = 289;
                                    for (int z20 = 1; z20 <= 2; ++z20) {
                                      current_statement__ = 287;
                                      for (int z19 = 1; z19 <= 2; ++z19) {
                                        current_statement__ = 285;
                                        for (int z18 = 1; z18 <= 2; ++z18) {
                                          current_statement__ = 283;
                                          for (int z17 = 1; z17 <= 2; ++z17) {
                                            current_statement__ = 281;
                                            for (int z16 = 1; z16 <= 2; ++z16) {
                                              current_statement__ = 279;
                                              for (int z15 = 1; z15 <= 2;
                                                   ++z15) {
                                                current_statement__ = 277;
                                                for (int z14 = 1; z14 <= 2;
                                                     ++z14) {
                                                  current_statement__ = 275;
                                                  for (int z13 = 1; z13 <= 2;
                                                       ++z13) {
                                                    current_statement__ = 273;
                                                    for (int z12 = 1;
                                                         z12 <= 2; ++z12) {
                                                      current_statement__ = 271;
                                                      for (int z11 = 1;
                                                           z11 <= 2; ++z11) {
                                                        current_statement__ = 269;
                                                        for (int z10 = 1;
                                                             z10 <= 2; ++z10) {
                                                          {
                                                            Eigen::Matrix<double, -1, 1> acc0;
                                                            acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                            stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                            
                                                            
                                                            current_statement__ = 262;
                                                            assign(acc0,
                                                              rep_vector(0,
                                                                2),
                                                              "assigning variable acc0");
                                                            current_statement__ = 265;
                                                            for (int z4_val = 1;
                                                                 z4_val <= 2;
                                                                 ++z4_val) {
                                                              current_statement__ = 263;
                                                              assign(acc0,
                                                                (rvalue(acc0,
                                                                   "acc0",
                                                                   index_uni(z4_val))
                                                                  +
                                                                  rvalue(m3,
                                                                    "m3",
                                                                    index_uni(
                                                                    (((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    67108864)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    33554432))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z20 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z26 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z27 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z4_val
                                                                    - 1) *
                                                                    32)) +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                                "assigning variable acc0", 
                                                                index_uni(z4_val));
                                                            }
                                                            current_statement__ = 266;
                                                            assign(m4,
                                                              (rvalue(m4,
                                                                 "m4",
                                                                 index_uni(
                                                                   ((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    33554432)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z26 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                                log_sum_exp(
                                                                  acc0)),
                                                              "assigning variable m4", 
                                                              index_uni(
                                                                ((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    33554432)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z26 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z5 - 1)
                                                                    * 16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                   ((z9 - 1)
                                                                    * 1)) +
                                                                  1)));
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 320;
      assign(m5, rep_array(0, 33554432), "assigning variable m5");
      current_statement__ = 377;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 375;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 373;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 371;
            for (int z6 = 1; z6 <= 2; ++z6) {
              current_statement__ = 369;
              for (int z30 = 1; z30 <= 2; ++z30) {
                current_statement__ = 367;
                for (int z29 = 1; z29 <= 2; ++z29) {
                  current_statement__ = 365;
                  for (int z28 = 1; z28 <= 2; ++z28) {
                    current_statement__ = 363;
                    for (int z27 = 1; z27 <= 2; ++z27) {
                      current_statement__ = 361;
                      for (int z26 = 1; z26 <= 2; ++z26) {
                        current_statement__ = 359;
                        for (int z25 = 1; z25 <= 2; ++z25) {
                          current_statement__ = 357;
                          for (int z24 = 1; z24 <= 2; ++z24) {
                            current_statement__ = 355;
                            for (int z23 = 1; z23 <= 2; ++z23) {
                              current_statement__ = 353;
                              for (int z22 = 1; z22 <= 2; ++z22) {
                                current_statement__ = 351;
                                for (int z21 = 1; z21 <= 2; ++z21) {
                                  current_statement__ = 349;
                                  for (int z20 = 1; z20 <= 2; ++z20) {
                                    current_statement__ = 347;
                                    for (int z19 = 1; z19 <= 2; ++z19) {
                                      current_statement__ = 345;
                                      for (int z18 = 1; z18 <= 2; ++z18) {
                                        current_statement__ = 343;
                                        for (int z17 = 1; z17 <= 2; ++z17) {
                                          current_statement__ = 341;
                                          for (int z16 = 1; z16 <= 2; ++z16) {
                                            current_statement__ = 339;
                                            for (int z15 = 1; z15 <= 2; ++z15) {
                                              current_statement__ = 337;
                                              for (int z14 = 1; z14 <= 2;
                                                   ++z14) {
                                                current_statement__ = 335;
                                                for (int z13 = 1; z13 <= 2;
                                                     ++z13) {
                                                  current_statement__ = 333;
                                                  for (int z12 = 1; z12 <= 2;
                                                       ++z12) {
                                                    current_statement__ = 331;
                                                    for (int z11 = 1;
                                                         z11 <= 2; ++z11) {
                                                      current_statement__ = 329;
                                                      for (int z10 = 1;
                                                           z10 <= 2; ++z10) {
                                                        {
                                                          Eigen::Matrix<double, -1, 1> acc0;
                                                          acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                          stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                          
                                                          
                                                          current_statement__ = 322;
                                                          assign(acc0,
                                                            rep_vector(0, 2),
                                                            "assigning variable acc0");
                                                          current_statement__ = 325;
                                                          for (int z5_val = 1;
                                                               z5_val <= 2;
                                                               ++z5_val) {
                                                            current_statement__ = 323;
                                                            assign(acc0,
                                                              (rvalue(acc0,
                                                                 "acc0",
                                                                 index_uni(z5_val))
                                                                +
                                                                rvalue(m4,
                                                                  "m4",
                                                                  index_uni(
                                                                    ((((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    33554432)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    16777216))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z19 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z25 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z26 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z5_val
                                                                    - 1) *
                                                                    16)) +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                              "assigning variable acc0", 
                                                              index_uni(z5_val));
                                                          }
                                                          current_statement__ = 326;
                                                          assign(m5,
                                                            (rvalue(m5, "m5",
                                                               index_uni(
                                                                 (((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    16777216)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z25 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                   1))) +
                                                              log_sum_exp(
                                                                acc0)),
                                                            "assigning variable m5", 
                                                            index_uni(
                                                              (((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    16777216)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z25 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z6 - 1)
                                                                    * 8)) +
                                                                   ((z7 - 1)
                                                                    * 4)) +
                                                                  ((z8 - 1) *
                                                                    2)) +
                                                                 ((z9 - 1) *
                                                                   1)) + 1)));
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 378;
      assign(m6, rep_array(0, 16777216), "assigning variable m6");
      current_statement__ = 433;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 431;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 429;
          for (int z7 = 1; z7 <= 2; ++z7) {
            current_statement__ = 427;
            for (int z30 = 1; z30 <= 2; ++z30) {
              current_statement__ = 425;
              for (int z29 = 1; z29 <= 2; ++z29) {
                current_statement__ = 423;
                for (int z28 = 1; z28 <= 2; ++z28) {
                  current_statement__ = 421;
                  for (int z27 = 1; z27 <= 2; ++z27) {
                    current_statement__ = 419;
                    for (int z26 = 1; z26 <= 2; ++z26) {
                      current_statement__ = 417;
                      for (int z25 = 1; z25 <= 2; ++z25) {
                        current_statement__ = 415;
                        for (int z24 = 1; z24 <= 2; ++z24) {
                          current_statement__ = 413;
                          for (int z23 = 1; z23 <= 2; ++z23) {
                            current_statement__ = 411;
                            for (int z22 = 1; z22 <= 2; ++z22) {
                              current_statement__ = 409;
                              for (int z21 = 1; z21 <= 2; ++z21) {
                                current_statement__ = 407;
                                for (int z20 = 1; z20 <= 2; ++z20) {
                                  current_statement__ = 405;
                                  for (int z19 = 1; z19 <= 2; ++z19) {
                                    current_statement__ = 403;
                                    for (int z18 = 1; z18 <= 2; ++z18) {
                                      current_statement__ = 401;
                                      for (int z17 = 1; z17 <= 2; ++z17) {
                                        current_statement__ = 399;
                                        for (int z16 = 1; z16 <= 2; ++z16) {
                                          current_statement__ = 397;
                                          for (int z15 = 1; z15 <= 2; ++z15) {
                                            current_statement__ = 395;
                                            for (int z14 = 1; z14 <= 2; ++z14) {
                                              current_statement__ = 393;
                                              for (int z13 = 1; z13 <= 2;
                                                   ++z13) {
                                                current_statement__ = 391;
                                                for (int z12 = 1; z12 <= 2;
                                                     ++z12) {
                                                  current_statement__ = 389;
                                                  for (int z11 = 1; z11 <= 2;
                                                       ++z11) {
                                                    current_statement__ = 387;
                                                    for (int z10 = 1;
                                                         z10 <= 2; ++z10) {
                                                      {
                                                        Eigen::Matrix<double, -1, 1> acc0;
                                                        acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                        
                                                        
                                                        current_statement__ = 380;
                                                        assign(acc0,
                                                          rep_vector(0, 2),
                                                          "assigning variable acc0");
                                                        current_statement__ = 383;
                                                        for (int z6_val = 1;
                                                             z6_val <= 2;
                                                             ++z6_val) {
                                                          current_statement__ = 381;
                                                          assign(acc0,
                                                            (rvalue(acc0,
                                                               "acc0",
                                                               index_uni(z6_val))
                                                              +
                                                              rvalue(m5,
                                                                "m5",
                                                                index_uni(
                                                                  (((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    16777216)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    8388608))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z18 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z24 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z25 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z6_val
                                                                    - 1) * 8))
                                                                    +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)))),
                                                            "assigning variable acc0", 
                                                            index_uni(z6_val));
                                                        }
                                                        current_statement__ = 384;
                                                        assign(m6,
                                                          (rvalue(m6, "m6",
                                                             index_uni(
                                                               ((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    8388608)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z24 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                   ((z8 - 1)
                                                                    * 2)) +
                                                                  ((z9 - 1) *
                                                                    1)) + 1)))
                                                            +
                                                            log_sum_exp(acc0)),
                                                          "assigning variable m6", 
                                                          index_uni(((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    8388608)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z24 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z7 - 1)
                                                                    * 4)) +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 434;
      assign(m7, rep_array(0, 8388608), "assigning variable m7");
      current_statement__ = 487;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 485;
        for (int z8 = 1; z8 <= 2; ++z8) {
          current_statement__ = 483;
          for (int z30 = 1; z30 <= 2; ++z30) {
            current_statement__ = 481;
            for (int z29 = 1; z29 <= 2; ++z29) {
              current_statement__ = 479;
              for (int z28 = 1; z28 <= 2; ++z28) {
                current_statement__ = 477;
                for (int z27 = 1; z27 <= 2; ++z27) {
                  current_statement__ = 475;
                  for (int z26 = 1; z26 <= 2; ++z26) {
                    current_statement__ = 473;
                    for (int z25 = 1; z25 <= 2; ++z25) {
                      current_statement__ = 471;
                      for (int z24 = 1; z24 <= 2; ++z24) {
                        current_statement__ = 469;
                        for (int z23 = 1; z23 <= 2; ++z23) {
                          current_statement__ = 467;
                          for (int z22 = 1; z22 <= 2; ++z22) {
                            current_statement__ = 465;
                            for (int z21 = 1; z21 <= 2; ++z21) {
                              current_statement__ = 463;
                              for (int z20 = 1; z20 <= 2; ++z20) {
                                current_statement__ = 461;
                                for (int z19 = 1; z19 <= 2; ++z19) {
                                  current_statement__ = 459;
                                  for (int z18 = 1; z18 <= 2; ++z18) {
                                    current_statement__ = 457;
                                    for (int z17 = 1; z17 <= 2; ++z17) {
                                      current_statement__ = 455;
                                      for (int z16 = 1; z16 <= 2; ++z16) {
                                        current_statement__ = 453;
                                        for (int z15 = 1; z15 <= 2; ++z15) {
                                          current_statement__ = 451;
                                          for (int z14 = 1; z14 <= 2; ++z14) {
                                            current_statement__ = 449;
                                            for (int z13 = 1; z13 <= 2; ++z13) {
                                              current_statement__ = 447;
                                              for (int z12 = 1; z12 <= 2;
                                                   ++z12) {
                                                current_statement__ = 445;
                                                for (int z11 = 1; z11 <= 2;
                                                     ++z11) {
                                                  current_statement__ = 443;
                                                  for (int z10 = 1; z10 <= 2;
                                                       ++z10) {
                                                    {
                                                      Eigen::Matrix<double, -1, 1> acc0;
                                                      acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                      stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                      
                                                      
                                                      current_statement__ = 436;
                                                      assign(acc0,
                                                        rep_vector(0, 2),
                                                        "assigning variable acc0");
                                                      current_statement__ = 439;
                                                      for (int z7_val = 1;
                                                           z7_val <= 2;
                                                           ++z7_val) {
                                                        current_statement__ = 437;
                                                        assign(acc0,
                                                          (rvalue(acc0,
                                                             "acc0",
                                                             index_uni(z7_val))
                                                            +
                                                            rvalue(m6, "m6",
                                                              index_uni(
                                                                ((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    8388608)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    4194304))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z17 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z23 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z24 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z7_val
                                                                    - 1) * 4))
                                                                    +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                   ((z9 - 1)
                                                                    * 1)) +
                                                                  1)))),
                                                          "assigning variable acc0", 
                                                          index_uni(z7_val));
                                                      }
                                                      current_statement__ = 440;
                                                      assign(m7,
                                                        (rvalue(m7, "m7",
                                                           index_uni(
                                                             (((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    4194304)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z23 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 16))
                                                                   +
                                                                   ((z29 - 1)
                                                                    * 8)) +
                                                                  ((z30 - 1)
                                                                    * 4)) +
                                                                 ((z8 - 1) *
                                                                   2)) +
                                                                ((z9 - 1) *
                                                                  1)) + 1)))
                                                          +
                                                          log_sum_exp(acc0)),
                                                        "assigning variable m7", 
                                                        index_uni((((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    4194304)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z23 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z8 - 1)
                                                                    * 2)) +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1)));
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 488;
      assign(m8, rep_array(0, 4194304), "assigning variable m8");
      current_statement__ = 539;
      for (int z9 = 1; z9 <= 2; ++z9) {
        current_statement__ = 537;
        for (int z30 = 1; z30 <= 2; ++z30) {
          current_statement__ = 535;
          for (int z29 = 1; z29 <= 2; ++z29) {
            current_statement__ = 533;
            for (int z28 = 1; z28 <= 2; ++z28) {
              current_statement__ = 531;
              for (int z27 = 1; z27 <= 2; ++z27) {
                current_statement__ = 529;
                for (int z26 = 1; z26 <= 2; ++z26) {
                  current_statement__ = 527;
                  for (int z25 = 1; z25 <= 2; ++z25) {
                    current_statement__ = 525;
                    for (int z24 = 1; z24 <= 2; ++z24) {
                      current_statement__ = 523;
                      for (int z23 = 1; z23 <= 2; ++z23) {
                        current_statement__ = 521;
                        for (int z22 = 1; z22 <= 2; ++z22) {
                          current_statement__ = 519;
                          for (int z21 = 1; z21 <= 2; ++z21) {
                            current_statement__ = 517;
                            for (int z20 = 1; z20 <= 2; ++z20) {
                              current_statement__ = 515;
                              for (int z19 = 1; z19 <= 2; ++z19) {
                                current_statement__ = 513;
                                for (int z18 = 1; z18 <= 2; ++z18) {
                                  current_statement__ = 511;
                                  for (int z17 = 1; z17 <= 2; ++z17) {
                                    current_statement__ = 509;
                                    for (int z16 = 1; z16 <= 2; ++z16) {
                                      current_statement__ = 507;
                                      for (int z15 = 1; z15 <= 2; ++z15) {
                                        current_statement__ = 505;
                                        for (int z14 = 1; z14 <= 2; ++z14) {
                                          current_statement__ = 503;
                                          for (int z13 = 1; z13 <= 2; ++z13) {
                                            current_statement__ = 501;
                                            for (int z12 = 1; z12 <= 2; ++z12) {
                                              current_statement__ = 499;
                                              for (int z11 = 1; z11 <= 2;
                                                   ++z11) {
                                                current_statement__ = 497;
                                                for (int z10 = 1; z10 <= 2;
                                                     ++z10) {
                                                  {
                                                    Eigen::Matrix<double, -1, 1> acc0;
                                                    acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                    stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                    
                                                    
                                                    current_statement__ = 490;
                                                    assign(acc0,
                                                      rep_vector(0, 2),
                                                      "assigning variable acc0");
                                                    current_statement__ = 493;
                                                    for (int z8_val = 1;
                                                         z8_val <= 2;
                                                         ++z8_val) {
                                                      current_statement__ = 491;
                                                      assign(acc0,
                                                        (rvalue(acc0, "acc0",
                                                           index_uni(z8_val))
                                                          +
                                                          rvalue(m7, "m7",
                                                            index_uni(
                                                              (((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    4194304)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    2097152))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z16 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z22 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z23 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 4)) +
                                                                  ((z8_val -
                                                                    1) * 2))
                                                                 +
                                                                 ((z9 - 1) *
                                                                   1)) + 1)))),
                                                        "assigning variable acc0", 
                                                        index_uni(z8_val));
                                                    }
                                                    current_statement__ = 494;
                                                    assign(m8,
                                                      (rvalue(m8, "m8",
                                                         index_uni(((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    2097152)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z22 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z9 - 1)
                                                                    * 1)) +
                                                                    1))) +
                                                        log_sum_exp(acc0)),
                                                      "assigning variable m8", 
                                                      index_uni(((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    2097152)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z22 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z9 - 1)
                                                                    * 1)) +
                                                                  1)));
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 540;
      assign(m9, rep_array(0, 2097152), "assigning variable m9");
      current_statement__ = 589;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 587;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 585;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 583;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 581;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 579;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 577;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 575;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 573;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 571;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 569;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 567;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 565;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 563;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 561;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 559;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 557;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 555;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          current_statement__ = 553;
                                          for (int z12 = 1; z12 <= 2; ++z12) {
                                            current_statement__ = 551;
                                            for (int z11 = 1; z11 <= 2; ++z11) {
                                              current_statement__ = 549;
                                              for (int z10 = 1; z10 <= 2;
                                                   ++z10) {
                                                {
                                                  Eigen::Matrix<double, -1, 1> acc0;
                                                  acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                  stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                  
                                                  
                                                  current_statement__ = 542;
                                                  assign(acc0,
                                                    rep_vector(0, 2),
                                                    "assigning variable acc0");
                                                  current_statement__ = 545;
                                                  for (int z9_val = 1;
                                                       z9_val <= 2; ++z9_val) {
                                                    current_statement__ = 543;
                                                    assign(acc0,
                                                      (rvalue(acc0, "acc0",
                                                         index_uni(z9_val)) +
                                                        rvalue(m8, "m8",
                                                          index_uni(((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    2097152)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    1048576))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z15 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z21 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z22 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z9_val
                                                                    - 1) * 1))
                                                                    + 1)))),
                                                      "assigning variable acc0", 
                                                      index_uni(z9_val));
                                                  }
                                                  current_statement__ = 546;
                                                  assign(m9,
                                                    (rvalue(m9, "m9",
                                                       index_uni((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    1048576)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                   + 1))) +
                                                      log_sum_exp(acc0)),
                                                    "assigning variable m9", 
                                                    index_uni((((((((((((((((((((((((z10
                                                                    - 1) *
                                                                    1048576)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)));
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 590;
      assign(m10, rep_array(0, 1048576), "assigning variable m10");
      current_statement__ = 637;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 635;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 633;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 631;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 629;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 627;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 625;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 623;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 621;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 619;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 617;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 615;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 613;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 611;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 609;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 607;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 605;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 603;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          current_statement__ = 601;
                                          for (int z12 = 1; z12 <= 2; ++z12) {
                                            current_statement__ = 599;
                                            for (int z11 = 1; z11 <= 2; ++z11) {
                                              {
                                                Eigen::Matrix<double, -1, 1> acc0;
                                                acc0 = Eigen::Matrix<double, -1, 1>(2);
                                                stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                                
                                                
                                                current_statement__ = 592;
                                                assign(acc0,
                                                  rep_vector(0, 2),
                                                  "assigning variable acc0");
                                                current_statement__ = 595;
                                                for (int z10_val = 1;
                                                     z10_val <= 2; ++z10_val) {
                                                  current_statement__ = 593;
                                                  assign(acc0,
                                                    (rvalue(acc0, "acc0",
                                                       index_uni(z10_val)) +
                                                      rvalue(m9, "m9",
                                                        index_uni((((((((((((((((((((((((z10_val
                                                                    - 1) *
                                                                    1048576)
                                                                    +
                                                                    ((z11 -
                                                                    1) *
                                                                    524288))
                                                                    +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)))),
                                                    "assigning variable acc0", 
                                                    index_uni(z10_val));
                                                }
                                                current_statement__ = 596;
                                                assign(m10,
                                                  (rvalue(m10, "m10",
                                                     index_uni(((((((((((((((((((((((z11
                                                                    - 1) *
                                                                    524288) +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                   +
                                                                   ((z29 - 1)
                                                                    * 2)) +
                                                                  ((z30 - 1)
                                                                    * 1)) +
                                                                 1))) +
                                                    log_sum_exp(acc0)),
                                                  "assigning variable m10", 
                                                  index_uni(((((((((((((((((((((((z11
                                                                    - 1) *
                                                                    524288) +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                   +
                                                                   ((z26 - 1)
                                                                    * 16)) +
                                                                  ((z27 - 1)
                                                                    * 8)) +
                                                                 ((z28 - 1) *
                                                                   4)) +
                                                                ((z29 - 1) *
                                                                  2)) +
                                                               ((z30 - 1) *
                                                                 1)) + 1)));
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 638;
      assign(m11, rep_array(0, 524288), "assigning variable m11");
      current_statement__ = 683;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 681;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 679;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 677;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 675;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 673;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 671;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 669;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 667;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 665;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 663;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 661;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 659;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 657;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 655;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 653;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 651;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 649;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          current_statement__ = 647;
                                          for (int z12 = 1; z12 <= 2; ++z12) {
                                            {
                                              Eigen::Matrix<double, -1, 1> acc0;
                                              acc0 = Eigen::Matrix<double, -1, 1>(2);
                                              stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                              
                                              
                                              current_statement__ = 640;
                                              assign(acc0, rep_vector(0, 2),
                                                "assigning variable acc0");
                                              current_statement__ = 643;
                                              for (int z11_val = 1;
                                                   z11_val <= 2; ++z11_val) {
                                                current_statement__ = 641;
                                                assign(acc0,
                                                  (rvalue(acc0, "acc0",
                                                     index_uni(z11_val)) +
                                                    rvalue(m10, "m10",
                                                      index_uni(((((((((((((((((((((((z11_val
                                                                    - 1) *
                                                                    524288) +
                                                                    ((z12 -
                                                                    1) *
                                                                    262144))
                                                                    +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 1)) +
                                                                  1)))),
                                                  "assigning variable acc0", 
                                                  index_uni(z11_val));
                                              }
                                              current_statement__ = 644;
                                              assign(m11,
                                                (rvalue(m11, "m11",
                                                   index_uni((((((((((((((((((((((z12
                                                                    - 1) *
                                                                    262144) +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                   +
                                                                   ((z27 - 1)
                                                                    * 8)) +
                                                                  ((z28 - 1)
                                                                    * 4)) +
                                                                 ((z29 - 1) *
                                                                   2)) +
                                                                ((z30 - 1) *
                                                                  1)) + 1)))
                                                  + log_sum_exp(acc0)),
                                                "assigning variable m11", 
                                                index_uni((((((((((((((((((((((z12
                                                                    - 1) *
                                                                    262144) +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                   +
                                                                   ((z24 - 1)
                                                                    * 64)) +
                                                                  ((z25 - 1)
                                                                    * 32)) +
                                                                 ((z26 - 1) *
                                                                   16)) +
                                                                ((z27 - 1) *
                                                                  8)) +
                                                               ((z28 - 1) *
                                                                 4)) +
                                                              ((z29 - 1) * 2))
                                                             +
                                                             ((z30 - 1) * 1))
                                                            + 1)));
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 684;
      assign(m12, rep_array(0, 262144), "assigning variable m12");
      current_statement__ = 727;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 725;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 723;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 721;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 719;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 717;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 715;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 713;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 711;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 709;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 707;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 705;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 703;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 701;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 699;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 697;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 695;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        current_statement__ = 693;
                                        for (int z13 = 1; z13 <= 2; ++z13) {
                                          {
                                            Eigen::Matrix<double, -1, 1> acc0;
                                            acc0 = Eigen::Matrix<double, -1, 1>(2);
                                            stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                            
                                            
                                            current_statement__ = 686;
                                            assign(acc0, rep_vector(0, 2),
                                              "assigning variable acc0");
                                            current_statement__ = 689;
                                            for (int z12_val = 1;
                                                 z12_val <= 2; ++z12_val) {
                                              current_statement__ = 687;
                                              assign(acc0,
                                                (rvalue(acc0, "acc0",
                                                   index_uni(z12_val)) +
                                                  rvalue(m11, "m11",
                                                    index_uni((((((((((((((((((((((z12_val
                                                                    - 1) *
                                                                    262144) +
                                                                    ((z13 -
                                                                    1) *
                                                                    131072))
                                                                    +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)))),
                                                "assigning variable acc0", 
                                                index_uni(z12_val));
                                            }
                                            current_statement__ = 690;
                                            assign(m12,
                                              (rvalue(m12, "m12",
                                                 index_uni(((((((((((((((((((((z13
                                                                    - 1) *
                                                                    131072) +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                   +
                                                                   ((z25 - 1)
                                                                    * 32)) +
                                                                  ((z26 - 1)
                                                                    * 16)) +
                                                                 ((z27 - 1) *
                                                                   8)) +
                                                                ((z28 - 1) *
                                                                  4)) +
                                                               ((z29 - 1) *
                                                                 2)) +
                                                              ((z30 - 1) * 1))
                                                             + 1))) +
                                                log_sum_exp(acc0)),
                                              "assigning variable m12", 
                                              index_uni(((((((((((((((((((((z13
                                                                    - 1) *
                                                                    131072) +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                   +
                                                                   ((z22 - 1)
                                                                    * 256)) +
                                                                  ((z23 - 1)
                                                                    * 128)) +
                                                                 ((z24 - 1) *
                                                                   64)) +
                                                                ((z25 - 1) *
                                                                  32)) +
                                                               ((z26 - 1) *
                                                                 16)) +
                                                              ((z27 - 1) * 8))
                                                             +
                                                             ((z28 - 1) * 4))
                                                            +
                                                            ((z29 - 1) * 2))
                                                           + ((z30 - 1) * 1))
                                                          + 1)));
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 728;
      assign(m13, rep_array(0, 131072), "assigning variable m13");
      current_statement__ = 769;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 767;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 765;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 763;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 761;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 759;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 757;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 755;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 753;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 751;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 749;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 747;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 745;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 743;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 741;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 739;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      current_statement__ = 737;
                                      for (int z14 = 1; z14 <= 2; ++z14) {
                                        {
                                          Eigen::Matrix<double, -1, 1> acc0;
                                          acc0 = Eigen::Matrix<double, -1, 1>(2);
                                          stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                          
                                          
                                          current_statement__ = 730;
                                          assign(acc0, rep_vector(0, 2),
                                            "assigning variable acc0");
                                          current_statement__ = 733;
                                          for (int z13_val = 1; z13_val <= 2;
                                               ++z13_val) {
                                            current_statement__ = 731;
                                            assign(acc0,
                                              (rvalue(acc0, "acc0",
                                                 index_uni(z13_val)) +
                                                rvalue(m12, "m12",
                                                  index_uni(((((((((((((((((((((z13_val
                                                                    - 1) *
                                                                    131072) +
                                                                    ((z14 -
                                                                    1) *
                                                                    65536)) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                   +
                                                                   ((z26 - 1)
                                                                    * 16)) +
                                                                  ((z27 - 1)
                                                                    * 8)) +
                                                                 ((z28 - 1) *
                                                                   4)) +
                                                                ((z29 - 1) *
                                                                  2)) +
                                                               ((z30 - 1) *
                                                                 1)) + 1)))),
                                              "assigning variable acc0", 
                                              index_uni(z13_val));
                                          }
                                          current_statement__ = 734;
                                          assign(m13,
                                            (rvalue(m13, "m13",
                                               index_uni((((((((((((((((((((z14
                                                                    - 1) *
                                                                    65536) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                   +
                                                                   ((z23 - 1)
                                                                    * 128)) +
                                                                  ((z24 - 1)
                                                                    * 64)) +
                                                                 ((z25 - 1) *
                                                                   32)) +
                                                                ((z26 - 1) *
                                                                  16)) +
                                                               ((z27 - 1) *
                                                                 8)) +
                                                              ((z28 - 1) * 4))
                                                             +
                                                             ((z29 - 1) * 2))
                                                            +
                                                            ((z30 - 1) * 1))
                                                           + 1))) +
                                              log_sum_exp(acc0)),
                                            "assigning variable m13", 
                                            index_uni((((((((((((((((((((z14
                                                                    - 1) *
                                                                    65536) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                   ((z20 - 1)
                                                                    * 1024))
                                                                  +
                                                                  ((z21 - 1)
                                                                    * 512)) +
                                                                 ((z22 - 1) *
                                                                   256)) +
                                                                ((z23 - 1) *
                                                                  128)) +
                                                               ((z24 - 1) *
                                                                 64)) +
                                                              ((z25 - 1) *
                                                                32)) +
                                                             ((z26 - 1) * 16))
                                                            +
                                                            ((z27 - 1) * 8))
                                                           + ((z28 - 1) * 4))
                                                          + ((z29 - 1) * 2))
                                                         + ((z30 - 1) * 1)) +
                                                        1)));
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 770;
      assign(m14, rep_array(0, 65536), "assigning variable m14");
      current_statement__ = 809;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 807;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 805;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 803;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 801;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 799;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 797;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 795;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 793;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 791;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 789;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 787;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 785;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 783;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 781;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    current_statement__ = 779;
                                    for (int z15 = 1; z15 <= 2; ++z15) {
                                      {
                                        Eigen::Matrix<double, -1, 1> acc0;
                                        acc0 = Eigen::Matrix<double, -1, 1>(2);
                                        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                        
                                        
                                        current_statement__ = 772;
                                        assign(acc0, rep_vector(0, 2),
                                          "assigning variable acc0");
                                        current_statement__ = 775;
                                        for (int z14_val = 1; z14_val <= 2;
                                             ++z14_val) {
                                          current_statement__ = 773;
                                          assign(acc0,
                                            (rvalue(acc0, "acc0",
                                               index_uni(z14_val)) +
                                              rvalue(m13, "m13",
                                                index_uni((((((((((((((((((((z14_val
                                                                    - 1) *
                                                                    65536) +
                                                                    ((z15 -
                                                                    1) *
                                                                    32768)) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                   +
                                                                   ((z24 - 1)
                                                                    * 64)) +
                                                                  ((z25 - 1)
                                                                    * 32)) +
                                                                 ((z26 - 1) *
                                                                   16)) +
                                                                ((z27 - 1) *
                                                                  8)) +
                                                               ((z28 - 1) *
                                                                 4)) +
                                                              ((z29 - 1) * 2))
                                                             +
                                                             ((z30 - 1) * 1))
                                                            + 1)))),
                                            "assigning variable acc0", 
                                            index_uni(z14_val));
                                        }
                                        current_statement__ = 776;
                                        assign(m14,
                                          (rvalue(m14, "m14",
                                             index_uni(((((((((((((((((((z15
                                                                    - 1) *
                                                                    32768) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                   ((z21 - 1)
                                                                    * 512)) +
                                                                  ((z22 - 1)
                                                                    * 256)) +
                                                                 ((z23 - 1) *
                                                                   128)) +
                                                                ((z24 - 1) *
                                                                  64)) +
                                                               ((z25 - 1) *
                                                                 32)) +
                                                              ((z26 - 1) *
                                                                16)) +
                                                             ((z27 - 1) * 8))
                                                            +
                                                            ((z28 - 1) * 4))
                                                           + ((z29 - 1) * 2))
                                                          + ((z30 - 1) * 1))
                                                         + 1))) +
                                            log_sum_exp(acc0)),
                                          "assigning variable m14", index_uni(
                                                                    ((((((((((((((((((z15
                                                                    - 1) *
                                                                    32768) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 810;
      assign(m15, rep_array(0, 32768), "assigning variable m15");
      current_statement__ = 847;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 845;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 843;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 841;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 839;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 837;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 835;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 833;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 831;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 829;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 827;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 825;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 823;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 821;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  current_statement__ = 819;
                                  for (int z16 = 1; z16 <= 2; ++z16) {
                                    {
                                      Eigen::Matrix<double, -1, 1> acc0;
                                      acc0 = Eigen::Matrix<double, -1, 1>(2);
                                      stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                      
                                      
                                      current_statement__ = 812;
                                      assign(acc0, rep_vector(0, 2),
                                        "assigning variable acc0");
                                      current_statement__ = 815;
                                      for (int z15_val = 1; z15_val <= 2;
                                           ++z15_val) {
                                        current_statement__ = 813;
                                        assign(acc0,
                                          (rvalue(acc0, "acc0",
                                             index_uni(z15_val)) +
                                            rvalue(m14, "m14",
                                              index_uni(((((((((((((((((((z15_val
                                                                    - 1) *
                                                                    32768) +
                                                                    ((z16 -
                                                                    1) *
                                                                    16384)) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                   +
                                                                   ((z22 - 1)
                                                                    * 256)) +
                                                                  ((z23 - 1)
                                                                    * 128)) +
                                                                 ((z24 - 1) *
                                                                   64)) +
                                                                ((z25 - 1) *
                                                                  32)) +
                                                               ((z26 - 1) *
                                                                 16)) +
                                                              ((z27 - 1) * 8))
                                                             +
                                                             ((z28 - 1) * 4))
                                                            +
                                                            ((z29 - 1) * 2))
                                                           + ((z30 - 1) * 1))
                                                          + 1)))),
                                          "assigning variable acc0", 
                                          index_uni(z15_val));
                                      }
                                      current_statement__ = 816;
                                      assign(m15,
                                        (rvalue(m15, "m15",
                                           index_uni((((((((((((((((((z16 -
                                                                    1) *
                                                                    16384) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                   ((z19 - 1)
                                                                    * 2048))
                                                                  +
                                                                  ((z20 - 1)
                                                                    * 1024))
                                                                 +
                                                                 ((z21 - 1) *
                                                                   512)) +
                                                                ((z22 - 1) *
                                                                  256)) +
                                                               ((z23 - 1) *
                                                                 128)) +
                                                              ((z24 - 1) *
                                                                64)) +
                                                             ((z25 - 1) * 32))
                                                            +
                                                            ((z26 - 1) * 16))
                                                           + ((z27 - 1) * 8))
                                                          + ((z28 - 1) * 4))
                                                         + ((z29 - 1) * 2)) +
                                                        ((z30 - 1) * 1)) + 1)))
                                          + log_sum_exp(acc0)),
                                        "assigning variable m15", index_uni(
                                                                    (((((((((((((((((z16
                                                                    - 1) *
                                                                    16384) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 848;
      assign(m16, rep_array(0, 16384), "assigning variable m16");
      current_statement__ = 883;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 881;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 879;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 877;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 875;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 873;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 871;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 869;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 867;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 865;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 863;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 861;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 859;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                current_statement__ = 857;
                                for (int z17 = 1; z17 <= 2; ++z17) {
                                  {
                                    Eigen::Matrix<double, -1, 1> acc0;
                                    acc0 = Eigen::Matrix<double, -1, 1>(2);
                                    stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                    
                                    
                                    current_statement__ = 850;
                                    assign(acc0, rep_vector(0, 2),
                                      "assigning variable acc0");
                                    current_statement__ = 853;
                                    for (int z16_val = 1; z16_val <= 2;
                                         ++z16_val) {
                                      current_statement__ = 851;
                                      assign(acc0,
                                        (rvalue(acc0, "acc0",
                                           index_uni(z16_val)) +
                                          rvalue(m15, "m15",
                                            index_uni((((((((((((((((((z16_val
                                                                    - 1) *
                                                                    16384) +
                                                                    ((z17 -
                                                                    1) *
                                                                    8192)) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                   ((z20 - 1)
                                                                    * 1024))
                                                                  +
                                                                  ((z21 - 1)
                                                                    * 512)) +
                                                                 ((z22 - 1) *
                                                                   256)) +
                                                                ((z23 - 1) *
                                                                  128)) +
                                                               ((z24 - 1) *
                                                                 64)) +
                                                              ((z25 - 1) *
                                                                32)) +
                                                             ((z26 - 1) * 16))
                                                            +
                                                            ((z27 - 1) * 8))
                                                           + ((z28 - 1) * 4))
                                                          + ((z29 - 1) * 2))
                                                         + ((z30 - 1) * 1)) +
                                                        1)))),
                                        "assigning variable acc0", index_uni(z16_val));
                                    }
                                    current_statement__ = 854;
                                    assign(m16,
                                      (rvalue(m16, "m16",
                                         index_uni(((((((((((((((((z17 - 1) *
                                                                   8192) +
                                                                  ((z18 - 1)
                                                                    * 4096))
                                                                 +
                                                                 ((z19 - 1) *
                                                                   2048)) +
                                                                ((z20 - 1) *
                                                                  1024)) +
                                                               ((z21 - 1) *
                                                                 512)) +
                                                              ((z22 - 1) *
                                                                256)) +
                                                             ((z23 - 1) *
                                                               128)) +
                                                            ((z24 - 1) * 64))
                                                           +
                                                           ((z25 - 1) * 32))
                                                          + ((z26 - 1) * 16))
                                                         + ((z27 - 1) * 8)) +
                                                        ((z28 - 1) * 4)) +
                                                       ((z29 - 1) * 2)) +
                                                      ((z30 - 1) * 1)) + 1)))
                                        + log_sum_exp(acc0)),
                                      "assigning variable m16", index_uni(
                                                                  ((((((((((((((((z17
                                                                    - 1) *
                                                                    8192) +
                                                                    ((z18 -
                                                                    1) *
                                                                    4096)) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 884;
      assign(m17, rep_array(0, 8192), "assigning variable m17");
      current_statement__ = 917;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 915;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 913;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 911;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 909;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 907;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 905;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 903;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 901;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 899;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 897;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 895;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              current_statement__ = 893;
                              for (int z18 = 1; z18 <= 2; ++z18) {
                                {
                                  Eigen::Matrix<double, -1, 1> acc0;
                                  acc0 = Eigen::Matrix<double, -1, 1>(2);
                                  stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                  
                                  
                                  current_statement__ = 886;
                                  assign(acc0, rep_vector(0, 2),
                                    "assigning variable acc0");
                                  current_statement__ = 889;
                                  for (int z17_val = 1; z17_val <= 2;
                                       ++z17_val) {
                                    current_statement__ = 887;
                                    assign(acc0,
                                      (rvalue(acc0, "acc0",
                                         index_uni(z17_val)) +
                                        rvalue(m16, "m16",
                                          index_uni(((((((((((((((((z17_val -
                                                                    1) *
                                                                    8192) +
                                                                   ((z18 - 1)
                                                                    * 4096))
                                                                  +
                                                                  ((z19 - 1)
                                                                    * 2048))
                                                                 +
                                                                 ((z20 - 1) *
                                                                   1024)) +
                                                                ((z21 - 1) *
                                                                  512)) +
                                                               ((z22 - 1) *
                                                                 256)) +
                                                              ((z23 - 1) *
                                                                128)) +
                                                             ((z24 - 1) * 64))
                                                            +
                                                            ((z25 - 1) * 32))
                                                           +
                                                           ((z26 - 1) * 16))
                                                          + ((z27 - 1) * 8))
                                                         + ((z28 - 1) * 4)) +
                                                        ((z29 - 1) * 2)) +
                                                       ((z30 - 1) * 1)) + 1)))),
                                      "assigning variable acc0", index_uni(z17_val));
                                  }
                                  current_statement__ = 890;
                                  assign(m17,
                                    (rvalue(m17, "m17",
                                       index_uni((((((((((((((((z18 - 1) *
                                                                4096) +
                                                               ((z19 - 1) *
                                                                 2048)) +
                                                              ((z20 - 1) *
                                                                1024)) +
                                                             ((z21 - 1) *
                                                               512)) +
                                                            ((z22 - 1) * 256))
                                                           +
                                                           ((z23 - 1) * 128))
                                                          + ((z24 - 1) * 64))
                                                         + ((z25 - 1) * 32))
                                                        + ((z26 - 1) * 16)) +
                                                       ((z27 - 1) * 8)) +
                                                      ((z28 - 1) * 4)) +
                                                     ((z29 - 1) * 2)) +
                                                    ((z30 - 1) * 1)) + 1))) +
                                      log_sum_exp(acc0)),
                                    "assigning variable m17", index_uni(
                                                                (((((((((((((((z18
                                                                    - 1) *
                                                                    4096) +
                                                                    ((z19 -
                                                                    1) *
                                                                    2048)) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 1)) +
                                                                  1)));
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 918;
      assign(m18, rep_array(0, 4096), "assigning variable m18");
      current_statement__ = 949;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 947;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 945;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 943;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 941;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 939;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 937;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 935;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 933;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 931;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 929;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            current_statement__ = 927;
                            for (int z19 = 1; z19 <= 2; ++z19) {
                              {
                                Eigen::Matrix<double, -1, 1> acc0;
                                acc0 = Eigen::Matrix<double, -1, 1>(2);
                                stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                                
                                
                                current_statement__ = 920;
                                assign(acc0, rep_vector(0, 2),
                                  "assigning variable acc0");
                                current_statement__ = 923;
                                for (int z18_val = 1; z18_val <= 2; ++z18_val) {
                                  current_statement__ = 921;
                                  assign(acc0,
                                    (rvalue(acc0, "acc0", index_uni(z18_val))
                                      +
                                      rvalue(m17, "m17",
                                        index_uni((((((((((((((((z18_val - 1)
                                                                 * 4096) +
                                                                ((z19 - 1) *
                                                                  2048)) +
                                                               ((z20 - 1) *
                                                                 1024)) +
                                                              ((z21 - 1) *
                                                                512)) +
                                                             ((z22 - 1) *
                                                               256)) +
                                                            ((z23 - 1) * 128))
                                                           +
                                                           ((z24 - 1) * 64))
                                                          + ((z25 - 1) * 32))
                                                         + ((z26 - 1) * 16))
                                                        + ((z27 - 1) * 8)) +
                                                       ((z28 - 1) * 4)) +
                                                      ((z29 - 1) * 2)) +
                                                     ((z30 - 1) * 1)) + 1)))),
                                    "assigning variable acc0", index_uni(z18_val));
                                }
                                current_statement__ = 924;
                                assign(m18,
                                  (rvalue(m18, "m18",
                                     index_uni(((((((((((((((z19 - 1) * 2048)
                                                            +
                                                            ((z20 - 1) *
                                                              1024)) +
                                                           ((z21 - 1) * 512))
                                                          +
                                                          ((z22 - 1) * 256))
                                                         + ((z23 - 1) * 128))
                                                        + ((z24 - 1) * 64)) +
                                                       ((z25 - 1) * 32)) +
                                                      ((z26 - 1) * 16)) +
                                                     ((z27 - 1) * 8)) +
                                                    ((z28 - 1) * 4)) +
                                                   ((z29 - 1) * 2)) +
                                                  ((z30 - 1) * 1)) + 1))) +
                                    log_sum_exp(acc0)),
                                  "assigning variable m18", index_uni(
                                                              ((((((((((((((z19
                                                                    - 1) *
                                                                    2048) +
                                                                    ((z20 -
                                                                    1) *
                                                                    1024)) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)));
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 950;
      assign(m19, rep_array(0, 2048), "assigning variable m19");
      current_statement__ = 979;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 977;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 975;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 973;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 971;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 969;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 967;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 965;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 963;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 961;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          current_statement__ = 959;
                          for (int z20 = 1; z20 <= 2; ++z20) {
                            {
                              Eigen::Matrix<double, -1, 1> acc0;
                              acc0 = Eigen::Matrix<double, -1, 1>(2);
                              stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                              
                              
                              current_statement__ = 952;
                              assign(acc0, rep_vector(0, 2),
                                "assigning variable acc0");
                              current_statement__ = 955;
                              for (int z19_val = 1; z19_val <= 2; ++z19_val) {
                                current_statement__ = 953;
                                assign(acc0,
                                  (rvalue(acc0, "acc0", index_uni(z19_val)) +
                                    rvalue(m18, "m18",
                                      index_uni(((((((((((((((z19_val - 1) *
                                                              2048) +
                                                             ((z20 - 1) *
                                                               1024)) +
                                                            ((z21 - 1) * 512))
                                                           +
                                                           ((z22 - 1) * 256))
                                                          +
                                                          ((z23 - 1) * 128))
                                                         + ((z24 - 1) * 64))
                                                        + ((z25 - 1) * 32)) +
                                                       ((z26 - 1) * 16)) +
                                                      ((z27 - 1) * 8)) +
                                                     ((z28 - 1) * 4)) +
                                                    ((z29 - 1) * 2)) +
                                                   ((z30 - 1) * 1)) + 1)))),
                                  "assigning variable acc0", index_uni(z19_val));
                              }
                              current_statement__ = 956;
                              assign(m19,
                                (rvalue(m19, "m19",
                                   index_uni((((((((((((((z20 - 1) * 1024) +
                                                         ((z21 - 1) * 512)) +
                                                        ((z22 - 1) * 256)) +
                                                       ((z23 - 1) * 128)) +
                                                      ((z24 - 1) * 64)) +
                                                     ((z25 - 1) * 32)) +
                                                    ((z26 - 1) * 16)) +
                                                   ((z27 - 1) * 8)) +
                                                  ((z28 - 1) * 4)) +
                                                 ((z29 - 1) * 2)) +
                                                ((z30 - 1) * 1)) + 1))) +
                                  log_sum_exp(acc0)),
                                "assigning variable m19", index_uni((((((((((((((z20
                                                                    - 1) *
                                                                    1024) +
                                                                    ((z21 -
                                                                    1) * 512))
                                                                    +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 980;
      assign(m20, rep_array(0, 1024), "assigning variable m20");
      current_statement__ = 1007;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1005;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1003;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1001;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 999;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 997;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 995;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 993;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 991;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        current_statement__ = 989;
                        for (int z21 = 1; z21 <= 2; ++z21) {
                          {
                            Eigen::Matrix<double, -1, 1> acc0;
                            acc0 = Eigen::Matrix<double, -1, 1>(2);
                            stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                            
                            
                            current_statement__ = 982;
                            assign(acc0, rep_vector(0, 2),
                              "assigning variable acc0");
                            current_statement__ = 985;
                            for (int z20_val = 1; z20_val <= 2; ++z20_val) {
                              current_statement__ = 983;
                              assign(acc0,
                                (rvalue(acc0, "acc0", index_uni(z20_val)) +
                                  rvalue(m19, "m19",
                                    index_uni((((((((((((((z20_val - 1) *
                                                           1024) +
                                                          ((z21 - 1) * 512))
                                                         + ((z22 - 1) * 256))
                                                        + ((z23 - 1) * 128))
                                                       + ((z24 - 1) * 64)) +
                                                      ((z25 - 1) * 32)) +
                                                     ((z26 - 1) * 16)) +
                                                    ((z27 - 1) * 8)) +
                                                   ((z28 - 1) * 4)) +
                                                  ((z29 - 1) * 2)) +
                                                 ((z30 - 1) * 1)) + 1)))),
                                "assigning variable acc0", index_uni(z20_val));
                            }
                            current_statement__ = 986;
                            assign(m20,
                              (rvalue(m20, "m20",
                                 index_uni(((((((((((((z21 - 1) * 512) +
                                                      ((z22 - 1) * 256)) +
                                                     ((z23 - 1) * 128)) +
                                                    ((z24 - 1) * 64)) +
                                                   ((z25 - 1) * 32)) +
                                                  ((z26 - 1) * 16)) +
                                                 ((z27 - 1) * 8)) +
                                                ((z28 - 1) * 4)) +
                                               ((z29 - 1) * 2)) +
                                              ((z30 - 1) * 1)) + 1))) +
                                log_sum_exp(acc0)),
                              "assigning variable m20", index_uni(((((((((((((z21
                                                                    - 1) *
                                                                    512) +
                                                                    ((z22 -
                                                                    1) * 256))
                                                                    +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                    +
                                                                    ((z30 -
                                                                    1) * 1))
                                                                    + 1)));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1008;
      assign(m21, rep_array(0, 512), "assigning variable m21");
      current_statement__ = 1033;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1031;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1029;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1027;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1025;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1023;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 1021;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 1019;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      current_statement__ = 1017;
                      for (int z22 = 1; z22 <= 2; ++z22) {
                        {
                          Eigen::Matrix<double, -1, 1> acc0;
                          acc0 = Eigen::Matrix<double, -1, 1>(2);
                          stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                          
                          
                          current_statement__ = 1010;
                          assign(acc0, rep_vector(0, 2),
                            "assigning variable acc0");
                          current_statement__ = 1013;
                          for (int z21_val = 1; z21_val <= 2; ++z21_val) {
                            current_statement__ = 1011;
                            assign(acc0,
                              (rvalue(acc0, "acc0", index_uni(z21_val)) +
                                rvalue(m20, "m20",
                                  index_uni(((((((((((((z21_val - 1) * 512) +
                                                       ((z22 - 1) * 256)) +
                                                      ((z23 - 1) * 128)) +
                                                     ((z24 - 1) * 64)) +
                                                    ((z25 - 1) * 32)) +
                                                   ((z26 - 1) * 16)) +
                                                  ((z27 - 1) * 8)) +
                                                 ((z28 - 1) * 4)) +
                                                ((z29 - 1) * 2)) +
                                               ((z30 - 1) * 1)) + 1)))),
                              "assigning variable acc0", index_uni(z21_val));
                          }
                          current_statement__ = 1014;
                          assign(m21,
                            (rvalue(m21, "m21",
                               index_uni((((((((((((z22 - 1) * 256) +
                                                   ((z23 - 1) * 128)) +
                                                  ((z24 - 1) * 64)) +
                                                 ((z25 - 1) * 32)) +
                                                ((z26 - 1) * 16)) +
                                               ((z27 - 1) * 8)) +
                                              ((z28 - 1) * 4)) +
                                             ((z29 - 1) * 2)) +
                                            ((z30 - 1) * 1)) + 1))) +
                              log_sum_exp(acc0)),
                            "assigning variable m21", index_uni((((((((((((z22
                                                                    - 1) *
                                                                    256) +
                                                                    ((z23 -
                                                                    1) * 128))
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                    +
                                                                    ((z28 -
                                                                    1) * 4))
                                                                    +
                                                                    ((z29 -
                                                                    1) * 2))
                                                                   +
                                                                   ((z30 - 1)
                                                                    * 1)) +
                                                                  1)));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1034;
      assign(m22, rep_array(0, 256), "assigning variable m22");
      current_statement__ = 1057;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1055;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1053;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1051;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1049;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1047;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 1045;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    current_statement__ = 1043;
                    for (int z23 = 1; z23 <= 2; ++z23) {
                      {
                        Eigen::Matrix<double, -1, 1> acc0;
                        acc0 = Eigen::Matrix<double, -1, 1>(2);
                        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                        
                        
                        current_statement__ = 1036;
                        assign(acc0, rep_vector(0, 2),
                          "assigning variable acc0");
                        current_statement__ = 1039;
                        for (int z22_val = 1; z22_val <= 2; ++z22_val) {
                          current_statement__ = 1037;
                          assign(acc0,
                            (rvalue(acc0, "acc0", index_uni(z22_val)) +
                              rvalue(m21, "m21",
                                index_uni((((((((((((z22_val - 1) * 256) +
                                                    ((z23 - 1) * 128)) +
                                                   ((z24 - 1) * 64)) +
                                                  ((z25 - 1) * 32)) +
                                                 ((z26 - 1) * 16)) +
                                                ((z27 - 1) * 8)) +
                                               ((z28 - 1) * 4)) +
                                              ((z29 - 1) * 2)) +
                                             ((z30 - 1) * 1)) + 1)))),
                            "assigning variable acc0", index_uni(z22_val));
                        }
                        current_statement__ = 1040;
                        assign(m22,
                          (rvalue(m22, "m22",
                             index_uni(((((((((((z23 - 1) * 128) +
                                                ((z24 - 1) * 64)) +
                                               ((z25 - 1) * 32)) +
                                              ((z26 - 1) * 16)) +
                                             ((z27 - 1) * 8)) +
                                            ((z28 - 1) * 4)) +
                                           ((z29 - 1) * 2)) +
                                          ((z30 - 1) * 1)) + 1))) +
                            log_sum_exp(acc0)),
                          "assigning variable m22", index_uni(((((((((((z23 -
                                                                    1) * 128)
                                                                    +
                                                                    ((z24 -
                                                                    1) * 64))
                                                                    +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                    +
                                                                    ((z26 -
                                                                    1) * 16))
                                                                    +
                                                                    ((z27 -
                                                                    1) * 8))
                                                                   +
                                                                   ((z28 - 1)
                                                                    * 4)) +
                                                                  ((z29 - 1)
                                                                    * 2)) +
                                                                 ((z30 - 1) *
                                                                   1)) + 1)));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1058;
      assign(m23, rep_array(0, 128), "assigning variable m23");
      current_statement__ = 1079;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1077;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1075;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1073;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1071;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1069;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  current_statement__ = 1067;
                  for (int z24 = 1; z24 <= 2; ++z24) {
                    {
                      Eigen::Matrix<double, -1, 1> acc0;
                      acc0 = Eigen::Matrix<double, -1, 1>(2);
                      stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                      
                      
                      current_statement__ = 1060;
                      assign(acc0, rep_vector(0, 2),
                        "assigning variable acc0");
                      current_statement__ = 1063;
                      for (int z23_val = 1; z23_val <= 2; ++z23_val) {
                        current_statement__ = 1061;
                        assign(acc0,
                          (rvalue(acc0, "acc0", index_uni(z23_val)) +
                            rvalue(m22, "m22",
                              index_uni(((((((((((z23_val - 1) * 128) +
                                                 ((z24 - 1) * 64)) +
                                                ((z25 - 1) * 32)) +
                                               ((z26 - 1) * 16)) +
                                              ((z27 - 1) * 8)) +
                                             ((z28 - 1) * 4)) +
                                            ((z29 - 1) * 2)) +
                                           ((z30 - 1) * 1)) + 1)))),
                          "assigning variable acc0", index_uni(z23_val));
                      }
                      current_statement__ = 1064;
                      assign(m23,
                        (rvalue(m23, "m23",
                           index_uni((((((((((z24 - 1) * 64) +
                                             ((z25 - 1) * 32)) +
                                            ((z26 - 1) * 16)) +
                                           ((z27 - 1) * 8)) +
                                          ((z28 - 1) * 4)) + ((z29 - 1) * 2))
                                        + ((z30 - 1) * 1)) + 1))) +
                          log_sum_exp(acc0)),
                        "assigning variable m23", index_uni((((((((((z24 - 1)
                                                                    * 64) +
                                                                    ((z25 -
                                                                    1) * 32))
                                                                   +
                                                                   ((z26 - 1)
                                                                    * 16)) +
                                                                  ((z27 - 1)
                                                                    * 8)) +
                                                                 ((z28 - 1) *
                                                                   4)) +
                                                                ((z29 - 1) *
                                                                  2)) +
                                                               ((z30 - 1) *
                                                                 1)) + 1)));
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1080;
      assign(m24, rep_array(0, 64), "assigning variable m24");
      current_statement__ = 1099;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1097;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1095;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1093;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1091;
              for (int z26 = 1; z26 <= 2; ++z26) {
                current_statement__ = 1089;
                for (int z25 = 1; z25 <= 2; ++z25) {
                  {
                    Eigen::Matrix<double, -1, 1> acc0;
                    acc0 = Eigen::Matrix<double, -1, 1>(2);
                    stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                    
                    
                    current_statement__ = 1082;
                    assign(acc0, rep_vector(0, 2), "assigning variable acc0");
                    current_statement__ = 1085;
                    for (int z24_val = 1; z24_val <= 2; ++z24_val) {
                      current_statement__ = 1083;
                      assign(acc0,
                        (rvalue(acc0, "acc0", index_uni(z24_val)) +
                          rvalue(m23, "m23",
                            index_uni((((((((((z24_val - 1) * 64) +
                                              ((z25 - 1) * 32)) +
                                             ((z26 - 1) * 16)) +
                                            ((z27 - 1) * 8)) +
                                           ((z28 - 1) * 4)) +
                                          ((z29 - 1) * 2)) + ((z30 - 1) * 1))
                                        + 1)))),
                        "assigning variable acc0", index_uni(z24_val));
                    }
                    current_statement__ = 1086;
                    assign(m24,
                      (rvalue(m24, "m24",
                         index_uni(((((((((z25 - 1) * 32) + ((z26 - 1) * 16))
                                         + ((z27 - 1) * 8)) +
                                        ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                                      ((z30 - 1) * 1)) + 1))) +
                        log_sum_exp(acc0)),
                      "assigning variable m24", index_uni(((((((((z25 - 1) *
                                                                  32) +
                                                                 ((z26 - 1) *
                                                                   16)) +
                                                                ((z27 - 1) *
                                                                  8)) +
                                                               ((z28 - 1) *
                                                                 4)) +
                                                              ((z29 - 1) * 2))
                                                             +
                                                             ((z30 - 1) * 1))
                                                            + 1)));
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 1100;
      assign(m25, rep_array(0, 32), "assigning variable m25");
      current_statement__ = 1117;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1115;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1113;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1111;
            for (int z27 = 1; z27 <= 2; ++z27) {
              current_statement__ = 1109;
              for (int z26 = 1; z26 <= 2; ++z26) {
                {
                  Eigen::Matrix<double, -1, 1> acc0;
                  acc0 = Eigen::Matrix<double, -1, 1>(2);
                  stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                  
                  
                  current_statement__ = 1102;
                  assign(acc0, rep_vector(0, 2), "assigning variable acc0");
                  current_statement__ = 1105;
                  for (int z25_val = 1; z25_val <= 2; ++z25_val) {
                    current_statement__ = 1103;
                    assign(acc0,
                      (rvalue(acc0, "acc0", index_uni(z25_val)) +
                        rvalue(m24, "m24",
                          index_uni(((((((((z25_val - 1) * 32) +
                                           ((z26 - 1) * 16)) +
                                          ((z27 - 1) * 8)) + ((z28 - 1) * 4))
                                        + ((z29 - 1) * 2)) + ((z30 - 1) * 1))
                                      + 1)))),
                      "assigning variable acc0", index_uni(z25_val));
                  }
                  current_statement__ = 1106;
                  assign(m25,
                    (rvalue(m25, "m25",
                       index_uni((((((((z26 - 1) * 16) + ((z27 - 1) * 8)) +
                                      ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                                    ((z30 - 1) * 1)) + 1))) +
                      log_sum_exp(acc0)),
                    "assigning variable m25", index_uni((((((((z26 - 1) * 16)
                                                              +
                                                              ((z27 - 1) * 8))
                                                             +
                                                             ((z28 - 1) * 4))
                                                            +
                                                            ((z29 - 1) * 2))
                                                           + ((z30 - 1) * 1))
                                                          + 1)));
                }
              }
            }
          }
        }
      }
      current_statement__ = 1118;
      assign(m26, rep_array(0, 16), "assigning variable m26");
      current_statement__ = 1133;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1131;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1129;
          for (int z28 = 1; z28 <= 2; ++z28) {
            current_statement__ = 1127;
            for (int z27 = 1; z27 <= 2; ++z27) {
              {
                Eigen::Matrix<double, -1, 1> acc0;
                acc0 = Eigen::Matrix<double, -1, 1>(2);
                stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
                
                
                current_statement__ = 1120;
                assign(acc0, rep_vector(0, 2), "assigning variable acc0");
                current_statement__ = 1123;
                for (int z26_val = 1; z26_val <= 2; ++z26_val) {
                  current_statement__ = 1121;
                  assign(acc0,
                    (rvalue(acc0, "acc0", index_uni(z26_val)) +
                      rvalue(m25, "m25",
                        index_uni((((((((z26_val - 1) * 16) +
                                        ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                                      ((z29 - 1) * 2)) + ((z30 - 1) * 1)) +
                                    1)))),
                    "assigning variable acc0", index_uni(z26_val));
                }
                current_statement__ = 1124;
                assign(m26,
                  (rvalue(m26, "m26",
                     index_uni(((((((z27 - 1) * 8) + ((z28 - 1) * 4)) +
                                   ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))
                    + log_sum_exp(acc0)),
                  "assigning variable m26", index_uni(((((((z27 - 1) * 8) +
                                                           ((z28 - 1) * 4)) +
                                                          ((z29 - 1) * 2)) +
                                                         ((z30 - 1) * 1)) +
                                                        1)));
              }
            }
          }
        }
      }
      current_statement__ = 1134;
      assign(m27, rep_array(0, 8), "assigning variable m27");
      current_statement__ = 1147;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1145;
        for (int z29 = 1; z29 <= 2; ++z29) {
          current_statement__ = 1143;
          for (int z28 = 1; z28 <= 2; ++z28) {
            {
              Eigen::Matrix<double, -1, 1> acc0;
              acc0 = Eigen::Matrix<double, -1, 1>(2);
              stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
              
              
              current_statement__ = 1136;
              assign(acc0, rep_vector(0, 2), "assigning variable acc0");
              current_statement__ = 1139;
              for (int z27_val = 1; z27_val <= 2; ++z27_val) {
                current_statement__ = 1137;
                assign(acc0,
                  (rvalue(acc0, "acc0", index_uni(z27_val)) +
                    rvalue(m26, "m26",
                      index_uni(((((((z27_val - 1) * 8) + ((z28 - 1) * 4)) +
                                    ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
                  "assigning variable acc0", index_uni(z27_val));
              }
              current_statement__ = 1140;
              assign(m27,
                (rvalue(m27, "m27",
                   index_uni((((((z28 - 1) * 4) + ((z29 - 1) * 2)) +
                                ((z30 - 1) * 1)) + 1))) + log_sum_exp(acc0)),
                "assigning variable m27", index_uni((((((z28 - 1) * 4) +
                                                        ((z29 - 1) * 2)) +
                                                       ((z30 - 1) * 1)) + 1)));
            }
          }
        }
      }
      current_statement__ = 1148;
      assign(m28, rep_array(0, 4), "assigning variable m28");
      current_statement__ = 1159;
      for (int z30 = 1; z30 <= 2; ++z30) {
        current_statement__ = 1157;
        for (int z29 = 1; z29 <= 2; ++z29) {
          {
            Eigen::Matrix<double, -1, 1> acc0;
            acc0 = Eigen::Matrix<double, -1, 1>(2);
            stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
            
            current_statement__ = 1150;
            assign(acc0, rep_vector(0, 2), "assigning variable acc0");
            current_statement__ = 1153;
            for (int z28_val = 1; z28_val <= 2; ++z28_val) {
              current_statement__ = 1151;
              assign(acc0,
                (rvalue(acc0, "acc0", index_uni(z28_val)) +
                  rvalue(m27, "m27",
                    index_uni((((((z28_val - 1) * 4) + ((z29 - 1) * 2)) +
                                 ((z30 - 1) * 1)) + 1)))),
                "assigning variable acc0", index_uni(z28_val));
            }
            current_statement__ = 1154;
            assign(m28,
              (rvalue(m28, "m28",
                 index_uni(((((z29 - 1) * 2) + ((z30 - 1) * 1)) + 1))) +
                log_sum_exp(acc0)),
              "assigning variable m28", index_uni(((((z29 - 1) * 2) +
                                                     ((z30 - 1) * 1)) + 1)));
          }
        }
      }
      current_statement__ = 1160;
      assign(m29, rep_array(0, 2), "assigning variable m29");
      current_statement__ = 1169;
      for (int z30 = 1; z30 <= 2; ++z30) {
        {
          Eigen::Matrix<double, -1, 1> acc0;
          acc0 = Eigen::Matrix<double, -1, 1>(2);
          stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
          
          current_statement__ = 1162;
          assign(acc0, rep_vector(0, 2), "assigning variable acc0");
          current_statement__ = 1165;
          for (int z29_val = 1; z29_val <= 2; ++z29_val) {
            current_statement__ = 1163;
            assign(acc0,
              (rvalue(acc0, "acc0", index_uni(z29_val)) +
                rvalue(m28, "m28",
                  index_uni(((((z29_val - 1) * 2) + ((z30 - 1) * 1)) + 1)))),
              "assigning variable acc0", index_uni(z29_val));
          }
          current_statement__ = 1166;
          assign(m29,
            (rvalue(m29, "m29", index_uni(z30)) + log_sum_exp(acc0)),
            "assigning variable m29", index_uni(z30));
        }
      }
      current_statement__ = 1170;
      m30 = 0;
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1172;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1175;
        for (int z30_val = 1; z30_val <= 2; ++z30_val) {
          current_statement__ = 1173;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z30_val)) +
              rvalue(m29, "m29", index_uni((((z30_val - 1) * 1) + 1)))),
            "assigning variable acc0", index_uni(z30_val));
        }
        current_statement__ = 1176;
        m30 = (m30 + log_sum_exp(acc0));
      }
      if (emit_transformed_parameters__) {
        out__.write(m1);
        out__.write(m10);
        out__.write(m11);
        out__.write(m12);
        out__.write(m13);
        out__.write(m14);
        out__.write(m15);
        out__.write(m16);
        out__.write(m17);
        out__.write(m18);
        out__.write(m19);
        out__.write(m2);
        out__.write(m20);
        out__.write(m21);
        out__.write(m22);
        out__.write(m23);
        out__.write(m24);
        out__.write(m25);
        out__.write(m26);
        out__.write(m27);
        out__.write(m28);
        out__.write(m29);
        out__.write(m3);
        out__.write(m30);
        out__.write(m4);
        out__.write(m5);
        out__.write(m6);
        out__.write(m7);
        out__.write(m8);
        out__.write(m9);
      } 
      if (logical_negation(emit_generated_quantities__)) {
        return ;
      } 
      int z1;
      z1 = std::numeric_limits<int>::min();
      
      int z10;
      z10 = std::numeric_limits<int>::min();
      
      int z11;
      z11 = std::numeric_limits<int>::min();
      
      int z12;
      z12 = std::numeric_limits<int>::min();
      
      int z13;
      z13 = std::numeric_limits<int>::min();
      
      int z14;
      z14 = std::numeric_limits<int>::min();
      
      int z15;
      z15 = std::numeric_limits<int>::min();
      
      int z16;
      z16 = std::numeric_limits<int>::min();
      
      int z17;
      z17 = std::numeric_limits<int>::min();
      
      int z18;
      z18 = std::numeric_limits<int>::min();
      
      int z19;
      z19 = std::numeric_limits<int>::min();
      
      int z2;
      z2 = std::numeric_limits<int>::min();
      
      int z20;
      z20 = std::numeric_limits<int>::min();
      
      int z21;
      z21 = std::numeric_limits<int>::min();
      
      int z22;
      z22 = std::numeric_limits<int>::min();
      
      int z23;
      z23 = std::numeric_limits<int>::min();
      
      int z24;
      z24 = std::numeric_limits<int>::min();
      
      int z25;
      z25 = std::numeric_limits<int>::min();
      
      int z26;
      z26 = std::numeric_limits<int>::min();
      
      int z27;
      z27 = std::numeric_limits<int>::min();
      
      int z28;
      z28 = std::numeric_limits<int>::min();
      
      int z29;
      z29 = std::numeric_limits<int>::min();
      
      int z3;
      z3 = std::numeric_limits<int>::min();
      
      int z30;
      z30 = std::numeric_limits<int>::min();
      
      int z4;
      z4 = std::numeric_limits<int>::min();
      
      int z5;
      z5 = std::numeric_limits<int>::min();
      
      int z6;
      z6 = std::numeric_limits<int>::min();
      
      int z7;
      z7 = std::numeric_limits<int>::min();
      
      int z8;
      z8 = std::numeric_limits<int>::min();
      
      int z9;
      z9 = std::numeric_limits<int>::min();
      
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1209;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1212;
        for (int z30_val = 1; z30_val <= 2; ++z30_val) {
          current_statement__ = 1210;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z30_val)) +
              rvalue(m29, "m29", index_uni((((z30_val - 1) * 1) + 1)))),
            "assigning variable acc0", index_uni(z30_val));
        }
        current_statement__ = 1213;
        z30 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1216;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1219;
        for (int z29_val = 1; z29_val <= 2; ++z29_val) {
          current_statement__ = 1217;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z29_val)) +
              rvalue(m28, "m28",
                index_uni(((((z29_val - 1) * 2) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z29_val));
        }
        current_statement__ = 1220;
        z29 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1223;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1226;
        for (int z28_val = 1; z28_val <= 2; ++z28_val) {
          current_statement__ = 1224;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z28_val)) +
              rvalue(m27, "m27",
                index_uni((((((z28_val - 1) * 4) + ((z29 - 1) * 2)) +
                             ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z28_val));
        }
        current_statement__ = 1227;
        z28 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1230;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1233;
        for (int z27_val = 1; z27_val <= 2; ++z27_val) {
          current_statement__ = 1231;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z27_val)) +
              rvalue(m26, "m26",
                index_uni(((((((z27_val - 1) * 8) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z27_val));
        }
        current_statement__ = 1234;
        z27 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1237;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1240;
        for (int z26_val = 1; z26_val <= 2; ++z26_val) {
          current_statement__ = 1238;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z26_val)) +
              rvalue(m25, "m25",
                index_uni((((((((z26_val - 1) * 16) + ((z27 - 1) * 8)) +
                               ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                             ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z26_val));
        }
        current_statement__ = 1241;
        z26 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1244;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1247;
        for (int z25_val = 1; z25_val <= 2; ++z25_val) {
          current_statement__ = 1245;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z25_val)) +
              rvalue(m24, "m24",
                index_uni(((((((((z25_val - 1) * 32) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z25_val));
        }
        current_statement__ = 1248;
        z25 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1251;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1254;
        for (int z24_val = 1; z24_val <= 2; ++z24_val) {
          current_statement__ = 1252;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z24_val)) +
              rvalue(m23, "m23",
                index_uni((((((((((z24_val - 1) * 64) + ((z25 - 1) * 32)) +
                                 ((z26 - 1) * 16)) + ((z27 - 1) * 8)) +
                               ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                             ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z24_val));
        }
        current_statement__ = 1255;
        z24 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1258;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1261;
        for (int z23_val = 1; z23_val <= 2; ++z23_val) {
          current_statement__ = 1259;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z23_val)) +
              rvalue(m22, "m22",
                index_uni(((((((((((z23_val - 1) * 128) + ((z24 - 1) * 64)) +
                                  ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z23_val));
        }
        current_statement__ = 1262;
        z23 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1265;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1268;
        for (int z22_val = 1; z22_val <= 2; ++z22_val) {
          current_statement__ = 1266;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z22_val)) +
              rvalue(m21, "m21",
                index_uni((((((((((((z22_val - 1) * 256) + ((z23 - 1) * 128))
                                   + ((z24 - 1) * 64)) + ((z25 - 1) * 32)) +
                                 ((z26 - 1) * 16)) + ((z27 - 1) * 8)) +
                               ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                             ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z22_val));
        }
        current_statement__ = 1269;
        z22 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1272;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1275;
        for (int z21_val = 1; z21_val <= 2; ++z21_val) {
          current_statement__ = 1273;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z21_val)) +
              rvalue(m20, "m20",
                index_uni(((((((((((((z21_val - 1) * 512) +
                                     ((z22 - 1) * 256)) + ((z23 - 1) * 128))
                                   + ((z24 - 1) * 64)) + ((z25 - 1) * 32)) +
                                 ((z26 - 1) * 16)) + ((z27 - 1) * 8)) +
                               ((z28 - 1) * 4)) + ((z29 - 1) * 2)) +
                             ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z21_val));
        }
        current_statement__ = 1276;
        z21 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1279;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1282;
        for (int z20_val = 1; z20_val <= 2; ++z20_val) {
          current_statement__ = 1280;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z20_val)) +
              rvalue(m19, "m19",
                index_uni((((((((((((((z20_val - 1) * 1024) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z20_val));
        }
        current_statement__ = 1283;
        z20 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1286;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1289;
        for (int z19_val = 1; z19_val <= 2; ++z19_val) {
          current_statement__ = 1287;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z19_val)) +
              rvalue(m18, "m18",
                index_uni(((((((((((((((z19_val - 1) * 2048) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z19_val));
        }
        current_statement__ = 1290;
        z19 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1293;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1296;
        for (int z18_val = 1; z18_val <= 2; ++z18_val) {
          current_statement__ = 1294;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z18_val)) +
              rvalue(m17, "m17",
                index_uni((((((((((((((((z18_val - 1) * 4096) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z18_val));
        }
        current_statement__ = 1297;
        z18 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1300;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1303;
        for (int z17_val = 1; z17_val <= 2; ++z17_val) {
          current_statement__ = 1301;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z17_val)) +
              rvalue(m16, "m16",
                index_uni(((((((((((((((((z17_val - 1) * 8192) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z17_val));
        }
        current_statement__ = 1304;
        z17 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1307;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1310;
        for (int z16_val = 1; z16_val <= 2; ++z16_val) {
          current_statement__ = 1308;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z16_val)) +
              rvalue(m15, "m15",
                index_uni((((((((((((((((((z16_val - 1) * 16384) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z16_val));
        }
        current_statement__ = 1311;
        z16 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1314;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1317;
        for (int z15_val = 1; z15_val <= 2; ++z15_val) {
          current_statement__ = 1315;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z15_val)) +
              rvalue(m14, "m14",
                index_uni(((((((((((((((((((z15_val - 1) * 32768) +
                                           ((z16 - 1) * 16384)) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z15_val));
        }
        current_statement__ = 1318;
        z15 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1321;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1324;
        for (int z14_val = 1; z14_val <= 2; ++z14_val) {
          current_statement__ = 1322;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z14_val)) +
              rvalue(m13, "m13",
                index_uni((((((((((((((((((((z14_val - 1) * 65536) +
                                            ((z15 - 1) * 32768)) +
                                           ((z16 - 1) * 16384)) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z14_val));
        }
        current_statement__ = 1325;
        z14 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1328;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1331;
        for (int z13_val = 1; z13_val <= 2; ++z13_val) {
          current_statement__ = 1329;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z13_val)) +
              rvalue(m12, "m12",
                index_uni(((((((((((((((((((((z13_val - 1) * 131072) +
                                             ((z14 - 1) * 65536)) +
                                            ((z15 - 1) * 32768)) +
                                           ((z16 - 1) * 16384)) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z13_val));
        }
        current_statement__ = 1332;
        z13 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1335;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1338;
        for (int z12_val = 1; z12_val <= 2; ++z12_val) {
          current_statement__ = 1336;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z12_val)) +
              rvalue(m11, "m11",
                index_uni((((((((((((((((((((((z12_val - 1) * 262144) +
                                              ((z13 - 1) * 131072)) +
                                             ((z14 - 1) * 65536)) +
                                            ((z15 - 1) * 32768)) +
                                           ((z16 - 1) * 16384)) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z12_val));
        }
        current_statement__ = 1339;
        z12 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1342;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1345;
        for (int z11_val = 1; z11_val <= 2; ++z11_val) {
          current_statement__ = 1343;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z11_val)) +
              rvalue(m10, "m10",
                index_uni(((((((((((((((((((((((z11_val - 1) * 524288) +
                                               ((z12 - 1) * 262144)) +
                                              ((z13 - 1) * 131072)) +
                                             ((z14 - 1) * 65536)) +
                                            ((z15 - 1) * 32768)) +
                                           ((z16 - 1) * 16384)) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z11_val));
        }
        current_statement__ = 1346;
        z11 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1349;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1352;
        for (int z10_val = 1; z10_val <= 2; ++z10_val) {
          current_statement__ = 1350;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z10_val)) +
              rvalue(m9, "m9",
                index_uni((((((((((((((((((((((((z10_val - 1) * 1048576) +
                                                ((z11 - 1) * 524288)) +
                                               ((z12 - 1) * 262144)) +
                                              ((z13 - 1) * 131072)) +
                                             ((z14 - 1) * 65536)) +
                                            ((z15 - 1) * 32768)) +
                                           ((z16 - 1) * 16384)) +
                                          ((z17 - 1) * 8192)) +
                                         ((z18 - 1) * 4096)) +
                                        ((z19 - 1) * 2048)) +
                                       ((z20 - 1) * 1024)) +
                                      ((z21 - 1) * 512)) + ((z22 - 1) * 256))
                                    + ((z23 - 1) * 128)) + ((z24 - 1) * 64))
                                  + ((z25 - 1) * 32)) + ((z26 - 1) * 16)) +
                                ((z27 - 1) * 8)) + ((z28 - 1) * 4)) +
                              ((z29 - 1) * 2)) + ((z30 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z10_val));
        }
        current_statement__ = 1353;
        z10 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1356;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1359;
        for (int z9_val = 1; z9_val <= 2; ++z9_val) {
          current_statement__ = 1357;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z9_val)) +
              rvalue(m8, "m8",
                index_uni(((((((((((((((((((((((((z10 - 1) * 2097152) +
                                                 ((z11 - 1) * 1048576)) +
                                                ((z12 - 1) * 524288)) +
                                               ((z13 - 1) * 262144)) +
                                              ((z14 - 1) * 131072)) +
                                             ((z15 - 1) * 65536)) +
                                            ((z16 - 1) * 32768)) +
                                           ((z17 - 1) * 16384)) +
                                          ((z18 - 1) * 8192)) +
                                         ((z19 - 1) * 4096)) +
                                        ((z20 - 1) * 2048)) +
                                       ((z21 - 1) * 1024)) +
                                      ((z22 - 1) * 512)) + ((z23 - 1) * 256))
                                    + ((z24 - 1) * 128)) + ((z25 - 1) * 64))
                                  + ((z26 - 1) * 32)) + ((z27 - 1) * 16)) +
                                ((z28 - 1) * 8)) + ((z29 - 1) * 4)) +
                              ((z30 - 1) * 2)) + ((z9_val - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z9_val));
        }
        current_statement__ = 1360;
        z9 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1363;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1366;
        for (int z8_val = 1; z8_val <= 2; ++z8_val) {
          current_statement__ = 1364;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z8_val)) +
              rvalue(m7, "m7",
                index_uni((((((((((((((((((((((((((z10 - 1) * 4194304) +
                                                  ((z11 - 1) * 2097152)) +
                                                 ((z12 - 1) * 1048576)) +
                                                ((z13 - 1) * 524288)) +
                                               ((z14 - 1) * 262144)) +
                                              ((z15 - 1) * 131072)) +
                                             ((z16 - 1) * 65536)) +
                                            ((z17 - 1) * 32768)) +
                                           ((z18 - 1) * 16384)) +
                                          ((z19 - 1) * 8192)) +
                                         ((z20 - 1) * 4096)) +
                                        ((z21 - 1) * 2048)) +
                                       ((z22 - 1) * 1024)) +
                                      ((z23 - 1) * 512)) + ((z24 - 1) * 256))
                                    + ((z25 - 1) * 128)) + ((z26 - 1) * 64))
                                  + ((z27 - 1) * 32)) + ((z28 - 1) * 16)) +
                                ((z29 - 1) * 8)) + ((z30 - 1) * 4)) +
                              ((z8_val - 1) * 2)) + ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z8_val));
        }
        current_statement__ = 1367;
        z8 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1370;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1373;
        for (int z7_val = 1; z7_val <= 2; ++z7_val) {
          current_statement__ = 1371;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z7_val)) +
              rvalue(m6, "m6",
                index_uni(((((((((((((((((((((((((((z10 - 1) * 8388608) +
                                                   ((z11 - 1) * 4194304)) +
                                                  ((z12 - 1) * 2097152)) +
                                                 ((z13 - 1) * 1048576)) +
                                                ((z14 - 1) * 524288)) +
                                               ((z15 - 1) * 262144)) +
                                              ((z16 - 1) * 131072)) +
                                             ((z17 - 1) * 65536)) +
                                            ((z18 - 1) * 32768)) +
                                           ((z19 - 1) * 16384)) +
                                          ((z20 - 1) * 8192)) +
                                         ((z21 - 1) * 4096)) +
                                        ((z22 - 1) * 2048)) +
                                       ((z23 - 1) * 1024)) +
                                      ((z24 - 1) * 512)) + ((z25 - 1) * 256))
                                    + ((z26 - 1) * 128)) + ((z27 - 1) * 64))
                                  + ((z28 - 1) * 32)) + ((z29 - 1) * 16)) +
                                ((z30 - 1) * 8)) + ((z7_val - 1) * 4)) +
                              ((z8 - 1) * 2)) + ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z7_val));
        }
        current_statement__ = 1374;
        z7 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1377;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1380;
        for (int z6_val = 1; z6_val <= 2; ++z6_val) {
          current_statement__ = 1378;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z6_val)) +
              rvalue(m5, "m5",
                index_uni((((((((((((((((((((((((((((z10 - 1) * 16777216) +
                                                    ((z11 - 1) * 8388608)) +
                                                   ((z12 - 1) * 4194304)) +
                                                  ((z13 - 1) * 2097152)) +
                                                 ((z14 - 1) * 1048576)) +
                                                ((z15 - 1) * 524288)) +
                                               ((z16 - 1) * 262144)) +
                                              ((z17 - 1) * 131072)) +
                                             ((z18 - 1) * 65536)) +
                                            ((z19 - 1) * 32768)) +
                                           ((z20 - 1) * 16384)) +
                                          ((z21 - 1) * 8192)) +
                                         ((z22 - 1) * 4096)) +
                                        ((z23 - 1) * 2048)) +
                                       ((z24 - 1) * 1024)) +
                                      ((z25 - 1) * 512)) + ((z26 - 1) * 256))
                                    + ((z27 - 1) * 128)) + ((z28 - 1) * 64))
                                  + ((z29 - 1) * 32)) + ((z30 - 1) * 16)) +
                                ((z6_val - 1) * 8)) + ((z7 - 1) * 4)) +
                              ((z8 - 1) * 2)) + ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z6_val));
        }
        current_statement__ = 1381;
        z6 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1384;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1387;
        for (int z5_val = 1; z5_val <= 2; ++z5_val) {
          current_statement__ = 1385;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z5_val)) +
              rvalue(m4, "m4",
                index_uni(((((((((((((((((((((((((((((z10 - 1) * 33554432) +
                                                     ((z11 - 1) * 16777216))
                                                    + ((z12 - 1) * 8388608))
                                                   + ((z13 - 1) * 4194304)) +
                                                  ((z14 - 1) * 2097152)) +
                                                 ((z15 - 1) * 1048576)) +
                                                ((z16 - 1) * 524288)) +
                                               ((z17 - 1) * 262144)) +
                                              ((z18 - 1) * 131072)) +
                                             ((z19 - 1) * 65536)) +
                                            ((z20 - 1) * 32768)) +
                                           ((z21 - 1) * 16384)) +
                                          ((z22 - 1) * 8192)) +
                                         ((z23 - 1) * 4096)) +
                                        ((z24 - 1) * 2048)) +
                                       ((z25 - 1) * 1024)) +
                                      ((z26 - 1) * 512)) + ((z27 - 1) * 256))
                                    + ((z28 - 1) * 128)) + ((z29 - 1) * 64))
                                  + ((z30 - 1) * 32)) + ((z5_val - 1) * 16))
                                + ((z6 - 1) * 8)) + ((z7 - 1) * 4)) +
                              ((z8 - 1) * 2)) + ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z5_val));
        }
        current_statement__ = 1388;
        z5 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1391;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1394;
        for (int z4_val = 1; z4_val <= 2; ++z4_val) {
          current_statement__ = 1392;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z4_val)) +
              rvalue(m3, "m3",
                index_uni((((((((((((((((((((((((((((((z10 - 1) * 67108864) +
                                                      ((z11 - 1) * 33554432))
                                                     +
                                                     ((z12 - 1) * 16777216))
                                                    + ((z13 - 1) * 8388608))
                                                   + ((z14 - 1) * 4194304)) +
                                                  ((z15 - 1) * 2097152)) +
                                                 ((z16 - 1) * 1048576)) +
                                                ((z17 - 1) * 524288)) +
                                               ((z18 - 1) * 262144)) +
                                              ((z19 - 1) * 131072)) +
                                             ((z20 - 1) * 65536)) +
                                            ((z21 - 1) * 32768)) +
                                           ((z22 - 1) * 16384)) +
                                          ((z23 - 1) * 8192)) +
                                         ((z24 - 1) * 4096)) +
                                        ((z25 - 1) * 2048)) +
                                       ((z26 - 1) * 1024)) +
                                      ((z27 - 1) * 512)) + ((z28 - 1) * 256))
                                    + ((z29 - 1) * 128)) + ((z30 - 1) * 64))
                                  + ((z4_val - 1) * 32)) + ((z5 - 1) * 16)) +
                                ((z6 - 1) * 8)) + ((z7 - 1) * 4)) +
                              ((z8 - 1) * 2)) + ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z4_val));
        }
        current_statement__ = 1395;
        z4 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1398;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1401;
        for (int z3_val = 1; z3_val <= 2; ++z3_val) {
          current_statement__ = 1399;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z3_val)) +
              rvalue(m2, "m2",
                index_uni(((((((((((((((((((((((((((((((z10 - 1) * 134217728)
                                                       +
                                                       ((z11 - 1) * 67108864))
                                                      +
                                                      ((z12 - 1) * 33554432))
                                                     +
                                                     ((z13 - 1) * 16777216))
                                                    + ((z14 - 1) * 8388608))
                                                   + ((z15 - 1) * 4194304)) +
                                                  ((z16 - 1) * 2097152)) +
                                                 ((z17 - 1) * 1048576)) +
                                                ((z18 - 1) * 524288)) +
                                               ((z19 - 1) * 262144)) +
                                              ((z20 - 1) * 131072)) +
                                             ((z21 - 1) * 65536)) +
                                            ((z22 - 1) * 32768)) +
                                           ((z23 - 1) * 16384)) +
                                          ((z24 - 1) * 8192)) +
                                         ((z25 - 1) * 4096)) +
                                        ((z26 - 1) * 2048)) +
                                       ((z27 - 1) * 1024)) +
                                      ((z28 - 1) * 512)) + ((z29 - 1) * 256))
                                    + ((z3_val - 1) * 128)) +
                                   ((z30 - 1) * 64)) + ((z4 - 1) * 32)) +
                                 ((z5 - 1) * 16)) + ((z6 - 1) * 8)) +
                               ((z7 - 1) * 4)) + ((z8 - 1) * 2)) +
                             ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z3_val));
        }
        current_statement__ = 1402;
        z3 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1405;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1408;
        for (int z2_val = 1; z2_val <= 2; ++z2_val) {
          current_statement__ = 1406;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z2_val)) +
              rvalue(m1, "m1",
                index_uni((((((((((((((((((((((((((((((((z10 - 1) *
                                                         268435456) +
                                                        ((z11 - 1) *
                                                          134217728)) +
                                                       ((z12 - 1) * 67108864))
                                                      +
                                                      ((z13 - 1) * 33554432))
                                                     +
                                                     ((z14 - 1) * 16777216))
                                                    + ((z15 - 1) * 8388608))
                                                   + ((z16 - 1) * 4194304)) +
                                                  ((z17 - 1) * 2097152)) +
                                                 ((z18 - 1) * 1048576)) +
                                                ((z19 - 1) * 524288)) +
                                               ((z2_val - 1) * 262144)) +
                                              ((z20 - 1) * 131072)) +
                                             ((z21 - 1) * 65536)) +
                                            ((z22 - 1) * 32768)) +
                                           ((z23 - 1) * 16384)) +
                                          ((z24 - 1) * 8192)) +
                                         ((z25 - 1) * 4096)) +
                                        ((z26 - 1) * 2048)) +
                                       ((z27 - 1) * 1024)) +
                                      ((z28 - 1) * 512)) + ((z29 - 1) * 256))
                                    + ((z3 - 1) * 128)) + ((z30 - 1) * 64)) +
                                  ((z4 - 1) * 32)) + ((z5 - 1) * 16)) +
                                ((z6 - 1) * 8)) + ((z7 - 1) * 4)) +
                              ((z8 - 1) * 2)) + ((z9 - 1) * 1)) + 1)))),
            "assigning variable acc0", index_uni(z2_val));
        }
        current_statement__ = 1409;
        z2 = categorical_logit_rng(acc0, base_rng__);
      }
      {
        Eigen::Matrix<double, -1, 1> acc0;
        acc0 = Eigen::Matrix<double, -1, 1>(2);
        stan::math::fill(acc0, std::numeric_limits<double>::quiet_NaN());
        
        current_statement__ = 1412;
        assign(acc0, rep_vector(0, 2), "assigning variable acc0");
        current_statement__ = 1451;
        for (int z1_val = 1; z1_val <= 2; ++z1_val) {
          current_statement__ = 1413;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z1_val - 1), prior)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1414;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z2 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1415;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z3 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1416;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z4 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1417;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z5 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1418;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z6 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1419;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z7 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1420;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z8 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1421;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z9 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1422;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z10 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1423;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z11 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1424;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z12 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1425;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z13 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1426;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z14 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1427;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z15 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1428;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z16 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1429;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z17 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1430;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z18 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1431;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z19 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1432;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z20 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1433;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z21 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1434;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z22 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1435;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z23 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1436;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z24 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1437;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z25 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1438;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z26 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1439;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z27 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1440;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z28 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1441;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z29 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1442;
          assign(acc0,
            (rvalue(acc0, "acc0", index_uni(z1_val)) +
              bernoulli_lpmf<false>((z30 - 1), 0.5)),
            "assigning variable acc0", index_uni(z1_val));
          current_statement__ = 1449;
          if (logical_gt(
                ((((((((((((((((((((((((((((((z1_val + z2) + z3) + z4) + z5)
                                           + z6) + z7) + z8) + z9) + z10) +
                                      z11) + z12) + z13) + z14) + z15) + z16)
                                + z17) + z18) + z19) + z20) + z21) + z22) +
                          z23) + z24) + z25) + z26) + z27) + z28) + z29) +
                   z30) - 30), 0)) {
            current_statement__ = 1446;
            assign(acc0,
              (rvalue(acc0, "acc0", index_uni(z1_val)) +
                normal_lpdf<false>(d1, 1, 1)),
              "assigning variable acc0", index_uni(z1_val));
            current_statement__ = 1447;
            assign(acc0,
              (rvalue(acc0, "acc0", index_uni(z1_val)) +
                normal_lpdf<false>(d2, 1, 1)),
              "assigning variable acc0", index_uni(z1_val));
          } else {
            current_statement__ = 1443;
            assign(acc0,
              (rvalue(acc0, "acc0", index_uni(z1_val)) +
                normal_lpdf<false>(d1, -1, 1)),
              "assigning variable acc0", index_uni(z1_val));
            current_statement__ = 1444;
            assign(acc0,
              (rvalue(acc0, "acc0", index_uni(z1_val)) +
                normal_lpdf<false>(d2, -1, 1)),
              "assigning variable acc0", index_uni(z1_val));
          }
        }
        current_statement__ = 1452;
        z1 = categorical_logit_rng(acc0, base_rng__);
      }
      out__.write(z1);
      out__.write(z10);
      out__.write(z11);
      out__.write(z12);
      out__.write(z13);
      out__.write(z14);
      out__.write(z15);
      out__.write(z16);
      out__.write(z17);
      out__.write(z18);
      out__.write(z19);
      out__.write(z2);
      out__.write(z20);
      out__.write(z21);
      out__.write(z22);
      out__.write(z23);
      out__.write(z24);
      out__.write(z25);
      out__.write(z26);
      out__.write(z27);
      out__.write(z28);
      out__.write(z29);
      out__.write(z3);
      out__.write(z30);
      out__.write(z4);
      out__.write(z5);
      out__.write(z6);
      out__.write(z7);
      out__.write(z8);
      out__.write(z9);
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    } // write_array_impl() 
    
  template <typename VecVar, typename VecI, 
  stan::require_std_vector_t<VecVar>* = nullptr, 
  stan::require_vector_like_vt<std::is_integral, VecI>* = nullptr> 
  inline void transform_inits_impl(VecVar& params_r__, VecI& params_i__,
                                   VecVar& vars__,
                                   std::ostream* pstream__ = nullptr) const {
    using local_scalar_t__ = double;
    stan::io::deserializer<local_scalar_t__> in__(params_r__, params_i__);
    stan::io::serializer<local_scalar_t__> out__(vars__);
    int current_statement__ = 0;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    
    try {
      int pos__;
      pos__ = std::numeric_limits<int>::min();
      
      pos__ = 1;
      local_scalar_t__ prior;
      prior = DUMMY_VAR__;
      
      prior = in__.read<local_scalar_t__>();
      out__.write_free_lub(0, 1, prior);
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    } // transform_inits_impl() 
    
  inline void get_param_names(std::vector<std::string>& names__) const {
    
    names__ = std::vector<std::string>{"prior", "m1", "m10", "m11", "m12",
      "m13", "m14", "m15", "m16", "m17", "m18", "m19", "m2", "m20", "m21",
      "m22", "m23", "m24", "m25", "m26", "m27", "m28", "m29", "m3", "m30",
      "m4", "m5", "m6", "m7", "m8", "m9", "z1", "z10", "z11", "z12", "z13",
      "z14", "z15", "z16", "z17", "z18", "z19", "z2", "z20", "z21", "z22",
      "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z3", "z30", "z4",
      "z5", "z6", "z7", "z8", "z9"};
    
    } // get_param_names() 
    
  inline void get_dims(std::vector<std::vector<size_t>>& dimss__) const {
    
    dimss__ = std::vector<std::vector<size_t>>{std::vector<size_t>{},
      std::vector<size_t>{static_cast<size_t>(536870912)},
      std::vector<size_t>{static_cast<size_t>(1048576)},
      std::vector<size_t>{static_cast<size_t>(524288)},
      std::vector<size_t>{static_cast<size_t>(262144)},
      std::vector<size_t>{static_cast<size_t>(131072)},
      std::vector<size_t>{static_cast<size_t>(65536)},
      std::vector<size_t>{static_cast<size_t>(32768)},
      std::vector<size_t>{static_cast<size_t>(16384)},
      std::vector<size_t>{static_cast<size_t>(8192)},
      std::vector<size_t>{static_cast<size_t>(4096)},
      std::vector<size_t>{static_cast<size_t>(2048)},
      std::vector<size_t>{static_cast<size_t>(268435456)},
      std::vector<size_t>{static_cast<size_t>(1024)},
      std::vector<size_t>{static_cast<size_t>(512)},
      std::vector<size_t>{static_cast<size_t>(256)},
      std::vector<size_t>{static_cast<size_t>(128)},
      std::vector<size_t>{static_cast<size_t>(64)},
      std::vector<size_t>{static_cast<size_t>(32)},
      std::vector<size_t>{static_cast<size_t>(16)},
      std::vector<size_t>{static_cast<size_t>(8)},
      std::vector<size_t>{static_cast<size_t>(4)},
      std::vector<size_t>{static_cast<size_t>(2)},
      std::vector<size_t>{static_cast<size_t>(134217728)},
      std::vector<size_t>{},
      std::vector<size_t>{static_cast<size_t>(67108864)},
      std::vector<size_t>{static_cast<size_t>(33554432)},
      std::vector<size_t>{static_cast<size_t>(16777216)},
      std::vector<size_t>{static_cast<size_t>(8388608)},
      std::vector<size_t>{static_cast<size_t>(4194304)},
      std::vector<size_t>{static_cast<size_t>(2097152)},
      std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{},
      std::vector<size_t>{}};
    
    } // get_dims() 
    
  inline void constrained_param_names(
                                      std::vector<std::string>& param_names__,
                                      bool emit_transformed_parameters__ = true,
                                      bool emit_generated_quantities__ = true) const
    final {
    
    param_names__.emplace_back(std::string() + "prior");
    if (emit_transformed_parameters__) {
      for (int sym1__ = 1; sym1__ <= 536870912; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m1" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 1048576; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m10" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 524288; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m11" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 262144; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m12" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 131072; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m13" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 65536; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m14" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 32768; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m15" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 16384; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m16" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 8192; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m17" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 4096; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m18" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 2048; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m19" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 268435456; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m2" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 1024; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m20" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 512; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m21" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 256; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m22" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 128; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m23" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 64; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m24" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 32; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m25" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 16; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m26" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 8; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m27" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 4; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m28" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 2; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m29" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 134217728; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m3" + '.' + std::to_string(sym1__));
        } 
      }
      param_names__.emplace_back(std::string() + "m30");
      for (int sym1__ = 1; sym1__ <= 67108864; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m4" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 33554432; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m5" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 16777216; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m6" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 8388608; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m7" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 4194304; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m8" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 2097152; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m9" + '.' + std::to_string(sym1__));
        } 
      }
    }
    
    if (emit_generated_quantities__) {
      param_names__.emplace_back(std::string() + "z1");
      param_names__.emplace_back(std::string() + "z10");
      param_names__.emplace_back(std::string() + "z11");
      param_names__.emplace_back(std::string() + "z12");
      param_names__.emplace_back(std::string() + "z13");
      param_names__.emplace_back(std::string() + "z14");
      param_names__.emplace_back(std::string() + "z15");
      param_names__.emplace_back(std::string() + "z16");
      param_names__.emplace_back(std::string() + "z17");
      param_names__.emplace_back(std::string() + "z18");
      param_names__.emplace_back(std::string() + "z19");
      param_names__.emplace_back(std::string() + "z2");
      param_names__.emplace_back(std::string() + "z20");
      param_names__.emplace_back(std::string() + "z21");
      param_names__.emplace_back(std::string() + "z22");
      param_names__.emplace_back(std::string() + "z23");
      param_names__.emplace_back(std::string() + "z24");
      param_names__.emplace_back(std::string() + "z25");
      param_names__.emplace_back(std::string() + "z26");
      param_names__.emplace_back(std::string() + "z27");
      param_names__.emplace_back(std::string() + "z28");
      param_names__.emplace_back(std::string() + "z29");
      param_names__.emplace_back(std::string() + "z3");
      param_names__.emplace_back(std::string() + "z30");
      param_names__.emplace_back(std::string() + "z4");
      param_names__.emplace_back(std::string() + "z5");
      param_names__.emplace_back(std::string() + "z6");
      param_names__.emplace_back(std::string() + "z7");
      param_names__.emplace_back(std::string() + "z8");
      param_names__.emplace_back(std::string() + "z9");
    }
    
    } // constrained_param_names() 
    
  inline void unconstrained_param_names(
                                        std::vector<std::string>& param_names__,
                                        bool emit_transformed_parameters__ = true,
                                        bool emit_generated_quantities__ = true) const
    final {
    
    param_names__.emplace_back(std::string() + "prior");
    if (emit_transformed_parameters__) {
      for (int sym1__ = 1; sym1__ <= 536870912; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m1" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 1048576; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m10" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 524288; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m11" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 262144; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m12" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 131072; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m13" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 65536; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m14" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 32768; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m15" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 16384; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m16" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 8192; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m17" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 4096; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m18" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 2048; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m19" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 268435456; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m2" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 1024; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m20" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 512; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m21" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 256; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m22" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 128; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m23" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 64; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m24" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 32; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m25" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 16; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m26" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 8; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m27" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 4; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m28" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 2; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m29" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 134217728; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m3" + '.' + std::to_string(sym1__));
        } 
      }
      param_names__.emplace_back(std::string() + "m30");
      for (int sym1__ = 1; sym1__ <= 67108864; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m4" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 33554432; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m5" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 16777216; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m6" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 8388608; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m7" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 4194304; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m8" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 2097152; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "m9" + '.' + std::to_string(sym1__));
        } 
      }
    }
    
    if (emit_generated_quantities__) {
      param_names__.emplace_back(std::string() + "z1");
      param_names__.emplace_back(std::string() + "z10");
      param_names__.emplace_back(std::string() + "z11");
      param_names__.emplace_back(std::string() + "z12");
      param_names__.emplace_back(std::string() + "z13");
      param_names__.emplace_back(std::string() + "z14");
      param_names__.emplace_back(std::string() + "z15");
      param_names__.emplace_back(std::string() + "z16");
      param_names__.emplace_back(std::string() + "z17");
      param_names__.emplace_back(std::string() + "z18");
      param_names__.emplace_back(std::string() + "z19");
      param_names__.emplace_back(std::string() + "z2");
      param_names__.emplace_back(std::string() + "z20");
      param_names__.emplace_back(std::string() + "z21");
      param_names__.emplace_back(std::string() + "z22");
      param_names__.emplace_back(std::string() + "z23");
      param_names__.emplace_back(std::string() + "z24");
      param_names__.emplace_back(std::string() + "z25");
      param_names__.emplace_back(std::string() + "z26");
      param_names__.emplace_back(std::string() + "z27");
      param_names__.emplace_back(std::string() + "z28");
      param_names__.emplace_back(std::string() + "z29");
      param_names__.emplace_back(std::string() + "z3");
      param_names__.emplace_back(std::string() + "z30");
      param_names__.emplace_back(std::string() + "z4");
      param_names__.emplace_back(std::string() + "z5");
      param_names__.emplace_back(std::string() + "z6");
      param_names__.emplace_back(std::string() + "z7");
      param_names__.emplace_back(std::string() + "z8");
      param_names__.emplace_back(std::string() + "z9");
    }
    
    } // unconstrained_param_names() 
    
  inline std::string get_constrained_sizedtypes() const {
    
    return std::string("[{\"name\":\"prior\",\"type\":{\"name\":\"real\"},\"block\":\"parameters\"},{\"name\":\"m1\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(536870912) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m10\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(1048576) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m11\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(524288) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m12\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(262144) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m13\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(131072) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m14\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(65536) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m15\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(32768) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m16\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(16384) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m17\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(8192) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m18\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(4096) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m19\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(2048) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m2\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(268435456) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m20\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(1024) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m21\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(512) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m22\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(256) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m23\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(128) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m24\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(64) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m25\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(32) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m26\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(16) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m27\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(8) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m28\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(4) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m29\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(2) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m3\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(134217728) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m30\",\"type\":{\"name\":\"real\"},\"block\":\"transformed_parameters\"},{\"name\":\"m4\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(67108864) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m5\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(33554432) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m6\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(16777216) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m7\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(8388608) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m8\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(4194304) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m9\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(2097152) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"z1\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z10\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z11\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z12\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z13\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z14\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z15\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z16\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z17\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z18\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z19\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z2\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z20\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z21\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z22\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z23\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z24\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z25\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z26\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z27\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z28\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z29\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z3\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z30\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z4\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z5\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z6\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z7\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z8\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z9\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"}]");
    
    } // get_constrained_sizedtypes() 
    
  inline std::string get_unconstrained_sizedtypes() const {
    
    return std::string("[{\"name\":\"prior\",\"type\":{\"name\":\"real\"},\"block\":\"parameters\"},{\"name\":\"m1\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(536870912) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m10\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(1048576) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m11\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(524288) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m12\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(262144) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m13\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(131072) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m14\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(65536) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m15\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(32768) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m16\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(16384) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m17\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(8192) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m18\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(4096) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m19\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(2048) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m2\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(268435456) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m20\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(1024) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m21\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(512) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m22\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(256) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m23\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(128) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m24\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(64) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m25\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(32) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m26\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(16) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m27\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(8) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m28\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(4) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m29\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(2) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m3\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(134217728) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m30\",\"type\":{\"name\":\"real\"},\"block\":\"transformed_parameters\"},{\"name\":\"m4\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(67108864) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m5\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(33554432) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m6\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(16777216) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m7\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(8388608) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m8\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(4194304) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"m9\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(2097152) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"transformed_parameters\"},{\"name\":\"z1\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z10\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z11\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z12\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z13\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z14\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z15\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z16\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z17\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z18\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z19\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z2\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z20\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z21\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z22\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z23\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z24\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z25\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z26\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z27\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z28\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z29\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z3\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z30\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z4\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z5\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z6\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z7\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z8\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"},{\"name\":\"z9\",\"type\":{\"name\":\"int\"},\"block\":\"generated_quantities\"}]");
    
    } // get_unconstrained_sizedtypes() 
    
  
    // Begin method overload boilerplate
    template <typename RNG>
    inline void write_array(RNG& base_rng,
                            Eigen::Matrix<double,Eigen::Dynamic,1>& params_r,
                            Eigen::Matrix<double,Eigen::Dynamic,1>& vars,
                            const bool emit_transformed_parameters = true,
                            const bool emit_generated_quantities = true,
                            std::ostream* pstream = nullptr) const {
      const size_t num_params__ = 1;
      const size_t num_transformed = 
  (((((((((((((((((((((((((((((536870912 + 1048576) + 524288) + 262144) +
                             131072) + 65536) + 32768) + 16384) + 8192) +
                        4096) + 2048) + 268435456) + 1024) + 512) + 256) +
                  128) + 64) + 32) + 16) + 8) + 4) + 2) + 134217728) + 1) +
         67108864) + 33554432) + 16777216) + 8388608) + 4194304) + 2097152);
      const size_t num_gen_quantities = 
  (((((((((((((((((((((((((((((1 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1)
                       + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1)
            + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1);
      std::vector<double> vars_vec(num_params__
       + (emit_transformed_parameters * num_transformed)
       + (emit_generated_quantities * num_gen_quantities));
      std::vector<int> params_i;
      write_array_impl(base_rng, params_r, params_i, vars_vec,
          emit_transformed_parameters, emit_generated_quantities, pstream);
      vars = Eigen::Map<Eigen::Matrix<double,Eigen::Dynamic,1>>(
        vars_vec.data(), vars_vec.size());
    }

    template <typename RNG>
    inline void write_array(RNG& base_rng, std::vector<double>& params_r,
                            std::vector<int>& params_i,
                            std::vector<double>& vars,
                            bool emit_transformed_parameters = true,
                            bool emit_generated_quantities = true,
                            std::ostream* pstream = nullptr) const {
      const size_t num_params__ = 1;
      const size_t num_transformed = 
  (((((((((((((((((((((((((((((536870912 + 1048576) + 524288) + 262144) +
                             131072) + 65536) + 32768) + 16384) + 8192) +
                        4096) + 2048) + 268435456) + 1024) + 512) + 256) +
                  128) + 64) + 32) + 16) + 8) + 4) + 2) + 134217728) + 1) +
         67108864) + 33554432) + 16777216) + 8388608) + 4194304) + 2097152);
      const size_t num_gen_quantities = 
  (((((((((((((((((((((((((((((1 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1)
                       + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1)
            + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1);
      vars.resize(num_params__
        + (emit_transformed_parameters * num_transformed)
        + (emit_generated_quantities * num_gen_quantities));
      write_array_impl(base_rng, params_r, params_i, vars, emit_transformed_parameters, emit_generated_quantities, pstream);
    }

    template <bool propto__, bool jacobian__, typename T_>
    inline T_ log_prob(Eigen::Matrix<T_,Eigen::Dynamic,1>& params_r,
                       std::ostream* pstream = nullptr) const {
      Eigen::Matrix<int, -1, 1> params_i;
      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);
    }

    template <bool propto__, bool jacobian__, typename T__>
    inline T__ log_prob(std::vector<T__>& params_r,
                        std::vector<int>& params_i,
                        std::ostream* pstream = nullptr) const {
      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);
    }


    inline void transform_inits(const stan::io::var_context& context,
                         Eigen::Matrix<double, Eigen::Dynamic, 1>& params_r,
                         std::ostream* pstream = nullptr) const final {
      std::vector<double> params_r_vec(params_r.size());
      std::vector<int> params_i;
      transform_inits(context, params_i, params_r_vec, pstream);
      params_r = Eigen::Map<Eigen::Matrix<double,Eigen::Dynamic,1>>(
        params_r_vec.data(), params_r_vec.size());
    }

  inline void transform_inits(const stan::io::var_context& context,
                              std::vector<int>& params_i,
                              std::vector<double>& vars,
                              std::ostream* pstream__ = nullptr) const {
     constexpr std::array<const char*, 1> names__{"prior"};
      const std::array<Eigen::Index, 1> constrain_param_sizes__{1};
      const auto num_constrained_params__ = std::accumulate(
        constrain_param_sizes__.begin(), constrain_param_sizes__.end(), 0);
    
     std::vector<double> params_r_flat__(num_constrained_params__);
     Eigen::Index size_iter__ = 0;
     Eigen::Index flat_iter__ = 0;
     for (auto&& param_name__ : names__) {
       const auto param_vec__ = context.vals_r(param_name__);
       for (Eigen::Index i = 0; i < constrain_param_sizes__[size_iter__]; ++i) {
         params_r_flat__[flat_iter__] = param_vec__[i];
         ++flat_iter__;
       }
       ++size_iter__;
     }
     vars.resize(num_params_r__);
     transform_inits_impl(params_r_flat__, params_i, vars, pstream__);
    } // transform_inits() 
    
};
}
using stan_model = or_30_model_namespace::or_30_model;

#ifndef USING_R

// Boilerplate
stan::model::model_base& new_model(
        stan::io::var_context& data_context,
        unsigned int seed,
        std::ostream* msg_stream) {
  stan_model* m = new stan_model(data_context, seed, msg_stream);
  return *m;
}

stan::math::profile_map& get_stan_profile_data() {
  return or_30_model_namespace::profiles__;
}

#endif


